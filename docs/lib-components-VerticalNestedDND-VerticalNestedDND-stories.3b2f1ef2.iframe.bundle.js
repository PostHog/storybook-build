"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[8771],{"../../frontend/src/lib/components/VerticalNestedDND/VerticalNestedDND.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _VerticalNestedDND__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/lib/components/VerticalNestedDND/VerticalNestedDND.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Components/VerticalNestedDND",component:_VerticalNestedDND__WEBPACK_IMPORTED_MODULE_0__.Ke,parameters:{testOptions:{waitForLoadersToDisappear:!1}},tags:["autodocs"]},counter=0,Base=(props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_VerticalNestedDND__WEBPACK_IMPORTED_MODULE_0__.Ke,{...props,createNewChildItem:()=>({id:`new-${counter++}`}),createNewContainerItem:()=>({id:`new-${counter++}`,items:[]}),onChange:items=>console.log("onChange",items),initialItems:[{id:"A",items:[{id:"A1"},{id:"A2"},{id:"A3"}]},{id:"B",items:[{id:"B1"},{id:"B2"},{id:"B3"}]}]})).bind({});Base.parameters={...Base.parameters,docs:{...Base.parameters?.docs,source:{originalSource:"(props: VerticalNestedDNDProps<ExampleSubItem, ExampleItem>) => {\n  const starterData: ExampleItem[] = [{\n    id: 'A',\n    items: [{\n      id: 'A1'\n    }, {\n      id: 'A2'\n    }, {\n      id: 'A3'\n    }]\n  }, {\n    id: 'B',\n    items: [{\n      id: 'B1'\n    }, {\n      id: 'B2'\n    }, {\n      id: 'B3'\n    }]\n  }];\n  const createNewChildItem = (): ExampleSubItem => {\n    return {\n      id: `new-${counter++}`\n    };\n  };\n  const createNewContainerItem = (): ExampleItem => {\n    return {\n      id: `new-${counter++}`,\n      items: []\n    };\n  };\n  return <VerticalNestedDND {...props} createNewChildItem={createNewChildItem} createNewContainerItem={createNewContainerItem}\n  /* eslint-disable-next-line no-console */ onChange={items => console.log('onChange', items)} initialItems={starterData} />;\n}",...Base.parameters?.docs?.source}}};let __namedExportsOrder=["Base"]}}]);