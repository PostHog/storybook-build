"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[5903],{"./frontend/src/lib/lemon-ui/LemonCalendarRange/LemonCalendarRangeInline.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LemonCalendarRangeInline_:()=>LemonCalendarRangeInline_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lib_dayjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/lib/dayjs.ts"),lib_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/utils.tsx"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_LemonCalendarRangeInline__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonCalendarRange/LemonCalendarRangeInline.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon Calendar/Lemon Calendar Range Inline",component:_LemonCalendarRangeInline__WEBPACK_IMPORTED_MODULE_3__.S,parameters:{mockDate:"2023-01-26"},tags:["autodocs"]},LemonCalendarRangeInline_=(props=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([(0,lib_dayjs__WEBPACK_IMPORTED_MODULE_0__.Bv)("2022-08-11"),(0,lib_dayjs__WEBPACK_IMPORTED_MODULE_0__.Bv)("2022-08-26")]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_LemonCalendarRangeInline__WEBPACK_IMPORTED_MODULE_3__.S,{...props,value,onChange:value=>{setValue(value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("p",{className:"mt-2",children:["Value is: ",value?(0,lib_utils__WEBPACK_IMPORTED_MODULE_1__._Q)(...value):""]})]})}).bind({});LemonCalendarRangeInline_.args={},LemonCalendarRangeInline_.parameters={...LemonCalendarRangeInline_.parameters,docs:{...LemonCalendarRangeInline_.parameters?.docs,source:{originalSource:"(props: LemonCalendarRangeProps) => {\n  const [value, setValue] = useState(([dayjs('2022-08-11'), dayjs('2022-08-26')] as [dayjs.Dayjs, dayjs.Dayjs] | null));\n  return <>\n            <LemonCalendarRangeInline {...props} value={value} onChange={value => {\n      setValue(value);\n    }} />\n\n            <p className=\"mt-2\">Value is: {value ? formatDateRange(...value) : ''}</p>\n        </>;\n}",...LemonCalendarRangeInline_.parameters?.docs?.source}}};const __namedExportsOrder=["LemonCalendarRangeInline_"]}}]);