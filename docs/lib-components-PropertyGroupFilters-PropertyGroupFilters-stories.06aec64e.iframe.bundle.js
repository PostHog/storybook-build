"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[5164],{"./frontend/src/lib/components/PropertyGroupFilters/PropertyGroupFilters.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EmptyGroupPropertyFilters:()=>EmptyGroupPropertyFilters,GroupPropertyFilters:()=>GroupPropertyFilters,default:()=>PropertyGroupFilters_stories});var index_esm=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),browser=__webpack_require__("./frontend/src/mocks/browser.tsx"),cohortsModel=__webpack_require__("./frontend/src/models/cohortsModel.ts"),types=__webpack_require__("./frontend/src/types.ts"),TaxonomicFilter_types=__webpack_require__("./frontend/src/lib/components/TaxonomicFilter/types.ts"),utils=(__webpack_require__("./frontend/src/lib/components/PropertyGroupFilters/PropertyGroupFilters.scss"),__webpack_require__("./frontend/src/lib/components/PropertyFilters/utils.ts")),icons=__webpack_require__("./frontend/src/lib/lemon-ui/icons/index.ts"),LemonButton=__webpack_require__("./frontend/src/lib/lemon-ui/LemonButton/index.ts"),LemonDivider=__webpack_require__("./frontend/src/lib/lemon-ui/LemonDivider/index.ts"),common=__webpack_require__("./frontend/src/scenes/insights/common.tsx"),TestAccountFilter=__webpack_require__("./frontend/src/scenes/insights/filters/TestAccountFilter/index.ts"),AndOrFilterSelect=__webpack_require__("./frontend/src/queries/nodes/InsightViz/PropertyGroupFilters/AndOrFilterSelect.tsx"),PropertyFilters=__webpack_require__("./frontend/src/lib/components/PropertyFilters/PropertyFilters.tsx"),lib_utils=__webpack_require__("./frontend/src/lib/utils.tsx"),eventUsageLogic=__webpack_require__("./frontend/src/lib/utils/eventUsageLogic.ts");const propertyGroupFilterLogic=(0,index_esm.kea)([(0,index_esm.path)(["lib","components","PropertyGroupFilters","propertyGroupFilterLogic"]),(0,index_esm.props)({}),(0,index_esm.key)((props=>props.pageKey)),(0,index_esm.propsChanged)(((_ref,oldProps)=>{let{actions,props}=_ref;props.value&&!(0,lib_utils.h0)(props.value,oldProps.value)&&actions.setFilters(props.value)})),(0,index_esm.actions)({update:propertyGroupIndex=>({propertyGroupIndex}),setFilters:filters=>({filters}),removeFilterGroup:filterGroup=>({filterGroup}),setOuterPropertyGroupsType:type=>({type}),setPropertyFilters:(properties,index)=>({properties,index}),setInnerPropertyGroupType:(type,index)=>({type,index}),duplicateFilterGroup:propertyGroupIndex=>({propertyGroupIndex}),addFilterGroup:!0}),(0,index_esm.reducers)((_ref2=>{let{props}=_ref2;return{filters:[(0,utils.N0)(props.value),{setFilters:(_,_ref3)=>{let{filters}=_ref3;return filters},addFilterGroup:state=>{if(!state.values)return{type:types.J2.And,values:[{type:types.J2.And,values:[{}]}]};const filterGroups=[...state.values,{type:types.J2.And,values:[{}]}];return{...state,values:filterGroups}},removeFilterGroup:(state,_ref4)=>{let{filterGroup}=_ref4;const filteredGroups=[...state.values];return filteredGroups.splice(filterGroup,1),{...state,values:filteredGroups}},setOuterPropertyGroupsType:(state,_ref5)=>{let{type}=_ref5;return{...state,type}},setPropertyFilters:(state,_ref6)=>{let{properties,index}=_ref6;const values=[...state.values];return values[index]={...values[index],values:properties},{...state,values}},setInnerPropertyGroupType:(state,_ref7)=>{let{type,index}=_ref7;const values=[...state.values];return values[index]={...values[index],type},{...state,values}},duplicateFilterGroup:(state,_ref8)=>{let{propertyGroupIndex}=_ref8;const values=state.values.concat([state.values[propertyGroupIndex]]);return{...state,values}}}]}})),(0,index_esm.listeners)((_ref9=>{let{actions,props,values}=_ref9;return{setFilters:()=>actions.update(),setPropertyFilters:()=>actions.update(),setInnerPropertyGroupType:_ref10=>{let{type,index}=_ref10;eventUsageLogic.vx.actions.reportChangeInnerPropertyGroupFiltersType(type,values.filters.values[index].values.length),actions.update()},setOuterPropertyGroupsType:_ref11=>{let{type}=_ref11;eventUsageLogic.vx.actions.reportChangeOuterPropertyGroupFiltersType(type,values.filters.values.length),actions.update()},removeFilterGroup:()=>actions.update(),addFilterGroup:()=>{eventUsageLogic.vx.actions.reportPropertyGroupFilterAdded()},update:()=>{props.onChange(values.filters)}}})),(0,index_esm.selectors)({propertyGroupFilter:[s=>[s.filters],propertyGroupFilter=>propertyGroupFilter]})]);var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");function PropertyGroupFilters_PropertyGroupFilters(_ref){let{value,onChange,pageKey,taxonomicGroupTypes,eventNames=[],setTestFilters,filters,noTitle}=_ref;const logicProps={value,onChange,pageKey},{propertyGroupFilter}=(0,index_esm.useValues)(propertyGroupFilterLogic(logicProps)),{addFilterGroup,removeFilterGroup,setOuterPropertyGroupsType,setInnerPropertyGroupType,setPropertyFilters,duplicateFilterGroup}=(0,index_esm.useActions)(propertyGroupFilterLogic(logicProps)),showHeader=!noTitle||propertyGroupFilter.type&&propertyGroupFilter.values.length>1;return(0,jsx_runtime.jsxs)("div",{className:"space-y-2 property-group-filters",children:[propertyGroupFilter.values&&(0,jsx_runtime.jsxs)(index_esm.BindLogic,{logic:propertyGroupFilterLogic,props:logicProps,children:[(0,jsx_runtime.jsx)(TestAccountFilter.z,{filters,onChange:testFilters=>setTestFilters(testFilters)}),showHeader?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between",children:[noTitle?null:(0,jsx_runtime.jsx)(common.i,{orFiltering:!0}),propertyGroupFilter.type&&propertyGroupFilter.values.length>1&&(0,jsx_runtime.jsx)(AndOrFilterSelect.n,{value:propertyGroupFilter.type,onChange:value=>setOuterPropertyGroupsType(value),topLevelFilter:!0,suffix:["group","groups"]})]}),(0,jsx_runtime.jsx)(LemonDivider.p,{className:"my-4"})]}):null,propertyGroupFilter.values?.length?(0,jsx_runtime.jsx)("div",{children:propertyGroupFilter.values?.map(((group,propertyGroupIndex)=>(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{className:"property-group",children:[(0,jsx_runtime.jsxs)("div",{className:"flex justify-between items-center mb-2",children:[(0,jsx_runtime.jsx)(AndOrFilterSelect.n,{onChange:type=>setInnerPropertyGroupType(type,propertyGroupIndex),value:group.type}),(0,jsx_runtime.jsx)("div",{style:{marginLeft:8,marginRight:8,height:1,background:"#d9d9d9",flex:1}}),(0,jsx_runtime.jsx)(LemonButton.Jp,{icon:(0,jsx_runtime.jsx)(icons.vUr,{}),status:"primary-alt",onClick:()=>duplicateFilterGroup(propertyGroupIndex),size:"small"}),(0,jsx_runtime.jsx)(LemonButton.Jp,{icon:(0,jsx_runtime.jsx)(icons.Fzz,{}),status:"primary-alt",onClick:()=>removeFilterGroup(propertyGroupIndex),size:"small"})]}),(0,jsx_runtime.jsx)(PropertyFilters.t,{orFiltering:!0,addText:"Add filter",propertyFilters:(0,utils.cs)(group)?group.values:null,onChange:properties=>{setPropertyFilters(properties,propertyGroupIndex)},pageKey:`insight-filters-${propertyGroupIndex}`,taxonomicGroupTypes,eventNames,propertyGroupType:group.type})]}),propertyGroupIndex!==propertyGroupFilter.values.length-1&&(0,jsx_runtime.jsx)("div",{className:"property-group-and-or-separator",children:(0,jsx_runtime.jsx)("span",{children:propertyGroupFilter.type})})]},propertyGroupIndex)))}):null]}),(0,jsx_runtime.jsx)(LemonButton.Jp,{"data-attr":`${pageKey}-add-filter-group`,type:"secondary",onClick:()=>addFilterGroup(),icon:(0,jsx_runtime.jsx)(icons.yZf,{color:"var(--primary)"}),sideIcon:null,children:"Add filter group"})]})}try{PropertyGroupFilters_PropertyGroupFilters.displayName="PropertyGroupFilters",PropertyGroupFilters_PropertyGroupFilters.__docgenInfo={description:"",displayName:"PropertyGroupFilters",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"PropertyGroupFilter"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(filters: PropertyGroupFilter) => void"}},pageKey:{defaultValue:null,description:"",name:"pageKey",required:!0,type:{name:"string"}},taxonomicGroupTypes:{defaultValue:null,description:"",name:"taxonomicGroupTypes",required:!1,type:{name:"TaxonomicFilterGroupType[]"}},eventNames:{defaultValue:{value:"[]"},description:"",name:"eventNames",required:!1,type:{name:"string[]"}},setTestFilters:{defaultValue:null,description:"",name:"setTestFilters",required:!0,type:{name:"(filters: Partial<FilterType>) => void"}},filters:{defaultValue:null,description:"",name:"filters",required:!0,type:{name:"Partial<FilterType>"}},noTitle:{defaultValue:null,description:"",name:"noTitle",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["frontend/src/lib/components/PropertyGroupFilters/PropertyGroupFilters.tsx#PropertyGroupFilters"]={docgenInfo:PropertyGroupFilters_PropertyGroupFilters.__docgenInfo,name:"PropertyGroupFilters",path:"frontend/src/lib/components/PropertyGroupFilters/PropertyGroupFilters.tsx#PropertyGroupFilters"})}catch(__react_docgen_typescript_loader_error){}const PropertyGroupFilters_stories={title:"Filters/PropertyGroupFilters",component:PropertyGroupFilters_PropertyGroupFilters},propertyFilters=[{key:"$timestamp",operator:types.WV.IsDateAfter,type:"event",value:"2020-04-01 12:34:56"},{key:"Browser",operator:types.WV.Exact,type:"event",value:"Chrome"}],taxonomicGroupTypes=[TaxonomicFilter_types.t.EventProperties,TaxonomicFilter_types.t.PersonProperties,TaxonomicFilter_types.t.EventFeatureFlags,TaxonomicFilter_types.t.Cohorts,TaxonomicFilter_types.t.Elements];function GroupPropertyFilters(){(0,browser.ok)({get:{"/api/event/values/":[]}}),(0,index_esm.useMountedLogic)(cohortsModel.Q);const[propertyGroupFilter,setPropertyGroupFilter]=(0,react.useState)({type:types.J2.And,values:[{type:types.J2.Or,values:propertyFilters},{type:types.J2.And,values:propertyFilters}]}),[filters,setFilters]=(0,react.useState)({properties:propertyFilters});return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(PropertyGroupFilters_PropertyGroupFilters,{value:propertyGroupFilter,onChange:setPropertyGroupFilter,pageKey:"page",taxonomicGroupTypes,setTestFilters:f=>setFilters(f),filters,noTitle:!0})})}function EmptyGroupPropertyFilters(){(0,index_esm.useMountedLogic)(cohortsModel.Q);const[propertyGroupFilter,setPropertyGroupFilter]=(0,react.useState)({type:types.J2.And,values:[]}),[filters,setFilters]=(0,react.useState)({});return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(PropertyGroupFilters_PropertyGroupFilters,{value:propertyGroupFilter,onChange:setPropertyGroupFilter,pageKey:"page-empty",taxonomicGroupTypes,setTestFilters:f=>setFilters(f),filters,noTitle:!0}),(0,jsx_runtime.jsx)("hr",{})]})}GroupPropertyFilters.parameters={...GroupPropertyFilters.parameters,docs:{...GroupPropertyFilters.parameters?.docs,source:{originalSource:"function GroupPropertyFilters(): JSX.Element {\n  useStorybookMocks({\n    get: {\n      '/api/event/values/': []\n    }\n  });\n  useMountedLogic(cohortsModel);\n  const [propertyGroupFilter, setPropertyGroupFilter] = useState<PropertyGroupFilter>({\n    type: FilterLogicalOperator.And,\n    values: [{\n      type: FilterLogicalOperator.Or,\n      values: propertyFilters\n    }, {\n      type: FilterLogicalOperator.And,\n      values: propertyFilters\n    }]\n  });\n  const [filters, setFilters] = useState<FilterType>({\n    properties: propertyFilters\n  });\n  return <>\n            <PropertyGroupFilters value={propertyGroupFilter} onChange={setPropertyGroupFilter} pageKey=\"page\" taxonomicGroupTypes={taxonomicGroupTypes}\n    // eventNames?: string[]\n    setTestFilters={f => setFilters(f)} filters={filters} noTitle />\n        </>;\n}",...GroupPropertyFilters.parameters?.docs?.source}}},EmptyGroupPropertyFilters.parameters={...EmptyGroupPropertyFilters.parameters,docs:{...EmptyGroupPropertyFilters.parameters?.docs,source:{originalSource:'function EmptyGroupPropertyFilters(): JSX.Element {\n  useMountedLogic(cohortsModel);\n  const [propertyGroupFilter, setPropertyGroupFilter] = useState<PropertyGroupFilter>({\n    type: FilterLogicalOperator.And,\n    values: []\n  });\n  const [filters, setFilters] = useState<FilterType>({});\n  return <>\n            <PropertyGroupFilters value={propertyGroupFilter} onChange={setPropertyGroupFilter} pageKey="page-empty" taxonomicGroupTypes={taxonomicGroupTypes}\n    // eventNames?: string[]\n    setTestFilters={f => setFilters(f)} filters={filters} noTitle />\n            <hr />\n        </>;\n}',...EmptyGroupPropertyFilters.parameters?.docs?.source}}}}}]);