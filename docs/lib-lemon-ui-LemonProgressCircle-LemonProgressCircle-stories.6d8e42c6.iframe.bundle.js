"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[16498],{"../../frontend/src/lib/lemon-ui/LemonProgressCircle/LemonProgressCircle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Overview:()=>Overview,Template:()=>Template,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_posthog_icons__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/@posthog+icons@0.28.1_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/@posthog/icons/dist/posthog-icons.es.js"),_LemonButton__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonButton/index.ts"),_LemonCheckbox__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonCheckbox/index.ts"),_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonProgressCircle/LemonProgressCircle.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon Progress Circle",component:_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,parameters:{docs:{description:{component:`

[Related Figma area](https://www.figma.com/file/Y9G24U4r04nEjIDGIEGuKI/PostHog-Design-System-One?node-id=3139%3A1388)

Lemon Labels provide common styling and options for labeling form elements. They can be used directly but most commonly should be used via the \`Field\` component.

`}}},args:{progress:.3},tags:["autodocs"]},Template=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{...props}),Basic=Template.bind({});Basic.args={progress:.3};let Overview=()=>{let[progress,setProgress]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(.2),[animate,setAnimate]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(!animate)return;let interval=setInterval(()=>{setProgress(progress=>{let newProgress=progress+.1;return newProgress>1?newProgress-1:newProgress})},500);return()=>clearInterval(interval)},[animate]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{className:"flex flex-col gap-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonCheckbox__WEBPACK_IMPORTED_MODULE_3__.H,{checked:animate,onChange:setAnimate,bordered:!0,label:"Animate"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{progress:progress}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{progress:progress,strokePercentage:.5,size:30}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("span",{className:"flex items-center gap-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonButton__WEBPACK_IMPORTED_MODULE_2__.J,{icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{progress:progress}),sideIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_posthog_icons__WEBPACK_IMPORTED_MODULE_1__.IconGear,{}),type:"secondary",size:"small",children:"In a button!"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonButton__WEBPACK_IMPORTED_MODULE_2__.J,{icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{progress:progress,size:20}),sideIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_posthog_icons__WEBPACK_IMPORTED_MODULE_1__.IconGear,{}),type:"secondary",children:"In a button!"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonButton__WEBPACK_IMPORTED_MODULE_2__.J,{icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{progress:progress,size:24}),sideIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_posthog_icons__WEBPACK_IMPORTED_MODULE_1__.IconGear,{}),type:"secondary",size:"large",children:"In a button!"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{progress:progress,size:40,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("span",{className:"font-semibold text-sm",children:(100*progress).toFixed(0)})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("span",{children:["Here is one inline ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_LemonProgressCircle__WEBPACK_IMPORTED_MODULE_4__.L,{progress:progress})," with some text..."]})]})};Template.parameters={...Template.parameters,docs:{...Template.parameters?.docs,source:{originalSource:"(props: LemonProgressCircleProps) => {\n  return <LemonProgressCircle {...props} />;\n}",...Template.parameters?.docs?.source}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(props: LemonProgressCircleProps) => {\n  return <LemonProgressCircle {...props} />;\n}",...Basic.parameters?.docs?.source}}},Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  const [progress, setProgress] = useState(0.2);\n  const [animate, setAnimate] = useState(false);\n  useEffect(() => {\n    if (!animate) {\n      return;\n    }\n    const interval = setInterval(() => {\n      setProgress(progress => {\n        const newProgress = progress + 0.1;\n        return newProgress > 1 ? newProgress - 1 : newProgress;\n      });\n    }, 500);\n    return () => clearInterval(interval);\n  }, [animate]);\n  return <div className="flex flex-col gap-2">\n            <LemonCheckbox checked={animate} onChange={setAnimate} bordered label="Animate" />\n            <LemonProgressCircle progress={progress} />\n            <LemonProgressCircle progress={progress} strokePercentage={0.5} size={30} />\n\n            <span className="flex items-center gap-2">\n                <LemonButton icon={<LemonProgressCircle progress={progress} />} sideIcon={<IconGear />} type="secondary" size="small">\n                    In a button!\n                </LemonButton>\n\n                <LemonButton icon={<LemonProgressCircle progress={progress} size={20} />} sideIcon={<IconGear />} type="secondary">\n                    In a button!\n                </LemonButton>\n\n                <LemonButton icon={<LemonProgressCircle progress={progress} size={24} />} sideIcon={<IconGear />} type="secondary" size="large">\n                    In a button!\n                </LemonButton>\n            </span>\n\n            <LemonProgressCircle progress={progress} size={40}>\n                <span className="font-semibold text-sm">{(100 * progress).toFixed(0)}</span>\n            </LemonProgressCircle>\n\n            <span>\n                Here is one inline <LemonProgressCircle progress={progress} /> with some text...\n            </span>\n        </div>;\n}',...Overview.parameters?.docs?.source}}};let __namedExportsOrder=["Template","Basic","Overview"]}}]);
//# sourceMappingURL=lib-lemon-ui-LemonProgressCircle-LemonProgressCircle-stories.6d8e42c6.iframe.bundle.js.map