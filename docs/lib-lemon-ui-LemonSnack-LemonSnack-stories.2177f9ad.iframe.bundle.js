"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[64014],{"../../frontend/src/lib/lemon-ui/LemonSnack/LemonSnack.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComplexContent:()=>ComplexContent,Default:()=>Default,OverflowOptions:()=>OverflowOptions,Pill:()=>Pill,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _ProfilePicture__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/lib/lemon-ui/ProfilePicture/index.ts"),_LemonSnack__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonSnack/LemonSnack.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon Snack",component:_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,args:{children:"Tasty snacks"},tags:["autodocs"]},BasicTemplate=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,{...props}),Default=BasicTemplate.bind({});Default.args={onClose:null};let Pill=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:"flex flex-row space-x-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,{type:"pill",children:"Pill"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,{type:"pill",onClick:()=>alert("onClick"),children:"Clickable"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,{type:"pill",onClose:()=>alert("onClose"),children:"Closeable"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,{type:"pill",onClick:()=>alert("onClick"),onClose:()=>alert("onClose"),children:"Click- and Closeable"})]}),ComplexContent=BasicTemplate.bind({});ComplexContent.args={children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{className:"flex gap-2 items-center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ProfilePicture__WEBPACK_IMPORTED_MODULE_0__.Y,{name:"ben",size:"sm"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{children:["Look at me I'm ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("b",{children:"bold!"})]})]}),onClose:()=>alert("Close clicked!")};let OverflowOptions=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("p",{children:"By default the LemonSnack does not wrap content but this can be changed with the wrap property"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:"bg-border p-2 space-y-2 w-60",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,{onClose:()=>{},children:"qwertzuiopasdfghjklyxcvbnm1234567890"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonSnack__WEBPACK_IMPORTED_MODULE_1__.L,{onClose:()=>{},wrap:!0,children:"Overflow-qwertzuiopasdfghjklyxcvbnm1234567890"})]})]});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(props: LemonSnackProps) => {\n  return <LemonSnack {...props} />;\n}",...Default.parameters?.docs?.source}}},Pill.parameters={...Pill.parameters,docs:{...Pill.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  return <div className="flex flex-row space-x-2">\n            <LemonSnack type="pill">Pill</LemonSnack>\n            <LemonSnack type="pill" onClick={() => alert(\'onClick\')}>\n                Clickable\n            </LemonSnack>\n            <LemonSnack type="pill" onClose={() => alert(\'onClose\')}>\n                Closeable\n            </LemonSnack>\n            <LemonSnack type="pill" onClick={() => alert(\'onClick\')} onClose={() => alert(\'onClose\')}>\n                Click- and Closeable\n            </LemonSnack>\n        </div>;\n}',...Pill.parameters?.docs?.source}}},ComplexContent.parameters={...ComplexContent.parameters,docs:{...ComplexContent.parameters?.docs,source:{originalSource:"(props: LemonSnackProps) => {\n  return <LemonSnack {...props} />;\n}",...ComplexContent.parameters?.docs?.source}}},OverflowOptions.parameters={...OverflowOptions.parameters,docs:{...OverflowOptions.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  return <>\n            <p>By default the LemonSnack does not wrap content but this can be changed with the wrap property</p>\n            <div className="bg-border p-2 space-y-2 w-60">\n                <LemonSnack onClose={() => {}}>qwertzuiopasdfghjklyxcvbnm1234567890</LemonSnack>\n                <LemonSnack onClose={() => {}} wrap>\n                    Overflow-qwertzuiopasdfghjklyxcvbnm1234567890\n                </LemonSnack>\n            </div>\n        </>;\n}',...OverflowOptions.parameters?.docs?.source}}};let __namedExportsOrder=["Default","Pill","ComplexContent","OverflowOptions"]}}]);