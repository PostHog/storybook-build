"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[155],{"./frontend/src/lib/lemon-ui/LemonSelectMultiple/LemonSelectMultiple.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Loading:()=>Loading,MultipleSelect:()=>MultipleSelect,MultipleSelectWithCustom:()=>MultipleSelectWithCustom,NoOptions:()=>NoOptions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lib_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/lib/utils.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_ProfilePicture__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/lib/lemon-ui/ProfilePicture/index.ts"),_LemonSelectMultiple__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonSelectMultiple/LemonSelectMultiple.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let meta={title:"Lemon UI/Lemon SelectMultiple",component:_LemonSelectMultiple__WEBPACK_IMPORTED_MODULE_3__.E,args:{options:["ben","marius","paul","tiina","li"].reduce((acc,x,i)=>({...acc,[`user-${i}`]:{labelComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("span",{className:"flex gap-2 items-center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ProfilePicture__WEBPACK_IMPORTED_MODULE_2__.Y,{user:{first_name:x,email:`${x}@posthog.com`},size:"sm"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("span",{children:[(0,lib_utils__WEBPACK_IMPORTED_MODULE_0__.fm)(x)," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("b",{children:`<${x}@posthog.com>`})]})]}),label:`${x} ${x}@posthog.com>`}}),{})},tags:["autodocs"]},__WEBPACK_DEFAULT_EXPORT__=meta,Template=props=>{let[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(props.value||[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_LemonSelectMultiple__WEBPACK_IMPORTED_MODULE_3__.E,{...props,value:value,onChange:setValue})},Default=Template.bind({});Default.args={placeholder:"Pick one email"};let MultipleSelect=Template.bind({});MultipleSelect.args={placeholder:"Enter emails...",mode:"multiple"};let MultipleSelectWithCustom=Template.bind({});MultipleSelectWithCustom.args={placeholder:"Enter any email...",mode:"multiple-custom"};let Disabled=Template.bind({});Disabled.args={placeholder:"Disabled...",disabled:!0};let Loading=Template.bind({});Loading.args={placeholder:"Loading...",options:[],loading:!0},Loading.parameters={testOptions:{waitForLoadersToDisappear:!1}};let NoOptions=Template.bind({});NoOptions.args={mode:"multiple-custom",placeholder:"No options...",options:[]},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(props: LemonSelectMultipleProps) => {\n  const [value, setValue] = useState(props.value || []);\n  return <LemonSelectMultiple {...props} value={value} onChange={setValue} />;\n}",...Default.parameters?.docs?.source}}},MultipleSelect.parameters={...MultipleSelect.parameters,docs:{...MultipleSelect.parameters?.docs,source:{originalSource:"(props: LemonSelectMultipleProps) => {\n  const [value, setValue] = useState(props.value || []);\n  return <LemonSelectMultiple {...props} value={value} onChange={setValue} />;\n}",...MultipleSelect.parameters?.docs?.source}}},MultipleSelectWithCustom.parameters={...MultipleSelectWithCustom.parameters,docs:{...MultipleSelectWithCustom.parameters?.docs,source:{originalSource:"(props: LemonSelectMultipleProps) => {\n  const [value, setValue] = useState(props.value || []);\n  return <LemonSelectMultiple {...props} value={value} onChange={setValue} />;\n}",...MultipleSelectWithCustom.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"(props: LemonSelectMultipleProps) => {\n  const [value, setValue] = useState(props.value || []);\n  return <LemonSelectMultiple {...props} value={value} onChange={setValue} />;\n}",...Disabled.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"(props: LemonSelectMultipleProps) => {\n  const [value, setValue] = useState(props.value || []);\n  return <LemonSelectMultiple {...props} value={value} onChange={setValue} />;\n}",...Loading.parameters?.docs?.source}}},NoOptions.parameters={...NoOptions.parameters,docs:{...NoOptions.parameters?.docs,source:{originalSource:"(props: LemonSelectMultipleProps) => {\n  const [value, setValue] = useState(props.value || []);\n  return <LemonSelectMultiple {...props} value={value} onChange={setValue} />;\n}",...NoOptions.parameters?.docs?.source}}};let __namedExportsOrder=["Default","MultipleSelect","MultipleSelectWithCustom","Disabled","Loading","NoOptions"]}}]);