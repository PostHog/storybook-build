"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[31117],{"../../frontend/src/lib/components/SearchAutocomplete/SearchAutocomplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _SearchAutocomplete__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/lib/components/SearchAutocomplete/SearchAutocomplete.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"UI/SearchAutocomplete",component:_SearchAutocomplete__WEBPACK_IMPORTED_MODULE_0__.q,tags:["autodocs"]};function Default(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"flex flex-col gap-4 max-w-lg",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_SearchAutocomplete__WEBPACK_IMPORTED_MODULE_0__.q,{inputPlaceholder:"Search for food",searchData:[[{value:"type",label:"type",hint:"Search by type"},[{value:"fruit",label:"Fruit",hint:"hint for fruit"},{value:"vegetable",label:"Vegetable",hint:"hint for vegetable"},{value:"meat",label:"Meat",hint:"hint for meat"}],"I'm a hint for type, type a type"],[{value:"name",label:"name",hint:"Search by name"},void 0,"I have no suggestions, but type any name"],[{value:"color",label:"color",hint:"Search by color"},[{value:"red",label:"Red",hint:"hint for red"},{value:"green",label:"Green",hint:"hint for green"},{value:"blue",label:"Blue",hint:"hint for blue"}],"I'm a hint for color, type a color"]]})})}Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"function Default(): JSX.Element {\n  return <div className=\"flex flex-col gap-4 max-w-lg\">\n            <SearchAutocomplete inputPlaceholder=\"Search for food\" searchData={[[\n    // Item to filter by\n    {\n      value: 'type',\n      label: 'type',\n      hint: 'Search by type'\n    },\n    // Suggestions once type is satisfied\n    [{\n      value: 'fruit',\n      label: 'Fruit',\n      hint: 'hint for fruit'\n    }, {\n      value: 'vegetable',\n      label: 'Vegetable',\n      hint: 'hint for vegetable'\n    }, {\n      value: 'meat',\n      label: 'Meat',\n      hint: 'hint for meat'\n    }],\n    // Hint once type is satisfied\n    \"I'm a hint for type, type a type\"], [\n    // Item to filter by\n    {\n      value: 'name',\n      label: 'name',\n      hint: 'Search by name'\n    },\n    // Suggestions once name is satisfied\n    undefined,\n    // Hint once name is satisfied\n    'I have no suggestions, but type any name'], [\n    // Item to filter by\n    {\n      value: 'color',\n      label: 'color',\n      hint: 'Search by color'\n    },\n    // Suggestions once color is satisfied\n    [{\n      value: 'red',\n      label: 'Red',\n      hint: 'hint for red'\n    }, {\n      value: 'green',\n      label: 'Green',\n      hint: 'hint for green'\n    }, {\n      value: 'blue',\n      label: 'Blue',\n      hint: 'hint for blue'\n    }],\n    // Hint once color is satisfied\n    \"I'm a hint for color, type a color\"]]} />\n        </div>;\n}",...Default.parameters?.docs?.source}}};let __namedExportsOrder=["Default"]}}]);