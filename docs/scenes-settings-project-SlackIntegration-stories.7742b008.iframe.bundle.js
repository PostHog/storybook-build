"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[75884],{"./frontend/src/scenes/settings/project/SlackIntegration.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SlackIntegrationAdded:()=>SlackIntegrationAdded,SlackIntegrationInstanceNotConfigured:()=>SlackIntegrationInstanceNotConfigured,SlackIntegration_:()=>SlackIntegration_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _mocks_browser__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/mocks/browser.tsx"),_mocks_features__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./frontend/src/mocks/features.ts"),_test_mocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/test/mocks.ts"),_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/types.ts"),_SlackIntegration__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/scenes/settings/project/SlackIntegration.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let meta={title:"Components/Integrations/Slack",component:_SlackIntegration__WEBPACK_IMPORTED_MODULE_3__.C,parameters:{}},__WEBPACK_DEFAULT_EXPORT__=meta,Template=args=>{let{instanceConfigured=!0,integrated=!1}=args;return(0,_mocks_features__WEBPACK_IMPORTED_MODULE_5__.y)([_types__WEBPACK_IMPORTED_MODULE_2__.P$.SUBSCRIPTIONS]),(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_0__.ok)({get:{"/api/projects/:id/integrations":{results:integrated?[_test_mocks__WEBPACK_IMPORTED_MODULE_1__.Eu]:[]},"/api/instance_settings":{results:instanceConfigured?[{key:"SLACK_APP_CLIENT_ID",value:"910200304849.3676478528614"},{key:"SLACK_APP_CLIENT_SECRET",value:"*****"}]:[]}}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_SlackIntegration__WEBPACK_IMPORTED_MODULE_3__.C,{})},SlackIntegration_=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Template,{}),SlackIntegrationInstanceNotConfigured=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Template,{instanceConfigured:!1}),SlackIntegrationAdded=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Template,{integrated:!0});SlackIntegration_.parameters={...SlackIntegration_.parameters,docs:{...SlackIntegration_.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  return <Template />;\n}",...SlackIntegration_.parameters?.docs?.source}}},SlackIntegrationInstanceNotConfigured.parameters={...SlackIntegrationInstanceNotConfigured.parameters,docs:{...SlackIntegrationInstanceNotConfigured.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  return <Template instanceConfigured={false} />;\n}",...SlackIntegrationInstanceNotConfigured.parameters?.docs?.source}}},SlackIntegrationAdded.parameters={...SlackIntegrationAdded.parameters,docs:{...SlackIntegrationAdded.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  return <Template integrated />;\n}",...SlackIntegrationAdded.parameters?.docs?.source}}};let __namedExportsOrder=["SlackIntegration_","SlackIntegrationInstanceNotConfigured","SlackIntegrationAdded"]},"./frontend/src/test/mocks.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Eu:()=>mockIntegration,Jq:()=>mockActionDefinition,lI:()=>createMockSubscription,y5:()=>mockSlackChannels});var lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/lib/components/TaxonomicFilter/types.ts"),lib_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/constants.tsx"),scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/scenes/cohorts/CohortFilters/types.ts"),_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/types.ts");["event1","test event","$click","$autocapture","search term","other event",...Array(150)].map((name,index)=>({id:`uuid-${index}-foobar`,name:name||`misc-${index}-generated`,description:`${name||"name generation"} is the best!`,tags:[]}));let mockEventPropertyDefinition={id:"017e8d9e-4241-0000-57ad-3a7237ffdb8e",name:"$active_feature_flags",description:"",tags:[],is_numerical:!1,updated_at:"2022-01-24T21:32:38.359756Z",updated_by:null,is_seen_on_filtered_events:!0,property_type:void 0};["prop1","purchase_value","$click","$browser","browser_no_dollar_not_on_event","is_admin",...Array(50)].map((name,index)=>({...mockEventPropertyDefinition,id:`uuid-${index}-foobar`,name:name||`misc-${index}-generated`,description:`${name||"name generation"} is the best!`,is_seen_on_filtered_events:(name||"").includes("$")})),["$session_duration","$initial_utm_source"].map(name=>({...mockEventPropertyDefinition,id:name,name:name,description:`${name} is the best!`}));let mockActionDefinition={id:3,name:"Action with a moderately long name",post_to_slack:!1,slack_message_format:"",steps:[{id:3,event:"$rageclick",tag_name:"div",text:null,href:null,selector:".buy-now-important-on-sale-button",url:"test",name:"Rage",url_matching:"contains",properties:[]},{id:4,event:null,properties:[{type:"property",key:"$geoip_country_code",value:["US","DE"],operator:"exact"}]}],created_at:"2022-01-24T21:32:38.360176Z",deleted:!1,is_calculating:!1,last_calculated_at:"2022-01-24T21:32:38.359756Z",team_id:1,created_by:null};lib_constants__WEBPACK_IMPORTED_MODULE_1__.pt,_types__WEBPACK_IMPORTED_MODULE_3__.FT.Person,_types__WEBPACK_IMPORTED_MODULE_3__.WV.Exact,_types__WEBPACK_IMPORTED_MODULE_3__.J2.Or,_types__WEBPACK_IMPORTED_MODULE_3__.J2.Or,scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.y4.Behavioral,_types__WEBPACK_IMPORTED_MODULE_3__.G2.PerformEvent,lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_0__.t.Events,_types__WEBPACK_IMPORTED_MODULE_3__.Xy.Day;let mockSubscription={id:1,title:"My example subscription",target_type:"email",target_value:"ben@posthog.com,geoff@other-company.com",frequency:"monthly",interval:2,start_date:"2022-01-01T00:09:00",byweekday:["wednesday"],bysetpos:1,summary:"sent every month on the first wednesday",created_at:"2022-01-01T00:09:00",updated_at:"2022-01-01T00:09:00"},createMockSubscription=function(){let args=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{...mockSubscription,...args}},mockIntegration={id:1,kind:"slack",config:{team:{id:"123",name:"PostHog"}},icon_url:"",display_name:"",created_at:"2022-01-01T00:09:00",created_by:{id:0,uuid:"1234",distinct_id:"1234",first_name:"Tim",email:"tim@posthog.com"}},mockSlackChannels=[{id:"C1",name:"general",is_private:!1,is_ext_shared:!1,is_member:!1},{id:"C2",name:"dev",is_private:!1,is_ext_shared:!1,is_member:!0},{id:"C3",name:"pineapple-conspiracies",is_private:!0,is_ext_shared:!1,is_member:!0},{id:"C4",name:"external-community",is_private:!1,is_ext_shared:!0,is_member:!1}]}}]);