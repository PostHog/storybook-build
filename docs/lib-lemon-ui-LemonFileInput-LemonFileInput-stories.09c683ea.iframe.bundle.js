"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[53617],{"../../frontend/src/lib/lemon-ui/LemonFileInput/LemonFileInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomCTA:()=>CustomCTA,ExtraDragAndDropTarget:()=>ExtraDragAndDropTarget,MultiUploadAccepted:()=>MultiUploadAccepted,SingleUploadAccepted:()=>SingleUploadAccepted,SpecificType:()=>SpecificType,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lib_lemon_ui_LemonFileInput_LemonFileInput__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonFileInput/LemonFileInput.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon File Input",component:lib_lemon_ui_LemonFileInput_LemonFileInput__WEBPACK_IMPORTED_MODULE_0__.m,tags:["autodocs"],argTypes:{loading:{type:"boolean"},accept:{type:"string"}},args:{loading:!1,accept:".json"}},Template=props=>{let[singleValue,setSingleValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"flex flex-col gap-4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(lib_lemon_ui_LemonFileInput_LemonFileInput__WEBPACK_IMPORTED_MODULE_0__.m,{loading:props.loading,...props,value:singleValue,onChange:newValue=>setSingleValue(newValue)})})},SingleUploadAccepted=Template.bind({}),MultiUploadAccepted=Template.bind({});MultiUploadAccepted.args={multiple:!0};let SpecificType=Template.bind({});SpecificType.args={accept:"image/*"};let CustomCTA=Template.bind({});CustomCTA.args={callToAction:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:"i am a custom CTA, i could be any valid element"})};let ExtraDragAndDropTarget=props=>{let[extraTargetValue,setExtraTargetValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),additionalDragTarget=(0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:"flex flex-col gap-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{ref:additionalDragTarget,className:"h-12 w-full border flex items-center justify-center",children:"This area is also a drag target"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(lib_lemon_ui_LemonFileInput_LemonFileInput__WEBPACK_IMPORTED_MODULE_0__.m,{...props,value:extraTargetValue,onChange:newValue=>setExtraTargetValue(newValue),alternativeDropTargetRef:additionalDragTarget})]})};SingleUploadAccepted.parameters={...SingleUploadAccepted.parameters,docs:{...SingleUploadAccepted.parameters?.docs,source:{originalSource:'props => {\n  const [singleValue, setSingleValue] = useState([] as any[]);\n  return <div className="flex flex-col gap-4">\n            <LemonFileInput loading={props.loading} {...props} value={singleValue} onChange={newValue => setSingleValue(newValue)} />\n        </div>;\n}',...SingleUploadAccepted.parameters?.docs?.source}}},MultiUploadAccepted.parameters={...MultiUploadAccepted.parameters,docs:{...MultiUploadAccepted.parameters?.docs,source:{originalSource:'props => {\n  const [singleValue, setSingleValue] = useState([] as any[]);\n  return <div className="flex flex-col gap-4">\n            <LemonFileInput loading={props.loading} {...props} value={singleValue} onChange={newValue => setSingleValue(newValue)} />\n        </div>;\n}',...MultiUploadAccepted.parameters?.docs?.source}}},SpecificType.parameters={...SpecificType.parameters,docs:{...SpecificType.parameters?.docs,source:{originalSource:'props => {\n  const [singleValue, setSingleValue] = useState([] as any[]);\n  return <div className="flex flex-col gap-4">\n            <LemonFileInput loading={props.loading} {...props} value={singleValue} onChange={newValue => setSingleValue(newValue)} />\n        </div>;\n}',...SpecificType.parameters?.docs?.source}}},CustomCTA.parameters={...CustomCTA.parameters,docs:{...CustomCTA.parameters?.docs,source:{originalSource:'props => {\n  const [singleValue, setSingleValue] = useState([] as any[]);\n  return <div className="flex flex-col gap-4">\n            <LemonFileInput loading={props.loading} {...props} value={singleValue} onChange={newValue => setSingleValue(newValue)} />\n        </div>;\n}',...CustomCTA.parameters?.docs?.source}}},ExtraDragAndDropTarget.parameters={...ExtraDragAndDropTarget.parameters,docs:{...ExtraDragAndDropTarget.parameters?.docs,source:{originalSource:'props => {\n  const [extraTargetValue, setExtraTargetValue] = useState([] as any[]);\n  const additionalDragTarget = createRef<HTMLDivElement>();\n  return <div className="flex flex-col gap-4">\n            <div ref={additionalDragTarget} className="h-12 w-full border flex items-center justify-center">\n                This area is also a drag target\n            </div>\n            <LemonFileInput {...props} value={extraTargetValue} onChange={newValue => setExtraTargetValue(newValue)} alternativeDropTargetRef={additionalDragTarget} />\n        </div>;\n}',...ExtraDragAndDropTarget.parameters?.docs?.source}}};let __namedExportsOrder=["SingleUploadAccepted","MultiUploadAccepted","SpecificType","CustomCTA","ExtraDragAndDropTarget"]}}]);