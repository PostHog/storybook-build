(window.webpackJsonp=window.webpackJsonp||[]).push([[317],{"./frontend/src/scenes/events/Events.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"scene",(function(){return scene})),__webpack_require__.d(__webpack_exports__,"Events",(function(){return Events}));var EventsTable=__webpack_require__("./frontend/src/scenes/events/EventsTable.tsx"),PageHeader=__webpack_require__("./frontend/src/lib/components/PageHeader.tsx"),featureFlagLogic=__webpack_require__("./frontend/src/lib/logic/featureFlagLogic.ts"),index_esm=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@16.14.0/node_modules/kea/lib/index.esm.js"),constants=__webpack_require__("./frontend/src/lib/constants.tsx"),lib=__webpack_require__("./node_modules/.pnpm/kea-router@3.1.3_kea@3.1.5/node_modules/kea-router/lib/index.js"),fast_deep_equal=__webpack_require__("./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js"),fast_deep_equal_default=__webpack_require__.n(fast_deep_equal),urls=__webpack_require__("./frontend/src/scenes/urls.ts"),utils=__webpack_require__("./frontend/src/lib/utils.tsx"),lemonToast=__webpack_require__("./frontend/src/lib/lemon-ui/lemonToast.tsx"),defaults=__webpack_require__("./frontend/src/scenes/events/defaults.ts"),teamLogic=__webpack_require__("./frontend/src/scenes/teamLogic.tsx"),defaultEventsQuery=__webpack_require__("./frontend/src/queries/nodes/DataTable/defaultEventsQuery.ts");const eventsSceneLogic=Object(index_esm.kea)([Object(index_esm.path)(["scenes","events","eventsSceneLogic"]),Object(index_esm.connect)({values:[teamLogic.b,["currentTeam"]]}),Object(index_esm.actions)({setQuery:query=>({query:query})}),Object(index_esm.reducers)({savedQuery:[null,{setQuery:(_,_ref)=>{let{query:query}=_ref;return query}}]}),Object(index_esm.selectors)({defaultQuery:[s=>[s.currentTeam],currentTeam=>{const defaultSourceForTeam=currentTeam&&Object(defaultEventsQuery.b)(currentTeam),defaultForScene=Object(defaults.a)();return defaultSourceForTeam?{...defaultForScene,source:defaultSourceForTeam}:defaultForScene}],query:[s=>[s.savedQuery,s.defaultQuery],(savedQuery,defaultQuery)=>savedQuery||defaultQuery]}),Object(lib.actionToUrl)((_ref2=>{let{values:values}=_ref2;return{setQuery:()=>[urls.a.events(),{},Object(utils.ub)(values.query,values.defaultQuery)?{}:{q:values.query},{replace:!0}]}})),Object(lib.urlToAction)((_ref3=>{let{actions:actions,values:values}=_ref3;return{[urls.a.events()]:(_,__,_ref4)=>{let{q:queryParam}=_ref4;fast_deep_equal_default()(queryParam,values.query)||(queryParam?"object"==typeof queryParam?actions.setQuery(queryParam):(lemonToast.d.error("Invalid query in URL"),console.error({queryParam:queryParam})):Object(utils.ub)(values.query,values.defaultQuery)||actions.setQuery(values.defaultQuery))}}}))]);var Query=__webpack_require__("./frontend/src/queries/Query/Query.tsx"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/jsx-runtime.js");function EventsScene(){const{featureFlags:featureFlags}=Object(index_esm.useValues)(featureFlagLogic.a),canOpenEditor=!!featureFlags[constants.i.HOGQL],{query:query}=Object(index_esm.useValues)(eventsSceneLogic),{setQuery:setQuery}=Object(index_esm.useActions)(eventsSceneLogic);return Object(jsx_runtime.jsx)(Query.a,{query:query,setQuery:setQuery,context:{showOpenEditorButton:canOpenEditor}})}const scene={component:Events};function Events(){const{featureFlags:featureFlags}=Object(index_esm.useValues)(featureFlagLogic.a),featureDataExploration=featureFlags[constants.i.HOGQL];return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)(PageHeader.a,{title:featureDataExploration?"Event Explorer":"Live events",caption:featureDataExploration?void 0:"Event history limited to the last twelve months."}),Object(jsx_runtime.jsx)("div",{className:"pt-4 border-t"}),featureDataExploration?Object(jsx_runtime.jsx)(EventsScene,{}):Object(jsx_runtime.jsx)(EventsTable.a,{pageKey:"EventsTable"})]})}}}]);