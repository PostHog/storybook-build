"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[8373],{"./frontend/src/lib/components/TaxonomicFilter/__mocks__/taxonomicFilterMocksDecorator.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>taxonomicFilterMocksDecorator});var _mocks_browser__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/mocks/browser.tsx"),_test_mocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/test/mocks.ts");const taxonomicFilterMocksDecorator=(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_0__.x8)({get:{"/api/projects/:team_id/actions":{results:[_test_mocks__WEBPACK_IMPORTED_MODULE_1__.Jq]},"/api/projects/:team_id/persons/properties":[{id:1,name:"location",count:1},{id:2,name:"role",count:2},{id:3,name:"height",count:3},{id:4,name:"$browser",count:4}],"/api/projects/:team_id/property_definitions":[{name:"file_count",count:205},{name:"industry",count:205},{name:"name",count:205},{name:"plan",count:205},{name:"team_size",count:205},{name:"used_mb",count:205}],"/api/projects/:team_id/event_definitions":[{id:"a",name:"signed up",description:"signed up",count:101},{id:"b",name:"viewed insights",description:"signed up",count:1,verified:!0},{id:"c",name:"logged out",description:"signed up",count:103}],"/api/projects/:team_id/cohorts/":[{id:1,name:"Properties Cohort",count:1,groups:[{id:"a",name:"Properties Group",count:1,matchType:"properties"}]},{id:2,name:"Entities Cohort",count:1,groups:[{id:"b",name:"Entities Group",count:1,matchType:"entities"}]}]}})},"./frontend/src/test/mocks.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Eu:()=>mockIntegration,Jq:()=>mockActionDefinition,lI:()=>createMockSubscription,y5:()=>mockSlackChannels});var _types__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/types.ts"),lib_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/constants.tsx"),scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/scenes/cohorts/CohortFilters/types.ts"),lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/lib/components/TaxonomicFilter/types.ts");["event1","test event","$click","$autocapture","search","other event",...Array(150)].map(((name,index)=>({id:`uuid-${index}-foobar`,name:name||`misc-${index}-generated`,description:`${name||"name generation"} is the best!`,tags:[]})));const mockEventPropertyDefinition={id:"017e8d9e-4241-0000-57ad-3a7237ffdb8e",name:"$active_feature_flags",description:"",tags:[],is_numerical:!1,updated_at:"2022-01-24T21:32:38.359756Z",updated_by:null,is_seen_on_filtered_events:!0,property_type:void 0},mockActionDefinition=(["prop1","purchase_value","$click","$browser","browser_no_dollar_not_on_event","is_admin",...Array(50)].map(((name,index)=>({...mockEventPropertyDefinition,id:`uuid-${index}-foobar`,name:name||`misc-${index}-generated`,description:`${name||"name generation"} is the best!`,is_seen_on_filtered_events:(name||"").includes("$")}))),{id:3,name:"Action with a moderately long name",post_to_slack:!1,slack_message_format:"",steps:[{id:3,event:"$rageclick",tag_name:"div",text:null,href:null,selector:".buy-now-important-on-sale-button",url:"test",name:"Rage",url_matching:"contains",properties:[]},{id:4,event:null,properties:[{type:"property",key:"$geoip_country_code",value:["US","DE"],operator:"exact"}]}],created_at:"2022-01-24T21:32:38.360176Z",deleted:!1,is_calculating:!1,last_calculated_at:"2022-01-24T21:32:38.359756Z",team_id:1,created_by:null}),mockSubscription=(lib_constants__WEBPACK_IMPORTED_MODULE_1__.pt,_types__WEBPACK_IMPORTED_MODULE_0__.FT.Person,_types__WEBPACK_IMPORTED_MODULE_0__.WV.Exact,_types__WEBPACK_IMPORTED_MODULE_0__.J2.Or,_types__WEBPACK_IMPORTED_MODULE_0__.J2.Or,scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.y4.Behavioral,_types__WEBPACK_IMPORTED_MODULE_0__.G2.PerformEvent,lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__.t.Events,_types__WEBPACK_IMPORTED_MODULE_0__.Xy.Day,{id:1,title:"My example subscription",target_type:"email",target_value:"ben@posthog.com,geoff@other-company.com",frequency:"monthly",interval:2,start_date:"2022-01-01T00:09:00",byweekday:["wednesday"],bysetpos:1,summary:"sent every month on the first wednesday",created_at:"2022-01-01T00:09:00",updated_at:"2022-01-01T00:09:00"}),createMockSubscription=function(){return{...mockSubscription,...arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}}},mockIntegration={id:1,kind:"slack",config:{team:{id:"123",name:"PostHog"}},created_at:"2022-01-01T00:09:00",created_by:{id:0,uuid:"1234",distinct_id:"1234",first_name:"Tim",email:"tim@posthog.com"}},mockSlackChannels=[{id:"C1",name:"general",is_private:!1,is_ext_shared:!1,is_member:!1},{id:"C2",name:"dev",is_private:!1,is_ext_shared:!1,is_member:!0},{id:"C3",name:"pineapple-conspiracies",is_private:!0,is_ext_shared:!1,is_member:!0},{id:"C4",name:"external-community",is_private:!1,is_ext_shared:!0,is_member:!1}]},"./frontend/src/lib/components/TaxonomicPopover/TaxonomicPopover.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MultipleCategories:()=>MultipleCategories,TaxonomicStringPopoverOneCategory:()=>TaxonomicStringPopoverOneCategory,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_TaxonomicPopover__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/components/TaxonomicPopover/TaxonomicPopover.tsx"),_models_cohortsModel__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/models/cohortsModel.ts"),lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/lib/components/TaxonomicFilter/types.ts"),lib_components_PropertyKeyInfo__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./frontend/src/lib/components/PropertyKeyInfo.tsx"),kea__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),lib_components_TaxonomicFilter_mocks_taxonomicFilterMocksDecorator__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./frontend/src/lib/components/TaxonomicFilter/__mocks__/taxonomicFilterMocksDecorator.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Filters/TaxonomicPopover",component:_TaxonomicPopover__WEBPACK_IMPORTED_MODULE_1__.b,decorators:[lib_components_TaxonomicFilter_mocks_taxonomicFilterMocksDecorator__WEBPACK_IMPORTED_MODULE_6__.p]};function TaxonomicStringPopoverOneCategory(){(0,kea__WEBPACK_IMPORTED_MODULE_5__.useMountedLogic)(_models_cohortsModel__WEBPACK_IMPORTED_MODULE_2__.Q);const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("$browser");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_TaxonomicPopover__WEBPACK_IMPORTED_MODULE_1__.z,{groupType:lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__.t.PersonProperties,value,onChange:setValue,renderValue:v=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(lib_components_PropertyKeyInfo__WEBPACK_IMPORTED_MODULE_4__.T,{value:v})})}function MultipleCategories(){(0,kea__WEBPACK_IMPORTED_MODULE_5__.useMountedLogic)(_models_cohortsModel__WEBPACK_IMPORTED_MODULE_2__.Q);const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0),[group,setGroup]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__.t.PersonProperties);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_TaxonomicPopover__WEBPACK_IMPORTED_MODULE_1__.b,{groupType:group,value,onChange:(v,g)=>{setValue(v),setGroup(g)},groupTypes:[lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__.t.EventProperties,lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__.t.PersonProperties,lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__.t.EventFeatureFlags,lib_components_TaxonomicFilter_types__WEBPACK_IMPORTED_MODULE_3__.t.Cohorts]})}TaxonomicStringPopoverOneCategory.parameters={...TaxonomicStringPopoverOneCategory.parameters,docs:{...TaxonomicStringPopoverOneCategory.parameters?.docs,source:{originalSource:"function TaxonomicStringPopoverOneCategory(): JSX.Element {\n  useMountedLogic(cohortsModel);\n  const [value, setValue] = useState<string | undefined>('$browser');\n  return <TaxonomicStringPopover groupType={TaxonomicFilterGroupType.PersonProperties} value={value} onChange={setValue} renderValue={v => <PropertyKeyInfo value={v} />} />;\n}",...TaxonomicStringPopoverOneCategory.parameters?.docs?.source}}},MultipleCategories.parameters={...MultipleCategories.parameters,docs:{...MultipleCategories.parameters?.docs,source:{originalSource:"function MultipleCategories(): JSX.Element {\n  useMountedLogic(cohortsModel);\n  const [value, setValue] = useState<string | number | null | undefined>(undefined);\n  const [group, setGroup] = useState(TaxonomicFilterGroupType.PersonProperties);\n  return <TaxonomicPopover groupType={group} value={value} onChange={(v, g) => {\n    setValue(v);\n    setGroup(g);\n  }} groupTypes={[TaxonomicFilterGroupType.EventProperties, TaxonomicFilterGroupType.PersonProperties, TaxonomicFilterGroupType.EventFeatureFlags, TaxonomicFilterGroupType.Cohorts]} />;\n}",...MultipleCategories.parameters?.docs?.source}}}}}]);