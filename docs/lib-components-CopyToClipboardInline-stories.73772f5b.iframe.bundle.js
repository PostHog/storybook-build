"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[2023],{"../../frontend/src/lib/components/CopyToClipboardInline.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ExplicitValue:()=>ExplicitValue,IconOnly:()=>IconOnly,IconPositions:()=>IconPositions,IconSizes:()=>IconSizes,Selectable:()=>Selectable,WithDescription:()=>WithDescription,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _CopyToClipboard__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/lib/components/CopyToClipboard.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Copy To Clipboard Inline",component:_CopyToClipboard__WEBPACK_IMPORTED_MODULE_0__.D,tags:["autodocs"],parameters:{docs:{description:{component:"A component that displays text with an inline copy button. Can be used to copy text to clipboard with a single click or allow text selection."}}},argTypes:{children:{description:"Text content to display and copy"},explicitValue:{description:"Alternative value to copy (different from displayed text)"},description:{description:"Description shown in toast notification when copied"},selectable:{description:"Makes text selectable instead of copying on click anywhere",control:"boolean"},isValueSensitive:{description:"Prevents capturing in analytics tools",control:"boolean"},tooltipMessage:{description:'Custom tooltip message (defaults to "Click to copy")'},iconPosition:{description:"Position of the copy icon",control:"radio",options:["end","start"]},iconSize:{description:"Size of the copy icon",control:"radio",options:["small","xsmall"]}}},BasicTemplate=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"w-[400px]",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_CopyToClipboard__WEBPACK_IMPORTED_MODULE_0__.D,{...props})}),Default=BasicTemplate.bind({});Default.args={children:"Click anywhere to copy this text"};let WithDescription=BasicTemplate.bind({});WithDescription.args={children:"API key: sk-1234567890abcdef",description:"API key"};let Selectable=BasicTemplate.bind({});Selectable.args={children:"This text is selectable - click the copy icon to copy",selectable:!0,description:"Selectable text"};let ExplicitValue=BasicTemplate.bind({});ExplicitValue.args={children:"Display text (click to copy different value)",explicitValue:"This is the actual value that gets copied",description:"Hidden value"};let IconPositions=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{className:"space-y-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("h4",{className:"mb-2",children:"Icon at end (default)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_CopyToClipboard__WEBPACK_IMPORTED_MODULE_0__.D,{iconPosition:"end",children:"Copy this text"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("h4",{className:"mb-2",children:"Icon at start"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_CopyToClipboard__WEBPACK_IMPORTED_MODULE_0__.D,{iconPosition:"start",children:"Copy this text"})]})]}),IconSizes=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{className:"space-y-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("h4",{className:"mb-2",children:"Small icon (default)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_CopyToClipboard__WEBPACK_IMPORTED_MODULE_0__.D,{iconSize:"small",children:"Copy this text"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("h4",{className:"mb-2",children:"Extra small icon"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_CopyToClipboard__WEBPACK_IMPORTED_MODULE_0__.D,{iconSize:"xsmall",children:"Copy this text"})]})]}),IconOnly=BasicTemplate.bind({});IconOnly.args={explicitValue:"This value gets copied when clicking the icon",description:"Hidden text"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'props => {\n  return <div className="w-[400px]">\n            <CopyToClipboardInline {...props} />\n        </div>;\n}',...Default.parameters?.docs?.source}}},WithDescription.parameters={...WithDescription.parameters,docs:{...WithDescription.parameters?.docs,source:{originalSource:'props => {\n  return <div className="w-[400px]">\n            <CopyToClipboardInline {...props} />\n        </div>;\n}',...WithDescription.parameters?.docs?.source}}},Selectable.parameters={...Selectable.parameters,docs:{...Selectable.parameters?.docs,source:{originalSource:'props => {\n  return <div className="w-[400px]">\n            <CopyToClipboardInline {...props} />\n        </div>;\n}',...Selectable.parameters?.docs?.source}}},ExplicitValue.parameters={...ExplicitValue.parameters,docs:{...ExplicitValue.parameters?.docs,source:{originalSource:'props => {\n  return <div className="w-[400px]">\n            <CopyToClipboardInline {...props} />\n        </div>;\n}',...ExplicitValue.parameters?.docs?.source}}},IconPositions.parameters={...IconPositions.parameters,docs:{...IconPositions.parameters?.docs,source:{originalSource:'() => {\n  return <div className="space-y-4">\n            <div>\n                <h4 className="mb-2">Icon at end (default)</h4>\n                <CopyToClipboardInline iconPosition="end">Copy this text</CopyToClipboardInline>\n            </div>\n            <div>\n                <h4 className="mb-2">Icon at start</h4>\n                <CopyToClipboardInline iconPosition="start">Copy this text</CopyToClipboardInline>\n            </div>\n        </div>;\n}',...IconPositions.parameters?.docs?.source}}},IconSizes.parameters={...IconSizes.parameters,docs:{...IconSizes.parameters?.docs,source:{originalSource:'() => {\n  return <div className="space-y-4">\n            <div>\n                <h4 className="mb-2">Small icon (default)</h4>\n                <CopyToClipboardInline iconSize="small">Copy this text</CopyToClipboardInline>\n            </div>\n            <div>\n                <h4 className="mb-2">Extra small icon</h4>\n                <CopyToClipboardInline iconSize="xsmall">Copy this text</CopyToClipboardInline>\n            </div>\n        </div>;\n}',...IconSizes.parameters?.docs?.source}}},IconOnly.parameters={...IconOnly.parameters,docs:{...IconOnly.parameters?.docs,source:{originalSource:'props => {\n  return <div className="w-[400px]">\n            <CopyToClipboardInline {...props} />\n        </div>;\n}',...IconOnly.parameters?.docs?.source}}};let __namedExportsOrder=["Default","WithDescription","Selectable","ExplicitValue","IconPositions","IconSizes","IconOnly"]}}]);