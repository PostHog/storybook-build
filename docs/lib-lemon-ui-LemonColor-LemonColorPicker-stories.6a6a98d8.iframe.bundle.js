"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[88381],{"../../frontend/src/lib/lemon-ui/LemonColor/LemonColorPicker.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomButton:()=>CustomButton,Default:()=>Default,HideDropdown:()=>HideDropdown,ShowCustomColor:()=>ShowCustomColor,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_LemonButton__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonButton/index.ts"),_LemonColorPicker__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonColor/LemonColorPicker.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon Color/Lemon Color Picker",component:_LemonColorPicker__WEBPACK_IMPORTED_MODULE_2__.z,tags:["autodocs"]},colorTokens=Array.from({length:15},(_,i)=>`preset-${i+1}`),colors=["#0000ff","#00ff00","#ff0000","#000000","#ffffff"],Default={render:()=>{let[colorToken,setColorToken]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("preset-1");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonColorPicker__WEBPACK_IMPORTED_MODULE_2__.z,{colorTokens:colorTokens,selectedColorToken:colorToken,onSelectColorToken:setColorToken})}},ShowCustomColor={render:()=>{let[color,setColor]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("#00ffff");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonColorPicker__WEBPACK_IMPORTED_MODULE_2__.z,{colors:colors,selectedColor:color,onSelectColor:setColor,showCustomColor:!0})}},HideDropdown={render:()=>{let[colorToken,setColorToken]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("preset-1");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonColorPicker__WEBPACK_IMPORTED_MODULE_2__.z,{colorTokens:colorTokens,selectedColorToken:colorToken,onSelectColorToken:setColorToken,hideDropdown:!0})}},CustomButton={render:()=>{let[colorToken,setColorToken]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("preset-1");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonColorPicker__WEBPACK_IMPORTED_MODULE_2__.z,{colorTokens:colorTokens,selectedColorToken:colorToken,onSelectColorToken:setColorToken,customButton:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonButton__WEBPACK_IMPORTED_MODULE_1__.J,{children:"Customize color"})})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [colorToken, setColorToken] = useState<DataColorToken>('preset-1');\n    return <LemonColorPicker colorTokens={colorTokens} selectedColorToken={colorToken} onSelectColorToken={setColorToken} />;\n  }\n}",...Default.parameters?.docs?.source}}},ShowCustomColor.parameters={...ShowCustomColor.parameters,docs:{...ShowCustomColor.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [color, setColor] = useState('#00ffff');\n    return <LemonColorPicker colors={colors} selectedColor={color} onSelectColor={setColor} showCustomColor />;\n  }\n}",...ShowCustomColor.parameters?.docs?.source}}},HideDropdown.parameters={...HideDropdown.parameters,docs:{...HideDropdown.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [colorToken, setColorToken] = useState<DataColorToken>('preset-1');\n    return <LemonColorPicker colorTokens={colorTokens} selectedColorToken={colorToken} onSelectColorToken={setColorToken} hideDropdown />;\n  }\n}",...HideDropdown.parameters?.docs?.source}}},CustomButton.parameters={...CustomButton.parameters,docs:{...CustomButton.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [colorToken, setColorToken] = useState<DataColorToken>('preset-1');\n    return <LemonColorPicker colorTokens={colorTokens} selectedColorToken={colorToken} onSelectColorToken={setColorToken} customButton={<LemonButton>Customize color</LemonButton>} />;\n  }\n}",...CustomButton.parameters?.docs?.source}}};let __namedExportsOrder=["Default","ShowCustomColor","HideDropdown","CustomButton"]}}]);