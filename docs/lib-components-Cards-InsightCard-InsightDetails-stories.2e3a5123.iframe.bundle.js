"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[71831],{"./frontend/src/lib/components/Cards/InsightCard/InsightDetails.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DataTableEventsQuery:()=>DataTableEventsQuery,DataTableHogQLQuery:()=>DataTableHogQLQuery,Funnel:()=>Funnel,Lifecycle:()=>Lifecycle,Paths:()=>Paths,Retention:()=>Retention,Stickiness:()=>Stickiness,Trends:()=>Trends,TrendsHorizontalBar:()=>TrendsHorizontalBar,TrendsMulti:()=>TrendsMulti,TrendsPie:()=>TrendsPie,TrendsTable:()=>TrendsTable,TrendsWorldMap:()=>TrendsWorldMap,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _queries_nodes_InsightViz_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/queries/nodes/InsightViz/utils.ts"),_InsightDetails__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/components/Cards/InsightCard/InsightDetails.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let meta={title:"Components/Cards/Insight Details",component:_InsightDetails__WEBPACK_IMPORTED_MODULE_1__.Mz},__WEBPACK_DEFAULT_EXPORT__=meta,Template=_ref=>{let{insight:legacyInsight}=_ref,insight=(0,_queries_nodes_InsightViz_utils__WEBPACK_IMPORTED_MODULE_0__.Q0)(legacyInsight);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"bg-bg-light w-[24rem] p-4 rounded",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_InsightDetails__WEBPACK_IMPORTED_MODULE_1__.Mz,{insight:insight})})},Trends=Template.bind({});Trends.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/trendsLine.json")};let TrendsMulti=Template.bind({});TrendsMulti.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/trendsLineMulti.json")};let TrendsHorizontalBar=Template.bind({});TrendsHorizontalBar.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/trendsValue.json")};let TrendsTable=Template.bind({});TrendsTable.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/trendsTable.json")};let TrendsPie=Template.bind({});TrendsPie.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/trendsPie.json")};let TrendsWorldMap=Template.bind({});TrendsWorldMap.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/trendsWorldMap.json")};let Funnel=Template.bind({});Funnel.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/funnelLeftToRight.json")};let Retention=Template.bind({});Retention.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/retention.json")};let Paths=Template.bind({});Paths.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/userPaths.json")};let Stickiness=Template.bind({});Stickiness.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/stickiness.json")};let Lifecycle=Template.bind({});Lifecycle.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/lifecycle.json")};let DataTableHogQLQuery=Template.bind({});DataTableHogQLQuery.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/dataTableHogQL.json")};let DataTableEventsQuery=Template.bind({});DataTableEventsQuery.args={insight:__webpack_require__("./frontend/src/mocks/fixtures/api/projects/team_id/insights/dataTableEvents.json")},Trends.parameters={...Trends.parameters,docs:{...Trends.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...Trends.parameters?.docs?.source}}},TrendsMulti.parameters={...TrendsMulti.parameters,docs:{...TrendsMulti.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...TrendsMulti.parameters?.docs?.source}}},TrendsHorizontalBar.parameters={...TrendsHorizontalBar.parameters,docs:{...TrendsHorizontalBar.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...TrendsHorizontalBar.parameters?.docs?.source}}},TrendsTable.parameters={...TrendsTable.parameters,docs:{...TrendsTable.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...TrendsTable.parameters?.docs?.source}}},TrendsPie.parameters={...TrendsPie.parameters,docs:{...TrendsPie.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...TrendsPie.parameters?.docs?.source}}},TrendsWorldMap.parameters={...TrendsWorldMap.parameters,docs:{...TrendsWorldMap.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...TrendsWorldMap.parameters?.docs?.source}}},Funnel.parameters={...Funnel.parameters,docs:{...Funnel.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...Funnel.parameters?.docs?.source}}},Retention.parameters={...Retention.parameters,docs:{...Retention.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...Retention.parameters?.docs?.source}}},Paths.parameters={...Paths.parameters,docs:{...Paths.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...Paths.parameters?.docs?.source}}},Stickiness.parameters={...Stickiness.parameters,docs:{...Stickiness.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...Stickiness.parameters?.docs?.source}}},Lifecycle.parameters={...Lifecycle.parameters,docs:{...Lifecycle.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...Lifecycle.parameters?.docs?.source}}},DataTableHogQLQuery.parameters={...DataTableHogQLQuery.parameters,docs:{...DataTableHogQLQuery.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...DataTableHogQLQuery.parameters?.docs?.source}}},DataTableEventsQuery.parameters={...DataTableEventsQuery.parameters,docs:{...DataTableEventsQuery.parameters?.docs,source:{originalSource:'({\n  insight: legacyInsight\n}) => {\n  const insight = getQueryBasedInsightModel(legacyInsight);\n  return <div className="bg-bg-light w-[24rem] p-4 rounded">\n            <InsightDetailsComponent insight={insight} />\n        </div>;\n}',...DataTableEventsQuery.parameters?.docs?.source}}};let __namedExportsOrder=["Trends","TrendsMulti","TrendsHorizontalBar","TrendsTable","TrendsPie","TrendsWorldMap","Funnel","Retention","Paths","Stickiness","Lifecycle","DataTableHogQLQuery","DataTableEventsQuery"]}}]);