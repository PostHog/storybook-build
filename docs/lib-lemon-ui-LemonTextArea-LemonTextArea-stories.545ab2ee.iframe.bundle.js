"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[9801],{"./frontend/src/lib/lemon-ui/LemonTextArea/LemonTextArea.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Disabled:()=>Disabled,LemonTextMarkdown:()=>LemonTextMarkdown,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/index.js"),_LemonTextArea__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonTextArea/LemonTextArea.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon Text Area",component:_LemonTextArea__WEBPACK_IMPORTED_MODULE_1__._,args:{value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."},tags:["autodocs"]},Template=props=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.value);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonTextArea__WEBPACK_IMPORTED_MODULE_1__._,{...props,value,onChange:newValue=>setValue(newValue)})},Basic=Template.bind({});Basic.args={};const Disabled=Template.bind({});Disabled.args={disabled:!0};const LemonTextMarkdown=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("# Title\n\n**bold** _italic_");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_LemonTextArea__WEBPACK_IMPORTED_MODULE_1__.X,{value,onChange:newValue=>setValue(newValue)})};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...Basic.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...Disabled.parameters?.docs?.source}}},LemonTextMarkdown.parameters={...LemonTextMarkdown.parameters,docs:{...LemonTextMarkdown.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  const [value, setValue] = useState('# Title\\n\\n**bold** _italic_');\n  return <_LemonTextMarkdown value={value} onChange={newValue => setValue(newValue)} />;\n}",...LemonTextMarkdown.parameters?.docs?.source}}}}}]);