"use strict";(self.webpackChunk_posthog_frontend=self.webpackChunk_posthog_frontend||[]).push([[80250],{"./frontend/src/scenes/web-analytics/tiles/__mocks__/Browser.json":module=>{module.exports=JSON.parse('{"cache_key":"cache_3dbcd9fb0d569f205781b7c151c83fb8_[{\'alias\': \'/person/<id>\', \'regex\': \'\\\\\\\\/person\\\\\\\\/[^\\\\\\\\/]+\'}, {\'alias\': \'Any Session Recording Route\', \'regex\': \'.*sessionRecordingId=[a-zA-Z]+\'}, {\'alias\': \'/insights/<insight_id>\', \'regex\': \'.*\\\\\\\\/insights\\\\\\\\/[0-9a-zA-Z]+\'}, {\'alias\': \'/project/<team_id>\', \'regex\': \'\\\\\\\\/project\\\\\\\\/\\\\\\\\d+\'}, {\'alias\': \'/dashboard/<dashboard_id>\', \'regex\': \'\\\\\\\\/dashboard\\\\\\\\/[0-9]+\'}, {\'alias\': \'/feature_flags/<feature_flag_id>\', \'regex\': \'\\\\\\\\/feature_flags\\\\\\\\/[0-9]+\'}, {\'alias\': \'/replay/<replay_id>\', \'regex\': \'\\\\\\\\/replay\\\\\\\\/[0-9a-f\\\\\\\\-]+\'}, {\'alias\': \'/cohorts/<cohort_id>\', \'regex\': \'\\\\\\\\/cohorts\\\\\\\\/[0-9]+\'}, {\'alias\': \'/experiments/<experiment_id>\', \'regex\': \'\\\\\\\\/experiments\\\\\\\\/[0-9]+\'}, {\'alias\': \'/surveys/<survey_id>\', \'regex\': \'\\\\\\\\/surveys\\\\\\\\/[0-9a-f\\\\\\\\-]+\'}, {\'alias\': \'/events/<event_id>\', \'regex\': \'\\\\\\\\/events\\\\\\\\/[0-9a-f\\\\\\\\-]+\'}, {\'alias\': \'/verify_email/<id>\', \'regex\': \'\\\\\\\\/verify_email\\\\\\\\/[0-9a-f\\\\\\\\-]+\'}, {\'alias\': \'/community/profiles/<id>\', \'regex\': \'\\\\\\\\/community\\\\\\\\/profiles\\\\\\\\/[0-9]+\'}, {\'alias\': \'/notebooks/<notebook_id>\', \'regex\': \'\\\\\\\\/notebooks\\\\\\\\/[a-zA-Z0-9]+\'}, {\'alias\': \'/groups/<id>\', \'regex\': \'\\\\\\\\/groups\\\\\\\\/[0-9]+\\\\\\\\/[a-zA-Z0-9]+\'}, {\'alias\': \'/signup/<id>\', \'regex\': \'\\\\\\\\/signup\\\\\\\\/[0-9a-f\\\\\\\\-]+\'}, {\'alias\': \'/playlists/<playlist_id>\', \'regex\': \'\\\\\\\\/playlists\\\\\\\\/[a-zA-Z0-9]+\'}, {\'alias\': \'/destinations/<destination_id>\', \'regex\': \'\\\\\\\\/destinations?\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+\'}, {\'alias\': \'/properties/<property_id>\', \'regex\': \'\\\\\\\\/properties\\\\\\\\/[0-9a-f\\\\\\\\-]+\'}, {\'alias\': \'/sources/<source_id>\', \'regex\': \'\\\\\\\\/sources\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+\'}, {\'alias\': \'/reset\', \'regex\': \'\\\\\\\\/reset\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+\'}, {\'alias\': \'/actions/<action_id>\', \'regex\': \'\\\\\\\\/actions\\\\\\\\/[0-9]+\'}, {\'alias\': \'/shared-metrics/<metric_id>\', \'regex\': \'\\\\\\\\/shared-metrics\\\\\\\\/[0-9]+\'}]","cache_target_age":"2025-01-21T00:57:40.526794Z","calculation_trigger":null,"columns":["context.columns.breakdown_value","context.columns.visitors","context.columns.views"],"error":null,"hasMore":true,"hogql":"SELECT\\n    breakdown_value AS `context.columns.breakdown_value`,\\n    tuple(uniq(filtered_person_id), NULL) AS `context.columns.visitors`,\\n    tuple(sum(filtered_pageview_count), NULL) AS `context.columns.views`\\nFROM\\n    (SELECT\\n        any(person_id) AS filtered_person_id,\\n        count() AS filtered_pageview_count,\\n        properties.$browser AS breakdown_value,\\n        session.session_id AS session_id,\\n        any(session.$is_bounce) AS is_bounce,\\n        min(session.$start_timestamp) AS start_timestamp\\n    FROM\\n        events\\n    WHERE\\n        and(or(and(greaterOrEquals(timestamp, assumeNotNull(toDateTime(\'2025-01-06 00:00:00\'))), less(timestamp, assumeNotNull(toDateTime(\'2025-01-20 23:59:59\')))), false), or(equals(event, \'$pageview\'), equals(event, \'$screen\')), 1, notEquals(breakdown_value, NULL))\\n    GROUP BY\\n        session_id,\\n        breakdown_value)\\nGROUP BY\\n    `context.columns.breakdown_value`\\nORDER BY\\n    `context.columns.visitors` DESC,\\n    `context.columns.views` DESC,\\n    `context.columns.breakdown_value` ASC\\nLIMIT 11\\nOFFSET 0","is_cached":true,"last_refresh":"2025-01-20T22:57:40.526794Z","limit":10,"modifiers":{"bounceRateDurationSeconds":null,"bounceRatePageViewMode":"uniq_page_screen_autocaptures","customChannelTypeRules":[{"channel_type":"AI","combiner":"AND","id":"b6332cb7-a32f-4a62-929e-54dc5c37ba1d","items":[{"id":"90f32f03-2a30-4278-9869-c1f99da6dbe9","key":"referring_domain","op":"exact","value":["www.perplexity.ai","chat.openai.com"]}]},{"channel_type":"Newsletter","combiner":"OR","id":"eb1729b9-35a8-4013-bf1b-83bf107feb1f","items":[{"id":"40b11644-51bd-49ac-a99e-82fc8f734eda","key":"referring_domain","op":"icontains","value":["substack.com"]},{"id":"e048a56a-eba8-4e59-ad20-cda77883594c","key":"utm_source","op":"exact","value":["substack","posthog-newsletter"]}]}],"dataWarehouseEventsModifiers":null,"debug":null,"inCohortVia":"auto","materializationMode":"legacy_null_as_null","optimizeJoinedFilters":false,"personsArgMaxVersion":"auto","personsJoinMode":null,"personsOnEventsMode":"person_id_override_properties_on_events","propertyGroupsMode":"optimized","s3TableUseInvalidColumns":null,"sessionTableVersion":"auto","useMaterializedViews":true},"next_allowed_client_refresh":"2025-01-20T23:12:40.526794Z","offset":0,"query_status":null,"results":[["Chrome",[130638,128392],[4098916,4150238]],["Firefox",[12749,13105],[279210,275481]],["Mobile Safari",[11677,12044],[83129,81893]],["Safari",[8284,8129],[252689,255104]],["Microsoft Edge",[6251,6482],[170961,168234]],["Chrome iOS",[2993,2851],[29640,30128]],["Opera",[740,712],[17802,18234]],["Firefox iOS",[265,284],[2003,1892]],["Samsung Internet",[246,231],[1506,1582]],["Android Mobile",[92,87],[257,271]]],"samplingRate":null,"timezone":"US/Pacific","timings":[],"types":[["context.columns.breakdown_value","Nullable(String)"],["context.columns.visitors","Tuple(UInt64, Nullable(Nothing))"],["context.columns.views","Tuple(UInt64, Nullable(Nothing))"]]}')},"./frontend/src/scenes/web-analytics/tiles/__mocks__/Path.json":module=>{module.exports=JSON.parse("{\"cache_key\":\"cache_bc7df2389a4b4e9958a291d07ca0894a_[{'alias': '/person/<id>', 'regex': '\\\\\\\\/person\\\\\\\\/[^\\\\\\\\/]+'}, {'alias': 'Any Session Recording Route', 'regex': '.*sessionRecordingId=[a-zA-Z]+'}, {'alias': '/insights/<insight_id>', 'regex': '.*\\\\\\\\/insights\\\\\\\\/[0-9a-zA-Z]+'}, {'alias': '/project/<team_id>', 'regex': '\\\\\\\\/project\\\\\\\\/\\\\\\\\d+'}, {'alias': '/dashboard/<dashboard_id>', 'regex': '\\\\\\\\/dashboard\\\\\\\\/[0-9]+'}, {'alias': '/feature_flags/<feature_flag_id>', 'regex': '\\\\\\\\/feature_flags\\\\\\\\/[0-9]+'}, {'alias': '/replay/<replay_id>', 'regex': '\\\\\\\\/replay\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/cohorts/<cohort_id>', 'regex': '\\\\\\\\/cohorts\\\\\\\\/[0-9]+'}, {'alias': '/experiments/<experiment_id>', 'regex': '\\\\\\\\/experiments\\\\\\\\/[0-9]+'}, {'alias': '/surveys/<survey_id>', 'regex': '\\\\\\\\/surveys\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/events/<event_id>', 'regex': '\\\\\\\\/events\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/verify_email/<id>', 'regex': '\\\\\\\\/verify_email\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/community/profiles/<id>', 'regex': '\\\\\\\\/community\\\\\\\\/profiles\\\\\\\\/[0-9]+'}, {'alias': '/notebooks/<notebook_id>', 'regex': '\\\\\\\\/notebooks\\\\\\\\/[a-zA-Z0-9]+'}, {'alias': '/groups/<id>', 'regex': '\\\\\\\\/groups\\\\\\\\/[0-9]+\\\\\\\\/[a-zA-Z0-9]+'}, {'alias': '/signup/<id>', 'regex': '\\\\\\\\/signup\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/playlists/<playlist_id>', 'regex': '\\\\\\\\/playlists\\\\\\\\/[a-zA-Z0-9]+'}, {'alias': '/destinations/<destination_id>', 'regex': '\\\\\\\\/destinations?\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+'}, {'alias': '/properties/<property_id>', 'regex': '\\\\\\\\/properties\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/sources/<source_id>', 'regex': '\\\\\\\\/sources\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+'}, {'alias': '/reset', 'regex': '\\\\\\\\/reset\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+'}, {'alias': '/actions/<action_id>', 'regex': '\\\\\\\\/actions\\\\\\\\/[0-9]+'}, {'alias': '/shared-metrics/<metric_id>', 'regex': '\\\\\\\\/shared-metrics\\\\\\\\/[0-9]+'}]\",\"cache_target_age\":\"2025-01-20T23:43:16.443321Z\",\"calculation_trigger\":null,\"columns\":[\"context.columns.breakdown_value\",\"context.columns.visitors\",\"context.columns.views\",\"context.columns.bounce_rate\"],\"error\":null,\"hasMore\":true,\"hogql\":\"SELECT\\n    counts.breakdown_value AS `context.columns.breakdown_value`,\\n    tuple(counts.visitors, counts.previous_visitors) AS `context.columns.visitors`,\\n    tuple(counts.views, counts.previous_views) AS `context.columns.views`,\\n    tuple(bounce.bounce_rate, bounce.previous_bounce_rate) AS `context.columns.bounce_rate`\\nFROM\\n    (SELECT\\n        breakdown_value,\\n        uniqIf(filtered_person_id, and(greaterOrEquals(start_timestamp, assumeNotNull(toDateTime('2025-01-06 00:00:00'))), less(start_timestamp, assumeNotNull(toDateTime('2025-01-20 23:59:59'))))) AS visitors,\\n        uniqIf(filtered_person_id, false) AS previous_visitors,\\n        sumIf(filtered_pageview_count, and(greaterOrEquals(start_timestamp, assumeNotNull(toDateTime('2025-01-06 00:00:00'))), less(start_timestamp, assumeNotNull(toDateTime('2025-01-20 23:59:59'))))) AS views,\\n        sumIf(filtered_pageview_count, false) AS previous_views\\n    FROM\\n        (SELECT\\n            any(person_id) AS filtered_person_id,\\n            count() AS filtered_pageview_count,\\n            replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(events.properties.$pathname, '\\\\\\\\/person\\\\\\\\/[^\\\\\\\\/]+', '/person/<id>'), '.*sessionRecordingId=[a-zA-Z]+', 'Any Session Recording Route'), '.*\\\\\\\\/insights\\\\\\\\/[0-9a-zA-Z]+', '/insights/<insight_id>'), '\\\\\\\\/project\\\\\\\\/\\\\\\\\d+', '/project/<team_id>'), '\\\\\\\\/dashboard\\\\\\\\/[0-9]+', '/dashboard/<dashboard_id>'), '\\\\\\\\/feature_flags\\\\\\\\/[0-9]+', '/feature_flags/<feature_flag_id>'), '\\\\\\\\/replay\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/replay/<replay_id>'), '\\\\\\\\/cohorts\\\\\\\\/[0-9]+', '/cohorts/<cohort_id>'), '\\\\\\\\/experiments\\\\\\\\/[0-9]+', '/experiments/<experiment_id>'), '\\\\\\\\/surveys\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/surveys/<survey_id>'), '\\\\\\\\/events\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/events/<event_id>'), '\\\\\\\\/verify_email\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/verify_email/<id>'), '\\\\\\\\/community\\\\\\\\/profiles\\\\\\\\/[0-9]+', '/community/profiles/<id>'), '\\\\\\\\/notebooks\\\\\\\\/[a-zA-Z0-9]+', '/notebooks/<notebook_id>'), '\\\\\\\\/groups\\\\\\\\/[0-9]+\\\\\\\\/[a-zA-Z0-9]+', '/groups/<id>'), '\\\\\\\\/signup\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/signup/<id>'), '\\\\\\\\/playlists\\\\\\\\/[a-zA-Z0-9]+', '/playlists/<playlist_id>'), '\\\\\\\\/destinations?\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+', '/destinations/<destination_id>'), '\\\\\\\\/properties\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/properties/<property_id>'), '\\\\\\\\/sources\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+', '/sources/<source_id>'), '\\\\\\\\/reset\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+', '/reset'), '\\\\\\\\/actions\\\\\\\\/[0-9]+', '/actions/<action_id>'), '\\\\\\\\/shared-metrics\\\\\\\\/[0-9]+', '/shared-metrics/<metric_id>') AS breakdown_value,\\n            session.session_id AS session_id,\\n            min(session.$start_timestamp) AS start_timestamp\\n        FROM\\n            events\\n        WHERE\\n            and(or(equals(events.event, '$pageview'), equals(events.event, '$screen')), or(and(greaterOrEquals(timestamp, assumeNotNull(toDateTime('2025-01-06 00:00:00'))), less(timestamp, assumeNotNull(toDateTime('2025-01-20 23:59:59')))), false), 1, 1, notEquals(breakdown_value, NULL))\\n        GROUP BY\\n            session_id,\\n            breakdown_value)\\n    GROUP BY\\n        breakdown_value) AS counts\\n    LEFT JOIN (SELECT\\n        breakdown_value,\\n        avgIf(is_bounce, and(greaterOrEquals(start_timestamp, assumeNotNull(toDateTime('2025-01-06 00:00:00'))), less(start_timestamp, assumeNotNull(toDateTime('2025-01-20 23:59:59'))))) AS bounce_rate,\\n        avgIf(is_bounce, false) AS previous_bounce_rate\\n    FROM\\n        (SELECT\\n            replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(replaceRegexpAll(session.$entry_pathname, '\\\\\\\\/person\\\\\\\\/[^\\\\\\\\/]+', '/person/<id>'), '.*sessionRecordingId=[a-zA-Z]+', 'Any Session Recording Route'), '.*\\\\\\\\/insights\\\\\\\\/[0-9a-zA-Z]+', '/insights/<insight_id>'), '\\\\\\\\/project\\\\\\\\/\\\\\\\\d+', '/project/<team_id>'), '\\\\\\\\/dashboard\\\\\\\\/[0-9]+', '/dashboard/<dashboard_id>'), '\\\\\\\\/feature_flags\\\\\\\\/[0-9]+', '/feature_flags/<feature_flag_id>'), '\\\\\\\\/replay\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/replay/<replay_id>'), '\\\\\\\\/cohorts\\\\\\\\/[0-9]+', '/cohorts/<cohort_id>'), '\\\\\\\\/experiments\\\\\\\\/[0-9]+', '/experiments/<experiment_id>'), '\\\\\\\\/surveys\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/surveys/<survey_id>'), '\\\\\\\\/events\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/events/<event_id>'), '\\\\\\\\/verify_email\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/verify_email/<id>'), '\\\\\\\\/community\\\\\\\\/profiles\\\\\\\\/[0-9]+', '/community/profiles/<id>'), '\\\\\\\\/notebooks\\\\\\\\/[a-zA-Z0-9]+', '/notebooks/<notebook_id>'), '\\\\\\\\/groups\\\\\\\\/[0-9]+\\\\\\\\/[a-zA-Z0-9]+', '/groups/<id>'), '\\\\\\\\/signup\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/signup/<id>'), '\\\\\\\\/playlists\\\\\\\\/[a-zA-Z0-9]+', '/playlists/<playlist_id>'), '\\\\\\\\/destinations?\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+', '/destinations/<destination_id>'), '\\\\\\\\/properties\\\\\\\\/[0-9a-f\\\\\\\\-]+', '/properties/<property_id>'), '\\\\\\\\/sources\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+', '/sources/<source_id>'), '\\\\\\\\/reset\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+', '/reset'), '\\\\\\\\/actions\\\\\\\\/[0-9]+', '/actions/<action_id>'), '\\\\\\\\/shared-metrics\\\\\\\\/[0-9]+', '/shared-metrics/<metric_id>') AS breakdown_value,\\n            any(session.$is_bounce) AS is_bounce,\\n            session.session_id AS session_id,\\n            min(session.$start_timestamp) AS start_timestamp\\n        FROM\\n            events\\n        WHERE\\n            and(or(equals(events.event, '$pageview'), equals(events.event, '$screen')), notEquals(breakdown_value, NULL), or(and(greaterOrEquals(timestamp, assumeNotNull(toDateTime('2025-01-06 00:00:00'))), less(timestamp, assumeNotNull(toDateTime('2025-01-20 23:59:59')))), false), 1, 1)\\n        GROUP BY\\n            session_id,\\n            breakdown_value)\\n    GROUP BY\\n        breakdown_value) AS bounce ON equals(counts.breakdown_value, bounce.breakdown_value)\\nORDER BY\\n    `context.columns.visitors` DESC,\\n    `context.columns.views` DESC,\\n    `context.columns.breakdown_value` ASC\\nLIMIT 11\\nOFFSET 0\",\"is_cached\":true,\"last_refresh\":\"2025-01-20T21:43:16.443321Z\",\"limit\":10,\"modifiers\":{\"bounceRateDurationSeconds\":null,\"bounceRatePageViewMode\":\"uniq_page_screen_autocaptures\",\"customChannelTypeRules\":[],\"dataWarehouseEventsModifiers\":null,\"debug\":null,\"inCohortVia\":\"auto\",\"materializationMode\":\"legacy_null_as_null\",\"optimizeJoinedFilters\":false,\"personsArgMaxVersion\":\"auto\",\"personsJoinMode\":null,\"personsOnEventsMode\":\"person_id_override_properties_on_events\",\"propertyGroupsMode\":\"optimized\",\"s3TableUseInvalidColumns\":null,\"sessionTableVersion\":\"auto\",\"useMaterializedViews\":true},\"next_allowed_client_refresh\":\"2025-01-20T21:58:16.443321Z\",\"offset\":0,\"query_status\":null,\"results\":[[\"/\",[76095,72341],[233693,241023],[0.1182,0.1162]],[\"/login\",[53629,51234],[192373,195481],[0.03184,0.02984]],[\"/project/<team_id>\",[33811,35102],[331828,328192],[0.009685,0.008685]],[\"/project/<team_id>/dashboard\",[16314,15892],[131470,134829],[0.010872,0.009872]],[\"/insights/<insight_id>\",[16249,16892],[516739,509234],[0.007644,0.008644]],[\"/project/<team_id>/insights\",[15902,15234],[148649,152938],[0.007896,0.006896]],[\"/project/<team_id>/web\",[15687,16234],[198440,195234],[0.007481,0.008481]],[\"/pricing\",[15295,14892],[24103,25234],[0.2477,0.2457]],[\"/project/<team_id>/replay/home\",[15189,15892],[632756,628192],[0.009924,0.008924]],[\"/project/<team_id>/dashboard/<dashboard_id>\",[14598,14129],[259451,262938],[0.007145,0.006145]]],\"samplingRate\":null,\"timezone\":\"US/Pacific\",\"timings\":[],\"types\":[[\"context.columns.breakdown_value\",\"Nullable(String)\"],[\"context.columns.visitors\",\"Tuple(UInt64, UInt64)\"],[\"context.columns.views\",\"Tuple(UInt64, UInt64)\"],[\"context.columns.bounce_rate\",\"Tuple(Nullable(Float64), Nullable(Float64))\"]]}")},"./frontend/src/scenes/web-analytics/tiles/__mocks__/ReferringDomain.json":module=>{module.exports=JSON.parse("{\"cache_key\":\"cache_1f01018c3a7bd9ef3f1fe37562a3ad2a_[{'alias': '/person/<id>', 'regex': '\\\\\\\\/person\\\\\\\\/[^\\\\\\\\/]+'}, {'alias': 'Any Session Recording Route', 'regex': '.*sessionRecordingId=[a-zA-Z]+'}, {'alias': '/insights/<insight_id>', 'regex': '.*\\\\\\\\/insights\\\\\\\\/[0-9a-zA-Z]+'}, {'alias': '/project/<team_id>', 'regex': '\\\\\\\\/project\\\\\\\\/\\\\\\\\d+'}, {'alias': '/dashboard/<dashboard_id>', 'regex': '\\\\\\\\/dashboard\\\\\\\\/[0-9]+'}, {'alias': '/feature_flags/<feature_flag_id>', 'regex': '\\\\\\\\/feature_flags\\\\\\\\/[0-9]+'}, {'alias': '/replay/<replay_id>', 'regex': '\\\\\\\\/replay\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/cohorts/<cohort_id>', 'regex': '\\\\\\\\/cohorts\\\\\\\\/[0-9]+'}, {'alias': '/experiments/<experiment_id>', 'regex': '\\\\\\\\/experiments\\\\\\\\/[0-9]+'}, {'alias': '/surveys/<survey_id>', 'regex': '\\\\\\\\/surveys\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/events/<event_id>', 'regex': '\\\\\\\\/events\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/verify_email/<id>', 'regex': '\\\\\\\\/verify_email\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/community/profiles/<id>', 'regex': '\\\\\\\\/community\\\\\\\\/profiles\\\\\\\\/[0-9]+'}, {'alias': '/notebooks/<notebook_id>', 'regex': '\\\\\\\\/notebooks\\\\\\\\/[a-zA-Z0-9]+'}, {'alias': '/groups/<id>', 'regex': '\\\\\\\\/groups\\\\\\\\/[0-9]+\\\\\\\\/[a-zA-Z0-9]+'}, {'alias': '/signup/<id>', 'regex': '\\\\\\\\/signup\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/playlists/<playlist_id>', 'regex': '\\\\\\\\/playlists\\\\\\\\/[a-zA-Z0-9]+'}, {'alias': '/destinations/<destination_id>', 'regex': '\\\\\\\\/destinations?\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+'}, {'alias': '/properties/<property_id>', 'regex': '\\\\\\\\/properties\\\\\\\\/[0-9a-f\\\\\\\\-]+'}, {'alias': '/sources/<source_id>', 'regex': '\\\\\\\\/sources\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+'}, {'alias': '/reset', 'regex': '\\\\\\\\/reset\\\\\\\\/[0-9a-zA-Z\\\\\\\\-]+'}, {'alias': '/actions/<action_id>', 'regex': '\\\\\\\\/actions\\\\\\\\/[0-9]+'}, {'alias': '/shared-metrics/<metric_id>', 'regex': '\\\\\\\\/shared-metrics\\\\\\\\/[0-9]+'}]\",\"cache_target_age\":\"2025-01-21T00:30:47.497494Z\",\"calculation_trigger\":null,\"columns\":[\"context.columns.breakdown_value\",\"context.columns.visitors\",\"context.columns.views\"],\"error\":null,\"hasMore\":true,\"hogql\":\"SELECT\\n    breakdown_value AS `context.columns.breakdown_value`,\\n    tuple(uniq(filtered_person_id), NULL) AS `context.columns.visitors`,\\n    tuple(sum(filtered_pageview_count), NULL) AS `context.columns.views`\\nFROM\\n    (SELECT\\n        any(person_id) AS filtered_person_id,\\n        count() AS filtered_pageview_count,\\n        session.$entry_referring_domain AS breakdown_value,\\n        session.session_id AS session_id,\\n        any(session.$is_bounce) AS is_bounce,\\n        min(session.$start_timestamp) AS start_timestamp\\n    FROM\\n        events\\n    WHERE\\n        and(or(and(greaterOrEquals(timestamp, assumeNotNull(toDateTime('2025-01-06 00:00:00'))), less(timestamp, assumeNotNull(toDateTime('2025-01-20 23:59:59')))), false), or(equals(event, '$pageview'), equals(event, '$screen')), 1, notEquals(breakdown_value, NULL))\\n    GROUP BY\\n        session_id,\\n        breakdown_value)\\nGROUP BY\\n    `context.columns.breakdown_value`\\nORDER BY\\n    `context.columns.visitors` DESC,\\n    `context.columns.views` DESC,\\n    `context.columns.breakdown_value` ASC\\nLIMIT 11\\nOFFSET 0\",\"is_cached\":false,\"last_refresh\":\"2025-01-20T22:30:47.497494Z\",\"limit\":10,\"modifiers\":{\"bounceRateDurationSeconds\":null,\"bounceRatePageViewMode\":\"uniq_page_screen_autocaptures\",\"customChannelTypeRules\":[],\"dataWarehouseEventsModifiers\":null,\"debug\":null,\"inCohortVia\":\"auto\",\"materializationMode\":\"legacy_null_as_null\",\"optimizeJoinedFilters\":false,\"personsArgMaxVersion\":\"auto\",\"personsJoinMode\":null,\"personsOnEventsMode\":\"person_id_override_properties_on_events\",\"propertyGroupsMode\":\"optimized\",\"s3TableUseInvalidColumns\":null,\"sessionTableVersion\":\"auto\",\"useMaterializedViews\":true},\"next_allowed_client_refresh\":\"2025-01-20T22:45:47.497494Z\",\"offset\":0,\"query_status\":null,\"results\":[[\"$direct\",[104808,100000],[4172018,4200000]],[\"www.google.com\",[53556,48234],[293642,298481]],[\"posthog.com\",[7357,8912],[24274,29183]],[\"us.posthog.com\",[4149,3891],[170370,175293]],[\"eu.posthog.com\",[2370,3142],[105763,118924]],[\"www.linkedin.com\",[2210,1893],[4626,4829]],[\"duckduckgo.com\",[2134,2531],[8948,8237]],[\"github.com\",[1605,1428],[9318,9475]],[\"www.bing.com\",[1217,1502],[5421,5234]],[\"t.co\",[1060,892],[2931,3047]]],\"samplingRate\":null,\"timezone\":\"US/Pacific\",\"timings\":[],\"types\":[[\"context.columns.breakdown_value\",\"Nullable(String)\"],[\"context.columns.visitors\",\"Tuple(UInt64, Nullable(Nothing))\"],[\"context.columns.views\",\"Tuple(UInt64, Nullable(Nothing))\"]]}")},"./frontend/src/scenes/web-analytics/tiles/__mocks__/Retention.json":module=>{module.exports=JSON.parse('{"cache_key":"cache_aba8c07511e89a6429bd57b150a564af","cache_target_age":"2025-01-21T09:41:32.060989Z","calculation_trigger":null,"error":null,"hogql":"SELECT\\n    [actor_activity.breakdown_values] AS breakdown_values,\\n    actor_activity.intervals_from_base AS intervals_from_base,\\n    count(DISTINCT actor_activity.actor_id) AS count\\nFROM\\n    (SELECT\\n        events.person_id AS actor_id,\\n        if(has(arraySort(groupUniqArrayIf(toStartOfWeek(events.timestamp, 3), and(equals(events.event, \'$pageview\'), and(greaterOrEquals(events.timestamp, toStartOfWeek(toDateTime(\'2024-12-02 00:00:00.000000\'), 3)), lessOrEquals(events.timestamp, toDateTime(\'2025-01-27 00:00:00.000000\')))))) AS _target_timestamps, toStartOfWeek(minIf(events.timestamp, equals(events.event, \'$pageview\')))), _target_timestamps, []) AS target_timestamps,\\n        arraySort(groupUniqArrayIf(toStartOfWeek(events.timestamp, 3), equals(events.event, \'$pageview\'))) AS returning_timestamps,\\n        arrayMap(x -> plus(toStartOfWeek(assumeNotNull(toDateTime(\'2024-12-02 00:00:00\'))), toIntervalWeek(x)), range(0, 8)) AS date_range,\\n        arrayJoin(arrayFilter(x -> greater(x, -1), arrayMap((_breakdown_value, breakdown_value_timestamp) -> if(equals(target_timestamps[1], breakdown_value_timestamp), minus(_breakdown_value, 1), -1), arrayEnumerate(date_range), date_range))) AS breakdown_values,\\n        arrayJoin(arrayConcat(if(equals(target_timestamps[1], date_range[plus(breakdown_values, 1)]), [0], []), arrayFilter(x -> greater(x, 0), arrayMap(_timestamp -> minus(indexOf(arraySlice(date_range, plus(breakdown_values, 1)), _timestamp), 1), returning_timestamps)))) AS intervals_from_base\\n    FROM\\n        events\\n    WHERE\\n        in(event, tuple(\'$pageview\', \'$pageview\'))\\n    GROUP BY\\n        actor_id) AS actor_activity\\nGROUP BY\\n    breakdown_values,\\n    intervals_from_base\\nORDER BY\\n    breakdown_values ASC,\\n    intervals_from_base ASC\\nLIMIT 10000","is_cached":true,"last_refresh":"2025-01-20T21:41:32.060989Z","modifiers":{"bounceRateDurationSeconds":null,"bounceRatePageViewMode":"uniq_page_screen_autocaptures","customChannelTypeRules":[],"dataWarehouseEventsModifiers":null,"debug":null,"inCohortVia":"auto","materializationMode":"legacy_null_as_null","optimizeJoinedFilters":false,"personsArgMaxVersion":"auto","personsJoinMode":null,"personsOnEventsMode":"person_id_override_properties_on_events","propertyGroupsMode":"optimized","s3TableUseInvalidColumns":null,"sessionTableVersion":"auto","useMaterializedViews":true},"next_allowed_client_refresh":"2025-01-20T21:56:32.060989Z","query_status":null,"results":[{"date":"2024-12-02T00:00:00-08:00","label":"Week 0","values":[{"count":52839},{"count":2501},{"count":1610},{"count":859},{"count":845},{"count":1135},{"count":1081},{"count":287}]},{"date":"2024-12-09T00:00:00-08:00","label":"Week 1","values":[{"count":51654},{"count":2449},{"count":1044},{"count":1015},{"count":1304},{"count":1193},{"count":304}]},{"date":"2024-12-16T00:00:00-08:00","label":"Week 2","values":[{"count":46686},{"count":1557},{"count":1205},{"count":1453},{"count":1251},{"count":338}]},{"date":"2024-12-23T00:00:00-08:00","label":"Week 3","values":[{"count":36137},{"count":1208},{"count":887},{"count":704},{"count":173}]},{"date":"2024-12-30T00:00:00-08:00","label":"Week 4","values":[{"count":38690},{"count":1751},{"count":1083},{"count":264}]},{"date":"2025-01-06T00:00:00-08:00","label":"Week 5","values":[{"count":54805},{"count":2665},{"count":543}]},{"date":"2025-01-13T00:00:00-08:00","label":"Week 6","values":[{"count":58006},{"count":1008}]},{"date":"2025-01-20T00:00:00-08:00","label":"Week 7","values":[{"count":6656}]}],"timezone":"US/Pacific","timings":[]}')}}]);