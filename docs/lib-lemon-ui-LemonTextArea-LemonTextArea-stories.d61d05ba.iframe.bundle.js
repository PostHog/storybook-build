"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[19801],{"../../frontend/src/lib/lemon-ui/LemonTextArea/LemonTextArea.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Disabled:()=>Disabled,EmptyLemonTextMarkdown:()=>EmptyLemonTextMarkdown,LemonTextMarkdownWithFooter:()=>LemonTextMarkdownWithFooter,LemonTextMarkdownWithMaxLength:()=>LemonTextMarkdownWithMaxLength,LemonTextMarkdownWithMaxLengthAndFooter:()=>LemonTextMarkdownWithMaxLengthAndFooter,LemonTextMarkdownWithText:()=>LemonTextMarkdownWithText,WithFooter:()=>WithFooter,WithFooterAndMaxLength:()=>WithFooterAndMaxLength,WithMaxLength:()=>WithMaxLength,WithMaxLengthExceeded:()=>WithMaxLengthExceeded,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lib_lemon_ui_LemonTextArea_LemonTextAreaMarkdown__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonTextArea/LemonTextAreaMarkdown.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_LemonTextArea__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonTextArea/LemonTextArea.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon Text Area",component:_LemonTextArea__WEBPACK_IMPORTED_MODULE_2__._,args:{value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."},tags:["autodocs"]},Template=props=>{let[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(props.value);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonTextArea__WEBPACK_IMPORTED_MODULE_2__._,{...props,value:value,onChange:newValue=>setValue(newValue)})},Basic=Template.bind({});Basic.args={};let Disabled=Template.bind({});Disabled.args={disabled:!0};let WithMaxLength=Template.bind({});WithMaxLength.args={maxLength:100,value:"1234567890"};let WithMaxLengthExceeded=Template.bind({});WithMaxLengthExceeded.args={maxLength:5,value:"1234567890"};let WithFooter=Template.bind({});WithFooter.args={footer:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"text-xs",children:"I am a custom footer"})};let WithFooterAndMaxLength=Template.bind({});WithFooterAndMaxLength.args={footer:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"text-xs",children:"I am a custom footer"}),maxLength:5,value:"1234567890"};let EmptyLemonTextMarkdown=()=>{let[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonTextArea_LemonTextAreaMarkdown__WEBPACK_IMPORTED_MODULE_0__.X,{value:value,onChange:newValue=>setValue(newValue)})},LemonTextMarkdownWithText=()=>{let[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("# Title\n\n**bold** _italic_");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonTextArea_LemonTextAreaMarkdown__WEBPACK_IMPORTED_MODULE_0__.X,{value:value,onChange:newValue=>setValue(newValue)})},LemonTextMarkdownWithMaxLength=()=>{let[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("# Title\n\n**bold** _italic_");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonTextArea_LemonTextAreaMarkdown__WEBPACK_IMPORTED_MODULE_0__.X,{value:value,onChange:newValue=>setValue(newValue),maxLength:12})},LemonTextMarkdownWithFooter=()=>{let[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("# Title\n\n**bold** _italic_");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonTextArea_LemonTextAreaMarkdown__WEBPACK_IMPORTED_MODULE_0__.X,{value:value,onChange:newValue=>setValue(newValue),footer:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"text-xs",children:"I am a custom footer"})})},LemonTextMarkdownWithMaxLengthAndFooter=()=>{let[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("# Title\n\n**bold** _italic_");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonTextArea_LemonTextAreaMarkdown__WEBPACK_IMPORTED_MODULE_0__.X,{value:value,onChange:newValue=>setValue(newValue),maxLength:12,footer:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"text-xs",children:"I am a custom footer"})})};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...Basic.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...Disabled.parameters?.docs?.source}}},WithMaxLength.parameters={...WithMaxLength.parameters,docs:{...WithMaxLength.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...WithMaxLength.parameters?.docs?.source}}},WithMaxLengthExceeded.parameters={...WithMaxLengthExceeded.parameters,docs:{...WithMaxLengthExceeded.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...WithMaxLengthExceeded.parameters?.docs?.source}}},WithFooter.parameters={...WithFooter.parameters,docs:{...WithFooter.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...WithFooter.parameters?.docs?.source}}},WithFooterAndMaxLength.parameters={...WithFooterAndMaxLength.parameters,docs:{...WithFooterAndMaxLength.parameters?.docs,source:{originalSource:"(props: LemonTextAreaProps) => {\n  const [value, setValue] = useState(props.value);\n  return <LemonTextArea {...props} value={value} onChange={newValue => setValue(newValue)} />;\n}",...WithFooterAndMaxLength.parameters?.docs?.source}}},EmptyLemonTextMarkdown.parameters={...EmptyLemonTextMarkdown.parameters,docs:{...EmptyLemonTextMarkdown.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  const [value, setValue] = useState('');\n  return <_LemonTextMarkdown value={value} onChange={newValue => setValue(newValue)} />;\n}",...EmptyLemonTextMarkdown.parameters?.docs?.source}}},LemonTextMarkdownWithText.parameters={...LemonTextMarkdownWithText.parameters,docs:{...LemonTextMarkdownWithText.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  const [value, setValue] = useState('# Title\\n\\n**bold** _italic_');\n  return <_LemonTextMarkdown value={value} onChange={newValue => setValue(newValue)} />;\n}",...LemonTextMarkdownWithText.parameters?.docs?.source}}},LemonTextMarkdownWithMaxLength.parameters={...LemonTextMarkdownWithMaxLength.parameters,docs:{...LemonTextMarkdownWithMaxLength.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  const [value, setValue] = useState('# Title\\n\\n**bold** _italic_');\n  return <_LemonTextMarkdown value={value} onChange={newValue => setValue(newValue)} maxLength={12} />;\n}",...LemonTextMarkdownWithMaxLength.parameters?.docs?.source}}},LemonTextMarkdownWithFooter.parameters={...LemonTextMarkdownWithFooter.parameters,docs:{...LemonTextMarkdownWithFooter.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  const [value, setValue] = useState('# Title\\n\\n**bold** _italic_');\n  return <_LemonTextMarkdown value={value} onChange={newValue => setValue(newValue)} footer={<div className=\"text-xs\">I am a custom footer</div>} />;\n}",...LemonTextMarkdownWithFooter.parameters?.docs?.source}}},LemonTextMarkdownWithMaxLengthAndFooter.parameters={...LemonTextMarkdownWithMaxLengthAndFooter.parameters,docs:{...LemonTextMarkdownWithMaxLengthAndFooter.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  const [value, setValue] = useState('# Title\\n\\n**bold** _italic_');\n  return <_LemonTextMarkdown value={value} onChange={newValue => setValue(newValue)} maxLength={12} footer={<div className=\"text-xs\">I am a custom footer</div>} />;\n}",...LemonTextMarkdownWithMaxLengthAndFooter.parameters?.docs?.source}}};let __namedExportsOrder=["Basic","Disabled","WithMaxLength","WithMaxLengthExceeded","WithFooter","WithFooterAndMaxLength","EmptyLemonTextMarkdown","LemonTextMarkdownWithText","LemonTextMarkdownWithMaxLength","LemonTextMarkdownWithFooter","LemonTextMarkdownWithMaxLengthAndFooter"]}}]);