"use strict";(self.webpackChunk_posthog_frontend=self.webpackChunk_posthog_frontend||[]).push([[72134],{"./frontend/src/scenes/settings/organization/Invites.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CurrentUserIsAdmin:()=>CurrentUserIsAdmin,CurrentUserIsMember:()=>CurrentUserIsMember,CurrentUserIsOwner:()=>CurrentUserIsOwner,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var kea_router__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/kea-router@3.2.1_kea@3.1.5_react@18.2.0_/node_modules/kea-router/lib/index.js"),lib_api_mock__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/api.mock.ts"),lib_constants__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/lib/constants.tsx"),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),scenes_App__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./frontend/src/scenes/App.tsx"),scenes_urls__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./frontend/src/scenes/urls.ts"),_mocks_browser__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./frontend/src/mocks/browser.tsx"),_mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./frontend/src/mocks/fixtures/_preflight.json"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Scenes-Other/Org Member Invites",parameters:{layout:"fullscreen",viewMode:"story"},decorators:[(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_6__.x8)({get:{"/api/users/@me":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_1__.T6,organization:{membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_2__.Dk.Owner}}],"/api/organizations/@current/":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_1__.On,membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_2__.Dk.Owner}]}})]},CurrentUserIsOwner=()=>((0,_mocks_browser__WEBPACK_IMPORTED_MODULE_6__.ok)({get:{"/_preflight":{..._mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_7__,cloud:!1,realm:"hosted-clickhouse",available_social_auth_providers:{github:!1,gitlab:!1,"google-oauth2":!1,saml:!1}}}}),(0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{kea_router__WEBPACK_IMPORTED_MODULE_0__.router.actions.push(scenes_urls__WEBPACK_IMPORTED_MODULE_5__.j.settings("organization-members"))},[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(scenes_App__WEBPACK_IMPORTED_MODULE_4__.g,{})),CurrentUserIsAdmin=()=>((0,_mocks_browser__WEBPACK_IMPORTED_MODULE_6__.ok)({get:{"/_preflight":{..._mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_7__,cloud:!1,realm:"hosted-clickhouse",available_social_auth_providers:{github:!1,gitlab:!1,"google-oauth2":!1,saml:!1}},"/api/organizations/@current/":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_1__.On,membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_2__.Dk.Admin}]}}),(0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{kea_router__WEBPACK_IMPORTED_MODULE_0__.router.actions.push(scenes_urls__WEBPACK_IMPORTED_MODULE_5__.j.settings("organization-members"))},[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(scenes_App__WEBPACK_IMPORTED_MODULE_4__.g,{})),CurrentUserIsMember=()=>((0,_mocks_browser__WEBPACK_IMPORTED_MODULE_6__.ok)({get:{"/_preflight":{..._mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_7__,cloud:!1,realm:"hosted-clickhouse",available_social_auth_providers:{github:!1,gitlab:!1,"google-oauth2":!1,saml:!1}},"/api/organizations/@current/":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_1__.On,membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_2__.Dk.Member}]}}),(0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{kea_router__WEBPACK_IMPORTED_MODULE_0__.router.actions.push(scenes_urls__WEBPACK_IMPORTED_MODULE_5__.j.settings("organization-members"))},[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(scenes_App__WEBPACK_IMPORTED_MODULE_4__.g,{}));CurrentUserIsOwner.parameters={...CurrentUserIsOwner.parameters,docs:{...CurrentUserIsOwner.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  useStorybookMocks({\n    get: {\n      '/_preflight': {\n        ...preflightJson,\n        cloud: false,\n        realm: 'hosted-clickhouse',\n        available_social_auth_providers: {\n          github: false,\n          gitlab: false,\n          'google-oauth2': false,\n          saml: false\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    router.actions.push(urls.settings('organization-members'));\n  }, []);\n  return <App />;\n}",...CurrentUserIsOwner.parameters?.docs?.source}}},CurrentUserIsAdmin.parameters={...CurrentUserIsAdmin.parameters,docs:{...CurrentUserIsAdmin.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  useStorybookMocks({\n    get: {\n      '/_preflight': {\n        ...preflightJson,\n        cloud: false,\n        realm: 'hosted-clickhouse',\n        available_social_auth_providers: {\n          github: false,\n          gitlab: false,\n          'google-oauth2': false,\n          saml: false\n        }\n      },\n      '/api/organizations/@current/': (): MockSignature => [200, {\n        ...MOCK_DEFAULT_ORGANIZATION,\n        membership_level: OrganizationMembershipLevel.Admin\n      }]\n    }\n  });\n  useEffect(() => {\n    router.actions.push(urls.settings('organization-members'));\n  }, []);\n  return <App />;\n}",...CurrentUserIsAdmin.parameters?.docs?.source}}},CurrentUserIsMember.parameters={...CurrentUserIsMember.parameters,docs:{...CurrentUserIsMember.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  useStorybookMocks({\n    get: {\n      '/_preflight': {\n        ...preflightJson,\n        cloud: false,\n        realm: 'hosted-clickhouse',\n        available_social_auth_providers: {\n          github: false,\n          gitlab: false,\n          'google-oauth2': false,\n          saml: false\n        }\n      },\n      '/api/organizations/@current/': (): MockSignature => [200, {\n        ...MOCK_DEFAULT_ORGANIZATION,\n        membership_level: OrganizationMembershipLevel.Member\n      }]\n    }\n  });\n  useEffect(() => {\n    router.actions.push(urls.settings('organization-members'));\n  }, []);\n  return <App />;\n}",...CurrentUserIsMember.parameters?.docs?.source}}};let __namedExportsOrder=["CurrentUserIsOwner","CurrentUserIsAdmin","CurrentUserIsMember"]}}]);