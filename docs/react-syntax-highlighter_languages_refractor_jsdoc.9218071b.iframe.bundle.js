"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[38825,40902],{"../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/javadoclike.js":module=>{function javadoclike(Prism){!function(Prism){var javaDocLike=Prism.languages.javadoclike={parameter:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/};function docCommentSupport(lang,callback){var tokenName="doc-comment",grammar=Prism.languages[lang];if(grammar){var token=grammar[tokenName];if(!token){var definition={};definition[tokenName]={pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,lookbehind:!0,alias:"comment"},token=(grammar=Prism.languages.insertBefore(lang,"comment",definition))[tokenName]}if(token instanceof RegExp&&(token=grammar[tokenName]={pattern:token}),Array.isArray(token))for(var i=0,l=token.length;i<l;i++)token[i]instanceof RegExp&&(token[i]={pattern:token[i]}),callback(token[i]);else callback(token)}}Object.defineProperty(javaDocLike,"addSupport",{value:function addSupport(languages,docLanguage){"string"==typeof languages&&(languages=[languages]),languages.forEach(function(lang){docCommentSupport(lang,function(pattern){pattern.inside||(pattern.inside={}),pattern.inside.rest=docLanguage})})}}),javaDocLike.addSupport(["java","javascript","php"],javaDocLike)}(Prism)}module.exports=javadoclike,javadoclike.displayName="javadoclike",javadoclike.aliases=[]},"../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jsdoc.js":(module,__unused_webpack_exports,__webpack_require__)=>{var refractorJavadoclike=__webpack_require__("../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/javadoclike.js"),refractorTypescript=__webpack_require__("../../node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/typescript.js");function jsdoc(Prism){var javascript,type,parameterPrefix;Prism.register(refractorJavadoclike),Prism.register(refractorTypescript),javascript=Prism.languages.javascript,parameterPrefix="(@(?:arg|argument|param|property)\\s+(?:"+(type=/\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source)+"\\s+)?)",Prism.languages.jsdoc=Prism.languages.extend("javadoclike",{parameter:{pattern:RegExp(parameterPrefix+/(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source),lookbehind:!0,inside:{punctuation:/\./}}}),Prism.languages.insertBefore("jsdoc","keyword",{"optional-parameter":{pattern:RegExp(parameterPrefix+/\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source),lookbehind:!0,inside:{parameter:{pattern:/(^\[)[$\w\xA0-\uFFFF\.]+/,lookbehind:!0,inside:{punctuation:/\./}},code:{pattern:/(=)[\s\S]*(?=\]$)/,lookbehind:!0,inside:javascript,alias:"language-javascript"},punctuation:/[=[\]]/}},"class-name":[{pattern:RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(/<TYPE>/g,function(){return type})),lookbehind:!0,inside:{punctuation:/\./}},{pattern:RegExp("(@[a-z]+\\s+)"+type),lookbehind:!0,inside:{string:javascript.string,number:javascript.number,boolean:javascript.boolean,keyword:Prism.languages.typescript.keyword,operator:/=>|\.\.\.|[&|?:*]/,punctuation:/[.,;=<>{}()[\]]/}}],example:{pattern:/(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,lookbehind:!0,inside:{code:{pattern:/^([\t ]*(?:\*\s*)?)\S.*$/m,lookbehind:!0,inside:javascript,alias:"language-javascript"}}}}),Prism.languages.javadoclike.addSupport("javascript",Prism.languages.jsdoc)}module.exports=jsdoc,jsdoc.displayName="jsdoc",jsdoc.aliases=[]}}]);