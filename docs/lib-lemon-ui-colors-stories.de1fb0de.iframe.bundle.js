"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[7297],{"./frontend/src/lib/lemon-ui/colors.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllPreThousandColorOptions:()=>AllPreThousandColorOptions,AllThreeThousandColorOptions:()=>AllThreeThousandColorOptions,ColorPalette:()=>ColorPalette,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_LemonTable__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonTable/index.ts"),_Popover_Popover__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/lib/lemon-ui/Popover/Popover.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Colors",parameters:{docs:{description:{component:"Colors can be used in a variety of ways"}}},tags:["autodocs"]},colorGroups={primary:["primary-highlight","primary-light","primary","primary-dark"],danger:["danger-highlight","danger-light","danger","danger-dark"],warning:["warning-highlight","warning-light","warning","warning-dark"],success:["success-highlight","success-light","success","success-dark"],"primary-alt":["primary-alt-highlight","primary-alt","primary-alt-dark"],"default (primary text)":["default","default-dark"],"muted (secondary text)":["muted","muted-dark"],"muted-alt ":["muted-alt","muted-alt-dark"],border:["border","border-light","border-bold","border-active"],light:["white","light"]},preThousand=["primary-highlight","primary-light","primary","primary-dark","danger-highlight","danger-lighter","danger-light","danger","danger-dark","warning-highlight","warning-light","warning","warning-dark","success-highlight","success-light","success","success-dark","primary-alt-highlight","primary-alt","primary-alt-dark","default","default-dark","muted","muted-dark","muted-alt","muted-alt-dark","mark","white","bg-light","side","mid","border","border-light","border-bold","border-active","transparent","brand-blue","brand-red","brand-yellow","brand-key"],threeThousand=["text-3000","muted-3000","trace-3000","primary-3000","primary-3000-hover","secondary-3000","secondary-3000-hover","accent-3000","bg-3000","border-3000","border-bold-3000","glass-bg-3000","glass-border-3000"];function ColorPalette(){const[hover,setHover]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"flex gap-4 flex-wrap items-start",children:Object.keys(colorGroups).map((group=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"flex flex-col",style:{width:150,height:200},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"font-bold text-ellipsis mb-2",children:group}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"rounded-lg overflow-hidden flex flex-col flex-1",children:colorGroups[group].map((color=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_Popover_Popover__WEBPACK_IMPORTED_MODULE_2__.J2,{visible:hover===color,placement:"right",overlay:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:color})}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`bg-${color} flex-1`,onMouseEnter:()=>setHover(color)})},color)))})]},group)))})}function AllPreThousandColorOptions(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonTable__WEBPACK_IMPORTED_MODULE_1__.g,{dataSource:preThousand.map((color=>({name:color,color}))),columns:[{title:"Class name",key:"name",dataIndex:"name",render:function RenderName(name){return name}},{title:"Color",key:"color",dataIndex:"color",render:function RenderColor(color){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`bg-${color} flex-1 border rounded h-8 w-8`})}}]})}function AllThreeThousandColorOptions(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonTable__WEBPACK_IMPORTED_MODULE_1__.g,{dataSource:threeThousand.map((color=>({name:color,color}))),columns:[{title:"Class name",key:"name",dataIndex:"name",render:function RenderName(name){return name}},{title:"Light mode",key:"light",dataIndex:"color",render:function RenderColor(color){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"bg-bg-3000-light flex items-center justify-center border rounded h-16 w-16",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`bg-${color}-light border rounded h-8 w-8`})})}},{title:"Dark mode",key:"dark",dataIndex:"color",render:function RenderColor(color){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"bg-bg-3000-dark flex items-center justify-center border rounded h-16 w-16",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`bg-${color}-dark border rounded h-8 w-8`})})}}]})}ColorPalette.parameters={...ColorPalette.parameters,docs:{...ColorPalette.parameters?.docs,source:{originalSource:'function ColorPalette(): JSX.Element {\n  const [hover, setHover] = useState<string>();\n  return <div className="flex gap-4 flex-wrap items-start">\n            {Object.keys(colorGroups).map(group => <div key={group} className="flex flex-col" style={{\n      width: 150,\n      height: 200\n    }}>\n                    <div className="font-bold text-ellipsis mb-2">{group}</div>\n                    <div className="rounded-lg overflow-hidden flex flex-col flex-1">\n                        {colorGroups[group].map((color: string) => <Popover key={color} visible={hover === color} placement="right" overlay={<>\n                                        <h3>{color}</h3>\n                                    </>}>\n                                <div className={`bg-${color} flex-1`} onMouseEnter={() => setHover(color)} />\n                            </Popover>)}\n                    </div>\n                </div>)}\n        </div>;\n}',...ColorPalette.parameters?.docs?.source}}},AllPreThousandColorOptions.parameters={...AllPreThousandColorOptions.parameters,docs:{...AllPreThousandColorOptions.parameters?.docs,source:{originalSource:"function AllPreThousandColorOptions(): JSX.Element {\n  return <LemonTable dataSource={preThousand.map(color => ({\n    name: color,\n    color\n  }))} columns={[{\n    title: 'Class name',\n    key: 'name',\n    dataIndex: 'name',\n    render: function RenderName(name) {\n      return name;\n    }\n  }, {\n    title: 'Color',\n    key: 'color',\n    dataIndex: 'color',\n    render: function RenderColor(color) {\n      return <div className={`bg-${(color as string)} flex-1 border rounded h-8 w-8`} />;\n    }\n  }]} />;\n}",...AllPreThousandColorOptions.parameters?.docs?.source}}},AllThreeThousandColorOptions.parameters={...AllThreeThousandColorOptions.parameters,docs:{...AllThreeThousandColorOptions.parameters?.docs,source:{originalSource:"function AllThreeThousandColorOptions(): JSX.Element {\n  return <LemonTable dataSource={threeThousand.map(color => ({\n    name: color,\n    color\n  }))} columns={[{\n    title: 'Class name',\n    key: 'name',\n    dataIndex: 'name',\n    render: function RenderName(name) {\n      return name;\n    }\n  }, {\n    title: 'Light mode',\n    key: 'light',\n    dataIndex: 'color',\n    render: function RenderColor(color) {\n      return <div className={'bg-bg-3000-light flex items-center justify-center border rounded h-16 w-16'}>\n                                <div className={`bg-${(color as string)}-light border rounded h-8 w-8`} />\n                            </div>;\n    }\n  }, {\n    title: 'Dark mode',\n    key: 'dark',\n    dataIndex: 'color',\n    render: function RenderColor(color) {\n      return <div className={'bg-bg-3000-dark flex items-center justify-center border rounded h-16 w-16'}>\n                                <div className={`bg-${(color as string)}-dark border rounded h-8 w-8`} />\n                            </div>;\n    }\n  }]} />;\n}",...AllThreeThousandColorOptions.parameters?.docs?.source}}};const __namedExportsOrder=["ColorPalette","AllPreThousandColorOptions","AllThreeThousandColorOptions"]}}]);