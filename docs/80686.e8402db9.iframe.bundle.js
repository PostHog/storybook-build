"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[80686],{"./frontend/src/scenes/llm-observability/LLMObservabilityScene.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LLMObservabilityScene:()=>LLMObservabilityScene,scene:()=>scene});var src=__webpack_require__("./frontend/@posthog/lemon-ui/src/index.ts"),clsx_m=__webpack_require__("./node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js"),index_esm=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),CardMeta=__webpack_require__("./frontend/src/lib/components/Cards/CardMeta.tsx"),LemonMenu=__webpack_require__("./frontend/src/lib/lemon-ui/LemonMenu/LemonMenu.tsx"),react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),urls=__webpack_require__("./frontend/src/scenes/urls.ts"),ErrorBoundary=__webpack_require__("./frontend/src/layout/ErrorBoundary/index.ts"),themeLogic=__webpack_require__("./frontend/src/layout/navigation-3000/themeLogic.ts"),Query=__webpack_require__("./frontend/src/queries/Query/Query.tsx"),InsightDetails=__webpack_require__("./frontend/src/lib/components/Cards/InsightCard/InsightDetails.tsx"),InsightMeta=__webpack_require__("./frontend/src/lib/components/Cards/InsightCard/InsightMeta.tsx"),TopHeading=__webpack_require__("./frontend/src/lib/components/Cards/InsightCard/TopHeading.tsx"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let QueryCard=react.forwardRef(function QueryCard(_ref,ref){var _divProps$style,_theme$boxStyle;let{query,title,description,highlighted,ribbonColor,className,...divProps}=_ref,{theme}=(0,index_esm.useValues)(themeLogic.b),[areDetailsShown,setAreDetailsShown]=(0,react.useState)(!1);return(0,jsx_runtime.jsx)("div",{className:(0,clsx_m.default)("InsightCard border",highlighted&&"InsightCard--highlighted",className),"data-attr":"insight-card",...divProps,style:{...null!==(_divProps$style=divProps?.style)&&void 0!==_divProps$style?_divProps$style:{},...null!==(_theme$boxStyle=theme?.boxStyle)&&void 0!==_theme$boxStyle?_theme$boxStyle:{}},ref:ref,children:(0,jsx_runtime.jsxs)(ErrorBoundary.S,{tags:{feature:"insight"},children:[(0,jsx_runtime.jsx)(CardMeta.I,{ribbonColor:ribbonColor,setAreDetailsShown:setAreDetailsShown,areDetailsShown:areDetailsShown,topHeading:(0,jsx_runtime.jsx)(TopHeading.l,{query:query}),content:(0,jsx_runtime.jsx)(InsightMeta.Q,{title:title,description:description}),metaDetails:(0,jsx_runtime.jsx)(InsightDetails.Mz,{query:query}),samplingFactor:"samplingFactor"in query&&"number"==typeof query.samplingFactor?query.samplingFactor:void 0,moreButtons:(0,jsx_runtime.jsx)(LemonMenu.tN,{items:[{label:"Open as new insight",to:urls.j.insightNew(void 0,void 0,query)}]}),showEditingControls:!0}),(0,jsx_runtime.jsx)("div",{className:"InsightCard__viz",children:(0,jsx_runtime.jsx)(Query.A,{query:query,readOnly:!0,embedded:!0})})]})})});var DateFilter=__webpack_require__("./frontend/src/lib/components/DateFilter/DateFilter.tsx"),TestAccountFiltersSwitch=__webpack_require__("./frontend/src/lib/components/TestAccountFiltersSwitch.tsx"),dataNodeCollectionLogic=__webpack_require__("./frontend/src/queries/nodes/DataNode/dataNodeCollectionLogic.ts"),schema_general=__webpack_require__("./frontend/src/queries/schema/schema-general.ts"),lib=__webpack_require__("./node_modules/.pnpm/kea-loaders@3.0.0_kea@3.1.5/node_modules/kea-loaders/lib/index.js"),api=__webpack_require__("./frontend/src/lib/api.ts"),constants=__webpack_require__("./frontend/src/lib/constants.tsx"),dayjs=__webpack_require__("./frontend/src/lib/dayjs.ts"),types=__webpack_require__("./frontend/src/types.ts");let isDefinitionStale=definition=>{let parsedLastSeen=definition.last_seen_at?(0,dayjs.Bv)(definition.last_seen_at):null;return!!parsedLastSeen&&(0,dayjs.Bv)().diff(parsedLastSeen,"seconds")>constants.Mo},llmObservabilityLogic=(0,index_esm.kea)([(0,index_esm.path)(["scenes","llm-observability","llmObservabilityLogic"]),(0,index_esm.actions)({setDates:(dateFrom,dateTo)=>({dateFrom,dateTo}),setShouldFilterTestAccounts:shouldFilterTestAccounts=>({shouldFilterTestAccounts})}),(0,index_esm.reducers)({dateFilter:[{dateFrom:"-30d",dateTo:null},{setDates:(_,_ref)=>{let{dateFrom,dateTo}=_ref;return{dateFrom,dateTo}}}],shouldFilterTestAccounts:[!1,{setShouldFilterTestAccounts:(_,_ref2)=>{let{shouldFilterTestAccounts}=_ref2;return shouldFilterTestAccounts}}]}),(0,index_esm.selectors)({tiles:[s=>[s.dateFilter,s.shouldFilterTestAccounts],(dateFilter,shouldFilterTestAccounts)=>[{title:"Generative AI users",description:"To count users, set `distinct_id` in LLM tracking.",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",kind:schema_general.OH.EventsNode,math:types.vN.UniqueUsers}],dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}},{title:"Traces",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",kind:schema_general.OH.EventsNode,math:types.mY.HogQL,math_hogql:"COUNT(DISTINCT properties.$ai_trace_id)"}],dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}},{title:"Total cost (USD)",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",math:types.O4.Sum,kind:schema_general.OH.EventsNode,math_property:"$ai_total_cost_usd"}],trendsFilter:{aggregationAxisPrefix:"$",decimalPlaces:4,display:types.Qb.BoldNumber},dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}},{title:"Cost per user (USD)",description:"Average cost for each generative AI user active in the data point's period.",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",math:types.O4.Sum,kind:schema_general.OH.EventsNode,math_property:"$ai_total_cost_usd"},{event:"$ai_generation",kind:schema_general.OH.EventsNode,math:types.vN.UniqueUsers}],trendsFilter:{formula:"A / B",aggregationAxisPrefix:"$",decimalPlaces:2},dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}},{title:"Cost by model (USD)",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",math:types.O4.Sum,kind:schema_general.OH.EventsNode,math_property:"$ai_total_cost_usd"}],breakdownFilter:{breakdown_type:"event",breakdown:"$ai_model"},trendsFilter:{aggregationAxisPrefix:"$",decimalPlaces:2,display:types.Qb.ActionsBarValue,showValuesOnSeries:!0},dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}},{title:"Generation calls",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",kind:schema_general.OH.EventsNode}],dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}},{title:"Generation latency by model (median)",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",math:types.O4.Median,kind:schema_general.OH.EventsNode,math_property:"$ai_latency"}],breakdownFilter:{breakdown:"$ai_model"},trendsFilter:{aggregationAxisPostfix:"\xa0s",decimalPlaces:3,yAxisScaleType:"log10"},dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}},{title:"Generations by HTTP status",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",kind:schema_general.OH.EventsNode}],breakdownFilter:{breakdown:"$ai_http_status"},trendsFilter:{display:types.Qb.ActionsBarValue},dateRange:{date_from:dateFilter.dateFrom,date_to:dateFilter.dateTo},filterTestAccounts:shouldFilterTestAccounts}}]]}),(0,lib.loaders)({hasSentAiGenerationEvent:{__default:void 0,loadAIEventDefinition:async()=>{let aiGenerationDefinition=await api.ZP.eventDefinitions.list({event_type:types.uW.Event,search:"$ai_generation"}),definition=aiGenerationDefinition.results.find(r=>"$ai_generation"===r.name);return!!definition&&!isDefinitionStale(definition)}}}),(0,index_esm.afterMount)(_ref3=>{let{actions}=_ref3;actions.loadAIEventDefinition()})]),scene={component:LLMObservabilityScene},Filters=()=>{let{dateFilter:{dateTo,dateFrom},shouldFilterTestAccounts}=(0,index_esm.useValues)(llmObservabilityLogic),{setDates,setShouldFilterTestAccounts}=(0,index_esm.useActions)(llmObservabilityLogic);return(0,jsx_runtime.jsxs)("div",{className:"mb-4 flex justify-between items-center",children:[(0,jsx_runtime.jsx)(DateFilter.f,{dateFrom:dateFrom,dateTo:dateTo,onChange:setDates}),(0,jsx_runtime.jsx)(TestAccountFiltersSwitch.Z,{checked:shouldFilterTestAccounts,onChange:setShouldFilterTestAccounts})]})},Tiles=()=>{let{tiles}=(0,index_esm.useValues)(llmObservabilityLogic);return(0,jsx_runtime.jsx)("div",{className:"mt-2 grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-6 gap-4",children:tiles.map((_ref,i)=>{let{title,description,query}=_ref;return(0,jsx_runtime.jsx)(QueryCard,{title:title,description:description,query:{kind:schema_general.OH.InsightVizNode,source:query},className:(0,clsx_m.default)("h-96",i<3||i>=5?"xl:col-span-2":"xl:col-span-3")},i)})})},IngestionStatusCheck=()=>{let{hasSentAiGenerationEvent}=(0,index_esm.useValues)(llmObservabilityLogic);return!1!==hasSentAiGenerationEvent?null:(0,jsx_runtime.jsxs)(src.Vp,{type:"warning",className:"mt-2",children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)("strong",{children:"No LLM generation events have been detected!"})}),(0,jsx_runtime.jsxs)("p",{children:["To use the LLM Observability product, please"," ",(0,jsx_runtime.jsx)(src.rU,{to:"https://posthog.com/docs/ai-engineering/observability",children:"instrument your LLM calls with the PostHog SDK"})," ","(otherwise it'll be a little empty!)"]}),(0,jsx_runtime.jsxs)("p",{children:["To get cost information, you'll also"," ",(0,jsx_runtime.jsx)(src.rU,{to:"/pipeline/new/transformation",children:'need to enable the "AI Costs" transformation.'})]})]})};function LLMObservabilityScene(){return(0,jsx_runtime.jsxs)(index_esm.BindLogic,{logic:dataNodeCollectionLogic.y,props:{key:"llm-observability-data"},children:[(0,jsx_runtime.jsx)(IngestionStatusCheck,{}),(0,jsx_runtime.jsx)(Filters,{}),(0,jsx_runtime.jsx)(Tiles,{})]})}}}]);