"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[73086],{"../../frontend/src/scenes/max/Max.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EmptyThreadLoading:()=>EmptyThreadLoading,GenerationFailureThread:()=>GenerationFailureThread,Thread:()=>Thread,ThreadWithFailedGeneration:()=>ThreadWithFailedGeneration,ThreadWithForm:()=>ThreadWithForm,ThreadWithRateLimit:()=>ThreadWithRateLimit,Welcome:()=>Welcome,WelcomeLoadingSuggestions:()=>WelcomeLoadingSuggestions,WelcomeSuggestionsAvailable:()=>WelcomeSuggestionsAvailable,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Max_stories});var index_esm=__webpack_require__("../../node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),api_mock=__webpack_require__("../../frontend/src/lib/api.mock.ts"),react=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),maxSettingsLogic=__webpack_require__("../../frontend/src/scenes/settings/environment/maxSettingsLogic.tsx"),browser=__webpack_require__("../../frontend/src/mocks/browser.tsx"),schema_assistant_messages=__webpack_require__("../../frontend/src/queries/schema/schema-assistant-messages.ts");let failureMessage_namespaceObject=JSON.parse('{"type":"ai/failure","content":"Oops! It looks like Iâ€™m having trouble answering this. Could you please try again?","id":"test-failure-message"}'),summaryMessage_namespaceObject=JSON.parse('{"type":"ai","content":"Looks like no pageviews have occured. Get some damn users.","id":"test-summary-message"}'),visualizationMessage_namespaceObject=JSON.parse('{"type":"ai/viz","plan":"Test plan","query":{"aggregation_group_type_index":null,"breakdownFilter":{"breakdown_hide_other_aggregation":null,"breakdown_histogram_bin_count":null,"breakdown_limit":null,"breakdowns":[{"group_type_index":null,"histogram_bin_count":null,"normalize_url":null,"property":"$current_url","type":"event"}]},"compareFilter":null,"dateRange":{"date_from":"-30d","date_to":null,"explicitDate":false},"filterTestAccounts":true,"interval":"day","kind":"TrendsQuery","properties":[],"samplingFactor":null,"series":[{"custom_name":"Pageviews","event":"$pageview","fixedProperties":null,"kind":"EventsNode","math":"total","math_group_type_index":null,"math_property":null,"name":null,"orderBy":null,"properties":null,"response":null}],"trendsFilter":{"aggregationAxisFormat":"numeric","aggregationAxisPostfix":null,"aggregationAxisPrefix":null,"breakdown_histogram_bin_count":null,"decimalPlaces":null,"display":"ActionsBar","formula":null,"hiddenLegendIndexes":null,"showLabelsOnSeries":null,"showLegend":false,"showPercentStackView":false,"showValuesOnSeries":false,"smoothingIntervals":1,"yAxisScaleType":null}},"id":"test-visualization-message"}'),CONVERSATION_ID="b1b4b3b4-1b3b-4b3b-1b3b4b3b4b3b",humanMessage={type:schema_assistant_messages.pj.Human,content:"What are my most popular pages?",id:"human-1"},reasoningMessage1={type:schema_assistant_messages.pj.Reasoning,content:"Picking relevant events and properties",id:"reasoning-1"},reasoningMessage2={type:schema_assistant_messages.pj.Reasoning,content:"Generating trends",id:"reasoning-2"};function generateChunk(events){return events.map(event=>event.startsWith("event:")?`${event}
`:`${event}

`).join("")}let chatResponseChunk=generateChunk(["event: conversation",`data: ${JSON.stringify({id:CONVERSATION_ID})}`,"event: message",`data: ${JSON.stringify(humanMessage)}`,"event: message",`data: ${JSON.stringify(reasoningMessage1)}`,"event: message",`data: ${JSON.stringify(reasoningMessage2)}`,"event: message",`data: ${JSON.stringify(visualizationMessage_namespaceObject)}`,"event: message",`data: ${JSON.stringify(summaryMessage_namespaceObject)}`]);generateChunk(["event: message",`data: ${JSON.stringify(reasoningMessage1)}`,"event: message",`data: ${JSON.stringify(reasoningMessage2)}`]);let generationFailure={type:schema_assistant_messages.PP.GenerationError},responseWithReasoningStepsOnly={...visualizationMessage_namespaceObject,answer:null},generationFailureChunk=generateChunk(["event: message",`data: ${JSON.stringify(responseWithReasoningStepsOnly)}`,"event: status",`data: ${JSON.stringify(generationFailure)}`]),failureChunk=generateChunk(["event: message",`data: ${JSON.stringify(failureMessage_namespaceObject)}`]),formMessage={type:schema_assistant_messages.pj.Assistant,content:"Does this look like a good summary of what your product does?",id:"assistant-1",meta:{form:{options:[{value:"Yes, save this",variant:"primary"},{value:"No, not quite right"}]}}},formChunk=generateChunk(["event: message",`data: ${JSON.stringify(formMessage)}`]);var Max=__webpack_require__("../../frontend/src/scenes/max/Max.tsx"),maxLogic=__webpack_require__("../../frontend/src/scenes/max/maxLogic.ts"),jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let Max_stories={title:"Scenes-App/Max AI",decorators:[(0,browser.x8)({post:{"/api/environments/:team_id/conversations/":(_,res,ctx)=>res(ctx.text(chatResponseChunk))},get:{"/api/organizations/@current/":()=>[200,{...api_mock.On,is_ai_data_processing_approved:!0}]}})],parameters:{layout:"fullscreen",viewMode:"story",mockDate:"2023-01-28"}},Template=_ref=>{let{conversationId:CONVERSATION_ID}=_ref;return(0,jsx_runtime.jsx)("div",{className:"relative flex flex-col h-fit",children:(0,jsx_runtime.jsx)(index_esm.BindLogic,{logic:maxLogic.v,props:{conversationId:CONVERSATION_ID},children:(0,jsx_runtime.jsx)(Max.MaxInstance,{})})})},Welcome=()=>((0,browser.ok)({get:{"/api/organizations/@current/":()=>[200,{...api_mock.On,is_ai_data_processing_approved:!1}]}}),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})),WelcomeSuggestionsAvailable=()=>{(0,browser.ok)({post:{"/api/environments/:team_id/query/":()=>[200,{questions:["What are our most popular pages in the blog?","Where are our new users located?","Who are the biggest customers using our paid product?","Which feature drives most usage?"]}]}});let{loadCoreMemorySuccess}=(0,index_esm.useActions)(maxSettingsLogic.x);return(0,react.useEffect)(()=>{loadCoreMemorySuccess({id:"x",text:"A Storybook test."})},[]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})},WelcomeLoadingSuggestions=()=>{(0,browser.ok)({post:{"/api/environments/:team_id/query/":(_req,_res,ctx)=>[ctx.delay("infinite")]}});let{loadCoreMemorySuccess}=(0,index_esm.useActions)(maxSettingsLogic.x);return(0,react.useEffect)(()=>{loadCoreMemorySuccess({id:"x",text:"A Storybook test."})},[]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})};WelcomeLoadingSuggestions.parameters={testOptions:{waitForLoadersToDisappear:!1}};let Thread=()=>{let{askMax}=(0,index_esm.useActions)((0,maxLogic.v)({conversationId:CONVERSATION_ID}));return(0,react.useEffect)(()=>{askMax(humanMessage.content)},[]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})},EmptyThreadLoading=()=>{(0,browser.ok)({post:{"/api/environments/:team_id/conversations/":(_req,_res,ctx)=>[ctx.delay("infinite")]}});let{askMax}=(0,index_esm.useActions)((0,maxLogic.v)({conversationId:CONVERSATION_ID}));return(0,react.useEffect)(()=>{askMax(humanMessage.content)},[]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})};EmptyThreadLoading.parameters={testOptions:{waitForLoadersToDisappear:!1}};let GenerationFailureThread=()=>{(0,browser.ok)({post:{"/api/environments/:team_id/conversations/":(_,res,ctx)=>res(ctx.text(generationFailureChunk))}});let{askMax,setMessageStatus}=(0,index_esm.useActions)((0,maxLogic.v)({conversationId:CONVERSATION_ID})),{threadRaw,threadLoading}=(0,index_esm.useValues)((0,maxLogic.v)({conversationId:CONVERSATION_ID}));return(0,react.useEffect)(()=>{askMax(humanMessage.content)},[]),(0,react.useEffect)(()=>{2!==threadRaw.length||threadLoading||setMessageStatus(1,"error")},[threadRaw.length,threadLoading]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})},ThreadWithFailedGeneration=()=>{(0,browser.ok)({post:{"/api/environments/:team_id/conversations/":(_,res,ctx)=>res(ctx.text(failureChunk))}});let{askMax}=(0,index_esm.useActions)((0,maxLogic.v)({conversationId:CONVERSATION_ID}));return(0,react.useEffect)(()=>{askMax(humanMessage.content)},[]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})},ThreadWithRateLimit=()=>{(0,browser.ok)({post:{"/api/environments/:team_id/conversations/":(_,res,ctx)=>res(ctx.text(chatResponseChunk),ctx.status(429))}});let{askMax}=(0,index_esm.useActions)((0,maxLogic.v)({conversationId:CONVERSATION_ID}));return(0,react.useEffect)(()=>{askMax("Is Bielefeld real?")},[]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})},ThreadWithForm=()=>{(0,browser.ok)({post:{"/api/environments/:team_id/conversations/":(_,res,ctx)=>res(ctx.text(formChunk))}});let{askMax}=(0,index_esm.useActions)((0,maxLogic.v)({conversationId:CONVERSATION_ID}));return(0,react.useEffect)(()=>{askMax(humanMessage.content)},[]),(0,jsx_runtime.jsx)(Template,{conversationId:CONVERSATION_ID})};Welcome.parameters={...Welcome.parameters,docs:{...Welcome.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    get: {\n      '/api/organizations/@current/': () => [200, {\n        ...MOCK_DEFAULT_ORGANIZATION,\n        // We override data processing opt-in to false, so that we see the welcome screen as a first-time user would\n        is_ai_data_processing_approved: false\n      }]\n    }\n  });\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...Welcome.parameters?.docs?.source}}},WelcomeSuggestionsAvailable.parameters={...WelcomeSuggestionsAvailable.parameters,docs:{...WelcomeSuggestionsAvailable.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    post: {\n      '/api/environments/:team_id/query/': () => [200, {\n        questions: ['What are our most popular pages in the blog?', 'Where are our new users located?', 'Who are the biggest customers using our paid product?', 'Which feature drives most usage?']\n      }]\n    }\n  });\n  const {\n    loadCoreMemorySuccess\n  } = useActions(maxSettingsLogic);\n  useEffect(() => {\n    loadCoreMemorySuccess({\n      id: 'x',\n      text: 'A Storybook test.'\n    });\n  }, []);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...WelcomeSuggestionsAvailable.parameters?.docs?.source}}},WelcomeLoadingSuggestions.parameters={...WelcomeLoadingSuggestions.parameters,docs:{...WelcomeLoadingSuggestions.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    post: {\n      '/api/environments/:team_id/query/': (_req, _res, ctx) => [ctx.delay('infinite')]\n    }\n  });\n  const {\n    loadCoreMemorySuccess\n  } = useActions(maxSettingsLogic);\n  useEffect(() => {\n    loadCoreMemorySuccess({\n      id: 'x',\n      text: 'A Storybook test.'\n    });\n  }, []);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...WelcomeLoadingSuggestions.parameters?.docs?.source}}},Thread.parameters={...Thread.parameters,docs:{...Thread.parameters?.docs,source:{originalSource:"() => {\n  const {\n    askMax\n  } = useActions(maxLogic({\n    conversationId: CONVERSATION_ID\n  }));\n  useEffect(() => {\n    askMax(humanMessage.content);\n  }, []);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...Thread.parameters?.docs?.source}}},EmptyThreadLoading.parameters={...EmptyThreadLoading.parameters,docs:{...EmptyThreadLoading.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    post: {\n      '/api/environments/:team_id/conversations/': (_req, _res, ctx) => [ctx.delay('infinite')]\n    }\n  });\n  const {\n    askMax\n  } = useActions(maxLogic({\n    conversationId: CONVERSATION_ID\n  }));\n  useEffect(() => {\n    askMax(humanMessage.content);\n  }, []);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...EmptyThreadLoading.parameters?.docs?.source}}},GenerationFailureThread.parameters={...GenerationFailureThread.parameters,docs:{...GenerationFailureThread.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    post: {\n      '/api/environments/:team_id/conversations/': (_, res, ctx) => res(ctx.text(generationFailureChunk))\n    }\n  });\n  const {\n    askMax,\n    setMessageStatus\n  } = useActions(maxLogic({\n    conversationId: CONVERSATION_ID\n  }));\n  const {\n    threadRaw,\n    threadLoading\n  } = useValues(maxLogic({\n    conversationId: CONVERSATION_ID\n  }));\n  useEffect(() => {\n    askMax(humanMessage.content);\n  }, []);\n  useEffect(() => {\n    if (threadRaw.length === 2 && !threadLoading) {\n      setMessageStatus(1, 'error');\n    }\n  }, [threadRaw.length, threadLoading]);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...GenerationFailureThread.parameters?.docs?.source}}},ThreadWithFailedGeneration.parameters={...ThreadWithFailedGeneration.parameters,docs:{...ThreadWithFailedGeneration.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    post: {\n      '/api/environments/:team_id/conversations/': (_, res, ctx) => res(ctx.text(failureChunk))\n    }\n  });\n  const {\n    askMax\n  } = useActions(maxLogic({\n    conversationId: CONVERSATION_ID\n  }));\n  useEffect(() => {\n    askMax(humanMessage.content);\n  }, []);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...ThreadWithFailedGeneration.parameters?.docs?.source}}},ThreadWithRateLimit.parameters={...ThreadWithRateLimit.parameters,docs:{...ThreadWithRateLimit.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    post: {\n      '/api/environments/:team_id/conversations/': (_, res, ctx) => res(ctx.text(chatResponseChunk), ctx.status(429))\n    }\n  });\n  const {\n    askMax\n  } = useActions(maxLogic({\n    conversationId: CONVERSATION_ID\n  }));\n  useEffect(() => {\n    askMax('Is Bielefeld real?');\n  }, []);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...ThreadWithRateLimit.parameters?.docs?.source}}},ThreadWithForm.parameters={...ThreadWithForm.parameters,docs:{...ThreadWithForm.parameters?.docs,source:{originalSource:"() => {\n  useStorybookMocks({\n    post: {\n      '/api/environments/:team_id/conversations/': (_, res, ctx) => res(ctx.text(formChunk))\n    }\n  });\n  const {\n    askMax\n  } = useActions(maxLogic({\n    conversationId: CONVERSATION_ID\n  }));\n  useEffect(() => {\n    askMax(humanMessage.content);\n  }, []);\n  return <Template conversationId={CONVERSATION_ID} />;\n}",...ThreadWithForm.parameters?.docs?.source}}};let __namedExportsOrder=["Welcome","WelcomeSuggestionsAvailable","WelcomeLoadingSuggestions","Thread","EmptyThreadLoading","GenerationFailureThread","ThreadWithFailedGeneration","ThreadWithRateLimit","ThreadWithForm"]}}]);
//# sourceMappingURL=scenes-max-Max-stories.5d3b6cfc.iframe.bundle.js.map