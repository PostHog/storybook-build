"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[14e3],{"../../frontend/src/scenes/web-analytics/WebActiveHoursHeatmap/WebActiveHoursHeatmap.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NoData:()=>NoData,WithData:()=>WithData,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _queries_schema_schema_general__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/queries/schema/schema-general.ts"),_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/types.ts");let __WEBPACK_DEFAULT_EXPORT__={title:"Scenes/Web Analytics/WebActiveHoursHeatmap",component:__webpack_require__("../../frontend/src/scenes/web-analytics/WebActiveHoursHeatmap/WebActiveHoursHeatmap.tsx").U,parameters:{layout:"fullscreen"}},theQuery={kind:_queries_schema_schema_general__WEBPACK_IMPORTED_MODULE_0__.OH.CalendarHeatmapQuery,series:[{kind:_queries_schema_schema_general__WEBPACK_IMPORTED_MODULE_0__.OH.EventsNode,event:"$pageview",name:"$pageview",math:_types__WEBPACK_IMPORTED_MODULE_1__.vN.UniqueUsers}],dateRange:{date_from:"-7d",date_to:"now"},properties:[]},mockContext={insightProps:{dashboardItemId:void 0}},WithData={args:{query:theQuery,context:mockContext,cachedResults:{results:{data:[{row:1,column:9,value:150},{row:1,column:10,value:200},{row:2,column:14,value:180},{row:3,column:16,value:220}],columnAggregations:[{column:9,value:150},{column:10,value:200},{column:14,value:180},{column:16,value:220}],rowAggregations:[{row:1,value:350},{row:2,value:180},{row:3,value:220}],allAggregations:750}}}},NoData={args:{query:theQuery,context:mockContext,cachedResults:{results:{data:[],columnAggregations:[],rowAggregations:[],allAggregations:0}}}};WithData.parameters={...WithData.parameters,docs:{...WithData.parameters?.docs,source:{originalSource:"{\n  args: {\n    query: theQuery,\n    context: mockContext,\n    cachedResults: {\n      results: mockData\n    }\n  }\n}",...WithData.parameters?.docs?.source}}},NoData.parameters={...NoData.parameters,docs:{...NoData.parameters?.docs,source:{originalSource:"{\n  args: {\n    query: theQuery,\n    context: mockContext,\n    cachedResults: {\n      results: {\n        data: [],\n        columnAggregations: [],\n        rowAggregations: [],\n        allAggregations: 0\n      }\n    }\n  }\n}",...NoData.parameters?.docs?.source}}};let __namedExportsOrder=["WithData","NoData"]}}]);