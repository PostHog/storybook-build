"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[57297],{"../../frontend/src/lib/lemon-ui/colors.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllPreThousandColorOptions:()=>AllPreThousandColorOptions,AllThreeThousandColorOptions:()=>AllThreeThousandColorOptions,ColorPalette:()=>ColorPalette,DataColors:()=>DataColors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_LemonTable__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/lib/lemon-ui/LemonTable/index.ts"),_Popover_Popover__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/lib/lemon-ui/Popover/Popover.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Colors",parameters:{docs:{description:{component:"Colors can be used in a variety of ways"}}},tags:["autodocs"]},colorGroups={primary:["primary-highlight","primary"],danger:["danger-highlight","danger-light","danger","danger-dark"],warning:["warning-highlight","warning","warning-dark"],success:["success-highlight","success-light","success","success-dark"],"primary-alt":["primary-alt-highlight","primary-alt"],text:["muted","default"],border:["border","border-light","border-bold"],light:["white","light"]},preThousand=["bg-primary","bg-danger-highlight","bg-danger-lighter","bg-danger-light","bg-danger","bg-danger-dark","bg-warning-highlight","bg-warning","bg-warning-dark","bg-success-highlight","bg-success-light","bg-success","bg-success-dark","bg-primary-alt-highlight","bg-primary-alt","bg-muted","bg-muted-alt","bg-mark","bg-white","bg-surface-primary","bg-side","bg-mid","bg-border","bg-border-light","bg-border-bold","bg-transparent","bg-brand-blue","bg-brand-red","bg-brand-yellow","bg-brand-key"],threeThousand=[["bg-danger-highlight","bg-red-500"],["bg-danger-lighter","bg-red-500"],["bg-danger-light","bg-red-500"],["bg-danger","bg-red-500"],["bg-danger-dark","bg-red-500"],["bg-warning-highlight","bg-red-500"],["bg-warning","bg-red-500"],["bg-warning-dark","bg-red-500"],["bg-highlight","bg-red-500"],["bg-success-highlight","bg-red-500"],["bg-success-light","bg-red-500"],["bg-success","bg-red-500"],["bg-success-dark","bg-red-500"],["bg-muted","bg-red-500"],["bg-muted-alt","bg-red-500"],["bg-mark","bg-red-500"],["bg-white","bg-red-500"],["bg-side","bg-red-500"],["bg-mid","bg-red-500"],["bg-border","bg-red-500"],["bg-border-light","bg-red-500"],["bg-border-bold","bg-red-500"],["bg-transparent","bg-red-500"],["bg-link","bg-red-500"],["bg-brand-blue","bg-red-500"],["bg-brand-red","bg-red-500"],["bg-brand-yellow","bg-red-500"],["bg-brand-key","bg-red-500"],["bg-text-3000-light","bg-red-500"],["bg-text-secondary-3000-light","bg-red-500"],["bg-muted-3000-light","bg-red-500"],["bg-trace-3000-light","bg-red-500"],["bg-primary-3000-light","bg-red-500"],["bg-primary-highlight-light","bg-red-500"],["bg-primary-3000-hover-light","bg-red-500"],["bg-primary-3000-active-light","bg-red-500"],["bg-secondary-3000-light","bg-red-500"],["bg-secondary-3000-hover-light","bg-red-500"],["bg-primary-light","bg-red-500"],["bg-border-3000-light","bg-red-500"],["bg-border-bold-3000-light","bg-red-500"],["bg-glass-bg-3000-light","bg-red-500"],["bg-glass-border-3000-light","bg-red-500"],["bg-link-3000-light","bg-red-500"],["bg-primary-3000-frame-bg-light","bg-red-500"],["bg-primary-3000-button-bg-light","bg-red-500"],["bg-primary-3000-button-border-light","bg-red-500"],["bg-primary-3000-button-border-hover-light","bg-red-500"],["bg-secondary-3000-frame-bg-light","bg-red-500"],["bg-secondary-3000-button-bg-light","bg-red-500"],["bg-secondary-3000-button-border-light","bg-red-500"],["bg-secondary-3000-button-border-hover-light","bg-red-500"],["bg-danger-3000-frame-bg-light","bg-red-500"],["bg-danger-3000-button-border-light","bg-red-500"],["bg-danger-3000-button-border-hover-light","bg-red-500"],["bg-text-3000-dark","bg-red-500"],["bg-text-secondary-3000-dark","bg-red-500"],["bg-muted-3000-dark","bg-red-500"],["bg-trace-3000-dark","bg-red-500"],["bg-secondary-3000-dark","bg-red-500"],["bg-secondary-3000-hover-dark","bg-red-500"],["bg-border-3000-dark","bg-red-500"],["bg-border-bold-3000-dark","bg-red-500"],["bg-glass-bg-3000-dark","bg-red-500"],["bg-glass-border-3000-dark","bg-red-500"],["bg-link-3000-dark","bg-red-500"],["bg-secondary-3000-frame-bg-dark","bg-red-500"],["bg-secondary-3000-button-bg-dark","bg-red-500"],["bg-secondary-3000-button-border-dark","bg-red-500"],["bg-secondary-3000-button-border-hover-dark","bg-red-500"],["bg-danger-3000-frame-bg-dark","bg-red-500"],["bg-danger-3000-button-border-dark","bg-red-500"],["bg-danger-3000-button-border-hover-dark","bg-red-500"],["bg-default","bg-red-500"],["bg-text-3000","bg-red-500"],["bg-text-secondary-3000","bg-red-500"],["bg-muted-3000","bg-red-500"],["bg-primary-3000","bg-red-500"],["bg-secondary-3000","bg-red-500"],["bg-secondary-3000-hover","bg-red-500"]],dataColors=["data-color-1","data-color-2","data-color-3","data-color-4","data-color-5","data-color-6","data-color-7","data-color-8","data-color-9","data-color-10","data-color-11","data-color-12","data-color-13","data-color-14","data-color-15"];function ColorPalette(){let[hover,setHover]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"flex gap-4 flex-wrap items-start",children:Object.keys(colorGroups).map(group=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"flex flex-col w-40 h-50",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"font-bold text-ellipsis mb-2",children:group}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"rounded-lg overflow-hidden flex flex-col flex-1",children:colorGroups[group].map(color=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_Popover_Popover__WEBPACK_IMPORTED_MODULE_2__.J2,{visible:hover===color,placement:"right",overlay:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{children:color})}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`bg-${color} flex-1`,onMouseEnter:()=>setHover(color)})},color))})]},group))})}function AllPreThousandColorOptions(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonTable__WEBPACK_IMPORTED_MODULE_1__.g,{dataSource:preThousand.map(color=>({name:color,color})),columns:[{title:"Class name",key:"name",dataIndex:"name",render:function RenderName(name){return name}},{title:"Color",key:"color",dataIndex:"color",render:function RenderColor(color){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"relative h-8 w-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`${color} absolute inset-0 border rounded z-20`}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"absolute inset-0 flex items-center justify-center z-10",children:"\uD83E\uDD94"})]})}}]})}function AllThreeThousandColorOptions(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonTable__WEBPACK_IMPORTED_MODULE_1__.g,{dataSource:threeThousand.map(color=>({name:color,color})),columns:[{title:"Class name",key:"name",dataIndex:"name",render:function RenderName(name){return name?`${name[0]}/${name[1]}`:""}},{title:"Light mode",key:"light",dataIndex:"color",render:function RenderColor(colorOldNew){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"flex gap-2",children:colorOldNew&&colorOldNew.map(color=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`${color} border rounded h-8 w-8`},color))})}},{title:"Dark mode",key:"dark",dataIndex:"color",render:function RenderColor(colorOldNew){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"bg-primary-dark flex items-center justify-center border rounded h-16 w-16",children:colorOldNew&&colorOldNew.map(color=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:`${color} border rounded h-8 w-8`},color))})}}]})}function DataColors(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonTable__WEBPACK_IMPORTED_MODULE_1__.g,{dataSource:dataColors.map(color=>({name:color,color})),columns:[{title:"Class name",key:"name",dataIndex:"name",render:function RenderName(name){return name}},{title:"Light mode",key:"light",dataIndex:"color",render:function RenderColor(color){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"bg-primary-light flex items-center justify-center border rounded h-16 w-16",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"border rounded h-8 w-8",style:{backgroundColor:`var(--${color})`}})})}},{title:"Dark mode",key:"dark",dataIndex:"color",render:function RenderColor(color){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"bg-primary-dark flex items-center justify-center border rounded h-16 w-16",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"border rounded h-8 w-8",style:{backgroundColor:`var(--${color})`}})})}}]})}ColorPalette.parameters={...ColorPalette.parameters,docs:{...ColorPalette.parameters?.docs,source:{originalSource:'function ColorPalette(): JSX.Element {\n  const [hover, setHover] = useState<string>();\n  return <div className="flex gap-4 flex-wrap items-start">\n            {Object.keys(colorGroups).map(group => <div key={group} className="flex flex-col w-40 h-50">\n                    <div className="font-bold text-ellipsis mb-2">{group}</div>\n                    <div className="rounded-lg overflow-hidden flex flex-col flex-1">\n                        {colorGroups[group as keyof typeof colorGroups].map((color: string) => <Popover key={color} visible={hover === color} placement="right" overlay={<>\n                                        <h3>{color}</h3>\n                                    </>}>\n                                <div className={`bg-${color} flex-1`} onMouseEnter={() => setHover(color)} />\n                            </Popover>)}\n                    </div>\n                </div>)}\n        </div>;\n}',...ColorPalette.parameters?.docs?.source}}},AllPreThousandColorOptions.parameters={...AllPreThousandColorOptions.parameters,docs:{...AllPreThousandColorOptions.parameters?.docs,source:{originalSource:"function AllPreThousandColorOptions(): JSX.Element {\n  return <LemonTable dataSource={preThousand.map(color => ({\n    name: color,\n    color\n  }))} columns={[{\n    title: 'Class name',\n    key: 'name',\n    dataIndex: 'name',\n    render: function RenderName(name) {\n      return name;\n    }\n  }, {\n    title: 'Color',\n    key: 'color',\n    dataIndex: 'color',\n    render: function RenderColor(color) {\n      return <div className=\"relative h-8 w-8\">\n                                <div className={`${color as string} absolute inset-0 border rounded z-20`} />\n                                <div className=\"absolute inset-0 flex items-center justify-center z-10\">\uD83E\uDD94</div>\n                            </div>;\n    }\n  }]} />;\n}",...AllPreThousandColorOptions.parameters?.docs?.source}}},AllThreeThousandColorOptions.parameters={...AllThreeThousandColorOptions.parameters,docs:{...AllThreeThousandColorOptions.parameters?.docs,source:{originalSource:"function AllThreeThousandColorOptions(): JSX.Element {\n  return <LemonTable dataSource={threeThousand.map(color => ({\n    name: color,\n    color\n  }))} columns={[{\n    title: 'Class name',\n    key: 'name',\n    dataIndex: 'name',\n    render: function RenderName(name) {\n      if (!name) {\n        return '';\n      }\n      return `${name[0]}/${name[1]}`;\n    }\n  }, {\n    title: 'Light mode',\n    key: 'light',\n    dataIndex: 'color',\n    render: function RenderColor(colorOldNew) {\n      return <div className=\"flex gap-2\">\n                                {colorOldNew && colorOldNew.map(color => <div key={color} className={`${color} border rounded h-8 w-8`} />)}\n                            </div>;\n    }\n  }, {\n    title: 'Dark mode',\n    key: 'dark',\n    dataIndex: 'color',\n    render: function RenderColor(colorOldNew) {\n      return <div className=\"bg-primary-dark flex items-center justify-center border rounded h-16 w-16\">\n                                {colorOldNew && colorOldNew.map(color => <div key={color} className={`${color} border rounded h-8 w-8`} />)}\n                            </div>;\n    }\n  }]} />;\n}",...AllThreeThousandColorOptions.parameters?.docs?.source}}},DataColors.parameters={...DataColors.parameters,docs:{...DataColors.parameters?.docs,source:{originalSource:"function DataColors(): JSX.Element {\n  return <LemonTable dataSource={dataColors.map(color => ({\n    name: color,\n    color\n  }))} columns={[{\n    title: 'Class name',\n    key: 'name',\n    dataIndex: 'name',\n    render: function RenderName(name) {\n      return name;\n    }\n  }, {\n    title: 'Light mode',\n    key: 'light',\n    dataIndex: 'color',\n    render: function RenderColor(color) {\n      return <div className=\"bg-primary-light flex items-center justify-center border rounded h-16 w-16\">\n                                <div className=\"border rounded h-8 w-8\"\n        // eslint-disable-next-line react/forbid-dom-props\n        style={{\n          backgroundColor: `var(--${color})`\n        }} />\n                            </div>;\n    }\n  }, {\n    title: 'Dark mode',\n    key: 'dark',\n    dataIndex: 'color',\n    render: function RenderColor(color) {\n      return <div className=\"bg-primary-dark flex items-center justify-center border rounded h-16 w-16\">\n                                <div className=\"border rounded h-8 w-8\"\n        // eslint-disable-next-line react/forbid-dom-props\n        style={{\n          backgroundColor: `var(--${color})`\n        }} />\n                            </div>;\n    }\n  }]} />;\n}",...DataColors.parameters?.docs?.source}}};let __namedExportsOrder=["ColorPalette","AllPreThousandColorOptions","AllThreeThousandColorOptions","DataColors"]}}]);