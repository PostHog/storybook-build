"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[68097],{"../../frontend/src/lib/components/PathCleanFilters/PathCleanFilters.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,TableUI:()=>TableUI,TableUIEmpty:()=>TableUIEmpty,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_PathCleanFilters__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/lib/components/PathCleanFilters/PathCleanFilters.tsx"),_PathCleanFiltersTable__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/lib/components/PathCleanFilters/PathCleanFiltersTable.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Filters/PathCleanFilters",component:_PathCleanFilters__WEBPACK_IMPORTED_MODULE_1__.f},TableUI={render:props=>{let[filters,setFilters]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([{alias:"insights",regex:"/insights/\\w+/dashboard$",order:0},{alias:"feature-flags",regex:"/feature_flags/\\d+$",order:1},{alias:"recordings",regex:"/replay/\\w+",order:2},{alias:"",regex:"/api/v1/.*",order:3},{alias:"invalid",regex:"[invalid(regex",order:4}]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_PathCleanFiltersTable__WEBPACK_IMPORTED_MODULE_2__.U,{...props,filters:filters,setFilters:setFilters})},parameters:{docs:{description:{story:"New table-based interface for path cleaning filters"}}}},TableUIEmpty={render:()=>{let[filters,setFilters]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_PathCleanFiltersTable__WEBPACK_IMPORTED_MODULE_2__.U,{filters:filters,setFilters:setFilters})},parameters:{docs:{description:{story:"Empty state when no path cleaning rules are configured."}}}},Default=(props=>{let[filters,setFilters]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([{alias:"insights",regex:"/insights/w+/dashboard$"},{regex:"/feature_flags/d+$"},{alias:"recordings"}]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_PathCleanFilters__WEBPACK_IMPORTED_MODULE_1__.f,{filters:filters,setFilters:setFilters,...props})}).bind({});Default.args={},TableUI.parameters={...TableUI.parameters,docs:{...TableUI.parameters?.docs,source:{originalSource:"{\n  render: TableTemplate,\n  parameters: {\n    docs: {\n      description: {\n        story: 'New table-based interface for path cleaning filters'\n      }\n    }\n  }\n}",...TableUI.parameters?.docs?.source}}},TableUIEmpty.parameters={...TableUIEmpty.parameters,docs:{...TableUIEmpty.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [filters, setFilters] = useState<PathCleaningFilter[]>([]);\n    return <PathCleanFiltersTable filters={filters} setFilters={setFilters} />;\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Empty state when no path cleaning rules are configured.'\n      }\n    }\n  }\n}",...TableUIEmpty.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(props: Partial<PathCleanFiltersProps>) => {\n  const [filters, setFilters] = useState<PathCleaningFilter[]>([{\n    alias: 'insights',\n    regex: '/insights/w+/dashboard$'\n  }, {\n    regex: '/feature_flags/d+$'\n  }, {\n    alias: 'recordings'\n  }]);\n  return <PathCleanFilters filters={filters} setFilters={setFilters} {...props} />;\n}",...Default.parameters?.docs?.source}}};let __namedExportsOrder=["TableUI","TableUIEmpty","Default"]}}]);