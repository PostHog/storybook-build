"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[1157],{"./frontend/src/scenes/IntegrationsRedirect/IntegrationsRedirect.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IntegrationsRedirect:function(){return IntegrationsRedirect},scene:function(){return scene}});var lib_lemon_ui_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/lib/lemon-ui/Spinner/Spinner.tsx"),scenes_project_Settings_integrationsLogic__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/scenes/project/Settings/integrationsLogic.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/jsx-runtime.js");const scene={component:IntegrationsRedirect,logic:scenes_project_Settings_integrationsLogic__WEBPACK_IMPORTED_MODULE_1__.aL};function IntegrationsRedirect(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"text-center gap-4 flex",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(lib_lemon_ui_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_0__.$,{})})}__webpack_exports__.default=IntegrationsRedirect},"./frontend/src/scenes/project/Settings/integrationsLogic.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{aL:function(){return integrationsLogic},q1:function(){return getSlackAppManifest}});var _posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/@posthog/lemon-ui/src/index.ts"),kea__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@16.14.0/node_modules/kea/lib/index.esm.js"),kea_loaders__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/kea-loaders@3.0.0_kea@3.1.5/node_modules/kea-loaders/lib/index.js"),kea_router__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/kea-router@3.1.3_kea@3.1.5/node_modules/kea-router/lib/index.js"),lib_api__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./frontend/src/lib/api.ts"),scenes_PreflightCheck_preflightLogic__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./frontend/src/scenes/PreflightCheck/preflightLogic.tsx"),scenes_urls__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./frontend/src/scenes/urls.ts");const getSlackRedirectUri=function(){let next=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return`${window.location.origin.replace("http://","https://")}/integrations/slack/redirect${next?"?next="+encodeURIComponent(next):""}`},getSlackAppManifest=()=>({display_information:{name:"PostHog",description:"Product Insights right where you need them",background_color:"#f54e00"},features:{app_home:{home_tab_enabled:!1,messages_tab_enabled:!1,messages_tab_read_only_enabled:!0},bot_user:{display_name:"PostHog",always_online:!1},unfurl_domains:[window.location.hostname]},oauth_config:{redirect_urls:[getSlackRedirectUri()],scopes:{bot:["channels:read","chat:write","groups:read","links:read","links:write"]}},settings:{event_subscriptions:{request_url:`${window.location.origin.replace("http://","https://")}/api/integrations/slack/events`,bot_events:["link_shared"]},org_deploy_enabled:!1,socket_mode_enabled:!1,token_rotation_enabled:!1}}),integrationsLogic=(0,kea__WEBPACK_IMPORTED_MODULE_1__.kea)([(0,kea__WEBPACK_IMPORTED_MODULE_1__.path)(["scenes","project","Settings","integrationsLogic"]),(0,kea__WEBPACK_IMPORTED_MODULE_1__.connect)({values:[scenes_PreflightCheck_preflightLogic__WEBPACK_IMPORTED_MODULE_5__.preflightLogic,["siteUrlMisconfigured","preflight"]]}),(0,kea__WEBPACK_IMPORTED_MODULE_1__.actions)({handleRedirect:(kind,searchParams)=>({kind:kind,searchParams:searchParams}),deleteIntegration:id=>({id:id})}),(0,kea_loaders__WEBPACK_IMPORTED_MODULE_2__.loaders)((_ref=>{let{values:values}=_ref;return{integrations:[null,{loadIntegrations:async()=>(await lib_api__WEBPACK_IMPORTED_MODULE_4__.ZP.integrations.list()).results}],slackChannels:[null,{loadSlackChannels:async()=>{if(!values.slackIntegration)return null;return(await lib_api__WEBPACK_IMPORTED_MODULE_4__.ZP.integrations.slackChannels(values.slackIntegration.id)).channels}}]}})),(0,kea__WEBPACK_IMPORTED_MODULE_1__.listeners)((_ref2=>{let{actions:actions}=_ref2;return{handleRedirect:async _ref3=>{let{kind:kind,searchParams:searchParams}=_ref3;if("slack"!==kind)_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.lemonToast.error("Something went wrong.");else{const{state:state,code:code,error:error,next:next}=searchParams,replaceUrl=next||scenes_urls__WEBPACK_IMPORTED_MODULE_6__.j.projectSettings();if(error)return _posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.lemonToast.error(`Failed due to "${error}"`),void kea_router__WEBPACK_IMPORTED_MODULE_3__.router.actions.replace(replaceUrl);try{await lib_api__WEBPACK_IMPORTED_MODULE_4__.ZP.integrations.create({kind:"slack",config:{state:state,code:code,redirect_uri:getSlackRedirectUri(next)}}),actions.loadIntegrations(),_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.lemonToast.success("Integration successful.")}catch(e){_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.lemonToast.error("Something went wrong. Please try again.")}finally{kea_router__WEBPACK_IMPORTED_MODULE_3__.router.actions.replace(replaceUrl)}}},deleteIntegration:async _ref4=>{let{id:id}=_ref4;await lib_api__WEBPACK_IMPORTED_MODULE_4__.ZP.integrations.delete(id),actions.loadIntegrations()}}})),(0,kea__WEBPACK_IMPORTED_MODULE_1__.afterMount)((_ref5=>{let{actions:actions}=_ref5;actions.loadIntegrations()})),(0,kea_router__WEBPACK_IMPORTED_MODULE_3__.urlToAction)((_ref6=>{let{actions:actions}=_ref6;return{"/integrations/:kind/redirect":(_ref7,searchParams)=>{let{kind:kind=""}=_ref7;actions.handleRedirect(kind,searchParams)}}})),(0,kea__WEBPACK_IMPORTED_MODULE_1__.selectors)({slackIntegration:[s=>[s.integrations],integrations=>integrations?.find((x=>"slack"==x.kind))],isMemberOfSlackChannel:[s=>[s.slackChannels],slackChannels=>channel=>{if(!slackChannels)return null;const[channelId]=channel.split("|");return slackChannels.find((x=>x.id===channelId))?.is_member}],addToSlackButtonUrl:[s=>[s.preflight],preflight=>function(){let next=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const clientId=preflight?.slack_service?.client_id;return clientId?`https://slack.com/oauth/v2/authorize?client_id=${clientId}&scope=channels:read,groups:read,chat:write&redirect_uri=${encodeURIComponent(getSlackRedirectUri(next))}`:null}]})])}}]);