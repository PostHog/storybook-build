"use strict";(self.webpackChunk_posthog_frontend=self.webpackChunk_posthog_frontend||[]).push([[84772],{"./products/llm_observability/frontend/LLMObservabilityScene.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LLMObservabilityScene:()=>LLMObservabilityScene,scene:()=>scene});var posthog_icons_es=__webpack_require__("./node_modules/.pnpm/@posthog+icons@0.10.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/@posthog/icons/dist/posthog-icons.es.js"),src=__webpack_require__("./frontend/@posthog/lemon-ui/src/index.ts"),clsx_m=__webpack_require__("./node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js"),index_esm=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),lib=__webpack_require__("./node_modules/.pnpm/kea-router@3.2.1_kea@3.1.5_react@18.2.0_/node_modules/kea-router/lib/index.js"),CardMeta=__webpack_require__("./frontend/src/lib/components/Cards/CardMeta.tsx"),LemonMenu=__webpack_require__("./frontend/src/lib/lemon-ui/LemonMenu/LemonMenu.tsx"),react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),urls=__webpack_require__("./frontend/src/scenes/urls.ts"),ErrorBoundary=__webpack_require__("./frontend/src/layout/ErrorBoundary/index.ts"),themeLogic=__webpack_require__("./frontend/src/layout/navigation-3000/themeLogic.ts"),Query=__webpack_require__("./frontend/src/queries/Query/Query.tsx"),InsightDetails=__webpack_require__("./frontend/src/lib/components/Cards/InsightCard/InsightDetails.tsx"),InsightMeta=__webpack_require__("./frontend/src/lib/components/Cards/InsightCard/InsightMeta.tsx"),TopHeading=__webpack_require__("./frontend/src/lib/components/Cards/InsightCard/TopHeading.tsx"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let QueryCard=react.forwardRef(function QueryCard(_ref,ref){var _divProps$style,_theme$boxStyle;let{query,title,description,context,highlighted,ribbonColor,className,...divProps}=_ref,{theme}=(0,index_esm.useValues)(themeLogic.b),[areDetailsShown,setAreDetailsShown]=(0,react.useState)(!1);return(0,jsx_runtime.jsx)("div",{className:(0,clsx_m.default)("InsightCard border",highlighted&&"InsightCard--highlighted",className),"data-attr":"insight-card",...divProps,style:{...null!==(_divProps$style=divProps?.style)&&void 0!==_divProps$style?_divProps$style:{},...null!==(_theme$boxStyle=theme?.boxStyle)&&void 0!==_theme$boxStyle?_theme$boxStyle:{}},ref:ref,children:(0,jsx_runtime.jsxs)(ErrorBoundary.S,{tags:{feature:"insight"},children:[(0,jsx_runtime.jsx)(CardMeta.I,{ribbonColor:ribbonColor,setAreDetailsShown:setAreDetailsShown,areDetailsShown:areDetailsShown,topHeading:(0,jsx_runtime.jsx)(TopHeading.l,{query:query}),content:(0,jsx_runtime.jsx)(InsightMeta.Q,{title:title,description:description}),metaDetails:(0,jsx_runtime.jsx)(InsightDetails.Mz,{query:query}),samplingFactor:"samplingFactor"in query&&"number"==typeof query.samplingFactor?query.samplingFactor:void 0,moreButtons:(0,jsx_runtime.jsx)(LemonMenu.tN,{items:[{label:"Open as new insight",to:urls.j.insightNew({query})}]}),showEditingControls:!0}),(0,jsx_runtime.jsx)("div",{className:"InsightCard__viz",children:(0,jsx_runtime.jsx)(Query.A,{query:query,readOnly:!0,embedded:!0,context:context})})]})})});var DateFilter=__webpack_require__("./frontend/src/lib/components/DateFilter/DateFilter.tsx"),FeedbackNotice=__webpack_require__("./frontend/src/lib/components/FeedbackNotice.tsx"),PageHeader=__webpack_require__("./frontend/src/lib/components/PageHeader.tsx"),PropertyFilters=__webpack_require__("./frontend/src/lib/components/PropertyFilters/PropertyFilters.tsx"),TestAccountFiltersSwitch=__webpack_require__("./frontend/src/lib/components/TestAccountFiltersSwitch.tsx"),dataNodeCollectionLogic=__webpack_require__("./frontend/src/queries/nodes/DataNode/dataNodeCollectionLogic.ts"),DataTable=__webpack_require__("./frontend/src/queries/nodes/DataTable/DataTable.tsx"),schema_general=__webpack_require__("./frontend/src/queries/schema/schema-general.ts"),utils=__webpack_require__("./frontend/src/queries/utils.ts"),kea_loaders_lib=__webpack_require__("./node_modules/.pnpm/kea-loaders@3.0.0_kea@3.1.5_react@18.2.0_/node_modules/kea-loaders/lib/index.js"),api=__webpack_require__("./frontend/src/lib/api.ts"),types=__webpack_require__("./frontend/src/lib/components/TaxonomicFilter/types.ts"),dayjs=__webpack_require__("./frontend/src/lib/dayjs.ts"),lib_utils=__webpack_require__("./frontend/src/lib/utils.tsx"),definitions=__webpack_require__("./frontend/src/lib/utils/definitions.ts"),sceneLogic=__webpack_require__("./frontend/src/scenes/sceneLogic.ts"),groupsModel=__webpack_require__("./frontend/src/models/groupsModel.ts"),schema_guards=__webpack_require__("./frontend/src/queries/schema-guards.ts"),src_types=__webpack_require__("./frontend/src/types.ts");let llmObservabilityLogic=(0,index_esm.kea)([(0,index_esm.path)(["products","llm_observability","frontend","llmObservabilityLogic"]),(0,index_esm.connect)({values:[sceneLogic.k,["sceneKey"]]}),(0,index_esm.actions)({setDates:(dateFrom,dateTo)=>({dateFrom,dateTo}),setDashboardDateFilter:(dateFrom,dateTo)=>({dateFrom,dateTo}),setShouldFilterTestAccounts:shouldFilterTestAccounts=>({shouldFilterTestAccounts}),setPropertyFilters:propertyFilters=>({propertyFilters}),setGenerationsQuery:query=>({query})}),(0,index_esm.reducers)({dateFilter:[{dateFrom:"-1d",dateTo:null},{setDates:(_,_ref)=>{let{dateFrom,dateTo}=_ref;return{dateFrom,dateTo}}}],dashboardDateFilter:[{dateFrom:"-7d",dateTo:null},{setDates:(_,_ref2)=>{let{dateFrom,dateTo}=_ref2;return{dateFrom,dateTo}}}],shouldFilterTestAccounts:[!1,{setShouldFilterTestAccounts:(_,_ref3)=>{let{shouldFilterTestAccounts}=_ref3;return shouldFilterTestAccounts}}],propertyFilters:[[],{setPropertyFilters:(_,_ref4)=>{let{propertyFilters}=_ref4;return propertyFilters}}],generationsQueryOverride:[null,{setGenerationsQuery:(_,_ref5)=>{let{query}=_ref5;return query}}]}),(0,kea_loaders_lib.loaders)({hasSentAiGenerationEvent:{__default:void 0,loadAIEventDefinition:async()=>{let definition=(await api.ZP.eventDefinitions.list({event_type:src_types.uW.Event,search:"$ai_generation"})).results.find(r=>"$ai_generation"===r.name);return!!definition&&!(0,definitions.U)(definition)}}}),(0,index_esm.selectors)({activeTab:[s=>[s.sceneKey],sceneKey=>"llmObservabilityGenerations"===sceneKey?"generations":"llmObservabilityTraces"===sceneKey?"traces":"dashboard"],tiles:[s=>[s.dashboardDateFilter,s.shouldFilterTestAccounts,s.propertyFilters],(dashboardDateFilter,shouldFilterTestAccounts,propertyFilters)=>[{title:"Traces",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",kind:schema_general.OH.EventsNode,math:src_types.mY.HogQL,math_hogql:"COUNT(DISTINCT properties.$ai_trace_id)"}],dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters,filterTestAccounts:shouldFilterTestAccounts},context:{groupTypeLabel:"traces",onDataPointClick:series=>{if("string"==typeof series.day){let dayStart=(0,dayjs.Bv)(series.day).startOf("day");lib.router.actions.push(urls.j.llmObservabilityTraces(),{...lib.router.values.searchParams,date_from:dayStart.format("YYYY-MM-DD[T]HH:mm:ss"),date_to:dayStart.add(1,"day").subtract(1,"second").format("YYYY-MM-DD[T]HH:mm:ss")})}}}},{title:"Generative AI users",description:"To count users, set `distinct_id` in LLM tracking.",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",kind:schema_general.OH.EventsNode,math:src_types.vN.UniqueUsers}],dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters.concat({type:src_types.FT.HogQL,key:"distinct_id != properties.$ai_trace_id"}),filterTestAccounts:shouldFilterTestAccounts}},{title:"Total cost (USD)",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",math:src_types.O4.Sum,kind:schema_general.OH.EventsNode,math_property:"$ai_total_cost_usd"}],trendsFilter:{aggregationAxisPrefix:"$",decimalPlaces:4,display:src_types.Qb.BoldNumber},dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters,filterTestAccounts:shouldFilterTestAccounts},context:{groupTypeLabel:"traces",onDataPointClick:()=>{lib.router.actions.push(urls.j.llmObservabilityTraces(),lib.router.values.searchParams)}}},{title:"Cost per user (USD)",description:"Average cost for each generative AI user active in the data point's period.",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",math:src_types.O4.Sum,kind:schema_general.OH.EventsNode,math_property:"$ai_total_cost_usd"},{event:"$ai_generation",name:"$ai_generation",kind:schema_general.OH.EventsNode,math:src_types.vN.UniqueUsers}],trendsFilter:{formula:"A / B",aggregationAxisPrefix:"$",decimalPlaces:2},dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters.concat({type:src_types.FT.HogQL,key:"distinct_id != properties.$ai_trace_id"}),filterTestAccounts:shouldFilterTestAccounts}},{title:"Cost by model (USD)",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",math:src_types.O4.Sum,kind:schema_general.OH.EventsNode,math_property:"$ai_total_cost_usd"}],breakdownFilter:{breakdown_type:"event",breakdown:"$ai_model"},trendsFilter:{aggregationAxisPrefix:"$",decimalPlaces:2,display:src_types.Qb.ActionsBarValue,showValuesOnSeries:!0},dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters,filterTestAccounts:shouldFilterTestAccounts},context:{groupTypeLabel:"traces",onDataPointClick:_ref6=>{let{breakdown}=_ref6;lib.router.actions.push(urls.j.llmObservabilityTraces(),{...lib.router.values.searchParams,filters:[...lib.router.values.searchParams.filters||[],{type:src_types.FT.Event,key:"$ai_model",operator:src_types.WV.Exact,value:breakdown}]})}}},{title:"Generation calls",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",kind:schema_general.OH.EventsNode}],dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters,filterTestAccounts:shouldFilterTestAccounts},context:{groupTypeLabel:"generations",onDataPointClick:series=>{if("string"==typeof series.day){let dayStart=(0,dayjs.Bv)(series.day).startOf("day");lib.router.actions.push(urls.j.llmObservabilityGenerations(),{...lib.router.values.searchParams,date_from:dayStart.format("YYYY-MM-DD[T]HH:mm:ss"),date_to:dayStart.add(1,"day").subtract(1,"second").format("YYYY-MM-DD[T]HH:mm:ss")})}}}},{title:"Generation latency by model (median)",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",math:src_types.O4.Median,kind:schema_general.OH.EventsNode,math_property:"$ai_latency"}],breakdownFilter:{breakdown:"$ai_model"},trendsFilter:{aggregationAxisPostfix:" s",decimalPlaces:2},dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters,filterTestAccounts:shouldFilterTestAccounts},context:{groupTypeLabel:"generations",onDataPointClick:series=>{if("string"==typeof series.day){let dayStart=(0,dayjs.Bv)(series.day).startOf("day");lib.router.actions.push(urls.j.llmObservabilityGenerations(),{...lib.router.values.searchParams,date_from:dayStart.format("YYYY-MM-DD[T]HH:mm:ss"),date_to:dayStart.add(1,"day").subtract(1,"second").format("YYYY-MM-DD[T]HH:mm:ss"),filters:[...lib.router.values.searchParams.filters||[],{type:src_types.FT.Event,key:"$ai_model",operator:src_types.WV.Exact,value:series.breakdown}]})}}}},{title:"Generations by HTTP status",query:{kind:schema_general.OH.TrendsQuery,series:[{event:"$ai_generation",name:"$ai_generation",kind:schema_general.OH.EventsNode}],breakdownFilter:{breakdown:"$ai_http_status"},trendsFilter:{display:src_types.Qb.ActionsBarValue},dateRange:{date_from:dashboardDateFilter.dateFrom,date_to:dashboardDateFilter.dateTo},properties:propertyFilters,filterTestAccounts:shouldFilterTestAccounts},context:{groupTypeLabel:"generations",onDataPointClick:series=>{lib.router.actions.push(urls.j.llmObservabilityGenerations(),{...lib.router.values.searchParams,filters:[...lib.router.values.searchParams.filters||[],{type:src_types.FT.Event,key:"$ai_http_status",operator:src_types.WV.Exact,value:series.breakdown}]})}}}]],tracesQuery:[s=>[s.dateFilter,s.shouldFilterTestAccounts,s.propertyFilters,groupsModel.$.selectors.groupsTaxonomicTypes],(dateFilter,shouldFilterTestAccounts,propertyFilters,groupsTaxonomicTypes)=>({kind:schema_general.OH.DataTableNode,source:{kind:schema_general.OH.TracesQuery,dateRange:{date_from:dateFilter.dateFrom||void 0,date_to:dateFilter.dateTo||void 0},filterTestAccounts:null!=shouldFilterTestAccounts&&shouldFilterTestAccounts,properties:propertyFilters},columns:["id","person","totalLatency","usage","totalCost","timestamp"],showDateRange:!0,showReload:!0,showSearch:!0,showTestAccountFilters:!0,showExport:!0,showOpenEditorButton:!1,showPropertyFilter:[types.t.EventProperties,types.t.PersonProperties,...groupsTaxonomicTypes,types.t.Cohorts,types.t.HogQLExpression]})],defaultGenerationsQuery:[s=>[s.dateFilter,s.shouldFilterTestAccounts,s.propertyFilters,groupsModel.$.selectors.groupsTaxonomicTypes],(dateFilter,shouldFilterTestAccounts,propertyFilters,groupsTaxonomicTypes)=>({kind:schema_general.OH.DataTableNode,source:{kind:schema_general.OH.EventsQuery,select:["*",`<strong><a href='/llm-observability/traces/{properties.$ai_trace_id}?event={uuid}'>
                            {f'{left(toString(uuid), 4)}...{right(toString(uuid), 4)}'}
                         </a></strong> -- ID`,`<a href='/llm-observability/traces/{properties.$ai_trace_id}'>
                            {f'{left(properties.$ai_trace_id, 4)}...{right(properties.$ai_trace_id, 4)}'}
                         </a> -- Trace ID`,"person","f'{properties.$ai_model}' -- Model","f'{round(properties.$ai_latency, 2)} s' -- Latency","f'{properties.$ai_input_tokens} → {properties.$ai_output_tokens} (∑ {properties.$ai_input_tokens + properties.$ai_output_tokens})' -- Token usage","f'${round(toFloat(properties.$ai_total_cost_usd), 6)}' -- Total cost","timestamp"],orderBy:["timestamp DESC"],after:dateFilter.dateFrom||void 0,before:dateFilter.dateTo||void 0,filterTestAccounts:shouldFilterTestAccounts,event:"$ai_generation",properties:propertyFilters},showDateRange:!0,showReload:!0,showSearch:!0,showTestAccountFilters:!0,showColumnConfigurator:!0,showPropertyFilter:[types.t.EventProperties,types.t.PersonProperties,...groupsTaxonomicTypes,types.t.Cohorts,types.t.HogQLExpression],showExport:!0,showActions:!1})],generationsQuery:[s=>[s.generationsQueryOverride,s.defaultGenerationsQuery],(override,defQuery)=>override||defQuery]}),(0,lib.urlToAction)(_ref7=>{let{actions,values}=_ref7;function applySearchParams(_ref8){let{filters,date_from,date_to,filter_test_accounts}=_ref8,parsedFilters=(0,schema_guards.kC)(filters)?filters:[];(0,lib_utils.h0)(parsedFilters,values.propertyFilters)||actions.setPropertyFilters(parsedFilters),((date_from||"-1d")!==values.dateFilter.dateFrom||(date_to||null)!==values.dateFilter.dateTo)&&actions.setDates(date_from,date_to);let filterTestAccountsValue=[!0,"true",1,"1"].includes(filter_test_accounts);filterTestAccountsValue!==values.shouldFilterTestAccounts&&actions.setShouldFilterTestAccounts(filterTestAccountsValue)}return{[urls.j.llmObservabilityDashboard()]:(_,searchParams)=>applySearchParams(searchParams),[urls.j.llmObservabilityGenerations()]:(_,searchParams)=>applySearchParams(searchParams),[urls.j.llmObservabilityTraces()]:(_,searchParams)=>applySearchParams(searchParams)}}),(0,lib.actionToUrl)(()=>({setPropertyFilters:_ref9=>{let{propertyFilters}=_ref9;return[lib.router.values.location.pathname,{...lib.router.values.searchParams,filters:propertyFilters.length>0?propertyFilters:void 0}]},setDates:_ref10=>{let{dateFrom,dateTo}=_ref10;return[lib.router.values.location.pathname,{...lib.router.values.searchParams,date_from:"-1d"===dateFrom?void 0:dateFrom||void 0,date_to:dateTo||void 0}]},setShouldFilterTestAccounts:_ref11=>{let{shouldFilterTestAccounts}=_ref11;return[lib.router.values.location.pathname,{...lib.router.values.searchParams,filter_test_accounts:shouldFilterTestAccounts?"true":void 0}]}})),(0,index_esm.afterMount)(_ref12=>{let{actions}=_ref12;actions.loadAIEventDefinition()})]);var TZLabel=__webpack_require__("./frontend/src/lib/components/TZLabel/index.tsx"),Link=__webpack_require__("./frontend/src/lib/lemon-ui/Link/index.ts"),frontend_utils=__webpack_require__("./products/llm_observability/frontend/utils.ts");function LLMObservabilityTraces(){let{setDates,setShouldFilterTestAccounts,setPropertyFilters}=(0,index_esm.useActions)(llmObservabilityLogic),{tracesQuery}=(0,index_esm.useValues)(llmObservabilityLogic);return(0,jsx_runtime.jsx)(DataTable.w,{query:tracesQuery,setQuery:query=>{if(!(0,utils.zO)(query.source))throw Error("Invalid query");setDates(query.source.dateRange?.date_from||null,query.source.dateRange?.date_to||null),setShouldFilterTestAccounts(query.source.filterTestAccounts||!1),setPropertyFilters(query.source.properties||[])},context:{emptyStateHeading:"There were no traces in this period",emptyStateDetail:"Try changing the date range or filters.",columns:{id:{title:"ID",render:IDColumn},timestamp:{title:"Time",render:TimestampColumn},person:{title:"Person"},totalLatency:{title:"Latency",render:LatencyColumn},usage:{title:"Token Usage",render:UsageColumn},totalCost:{title:"Total Cost",render:CostColumn}}},uniqueKey:"llm-observability-traces"})}let IDColumn=_ref=>{let{record}=_ref;return(0,jsx_runtime.jsx)("strong",{children:(0,jsx_runtime.jsxs)(Link.r,{className:"ph-no-capture",to:urls.j.llmObservabilityTrace(record.id,{timestamp:(0,frontend_utils.sl)(record.createdAt)}),children:[record.id.slice(0,4),"...",record.id.slice(-4)]})})},TimestampColumn=_ref2=>{let{record}=_ref2;return(0,jsx_runtime.jsx)(TZLabel.w,{time:record.createdAt})};TimestampColumn.displayName="TimestampColumn";let LatencyColumn=_ref3=>{let{record}=_ref3;return"number"==typeof record.totalLatency?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[record.totalLatency,"s"]}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:"–"})};LatencyColumn.displayName="LatencyColumn";let UsageColumn=_ref4=>{let{record}=_ref4,usage=(0,frontend_utils.Pz)(record);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:usage||"–"})};UsageColumn.displayName="UsageColumn";let CostColumn=_ref5=>{let{record}=_ref5;return"number"==typeof record.totalCost?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,frontend_utils.K7)(record.totalCost)}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:"–"})};CostColumn.displayName="CostColumn";let scene={component:LLMObservabilityScene},Filters=()=>{let{dashboardDateFilter,dateFilter,shouldFilterTestAccounts,generationsQuery,propertyFilters,activeTab}=(0,index_esm.useValues)(llmObservabilityLogic),{setDates,setShouldFilterTestAccounts,setPropertyFilters}=(0,index_esm.useActions)(llmObservabilityLogic),dateFrom="dashboard"===activeTab?dashboardDateFilter.dateFrom:dateFilter.dateFrom,dateTo="dashboard"===activeTab?dashboardDateFilter.dateTo:dateFilter.dateTo;return(0,jsx_runtime.jsxs)("div",{className:"flex gap-x-4 gap-y-2 items-center flex-wrap py-4 -mt-4 mb-4 border-b",children:[(0,jsx_runtime.jsx)(DateFilter.f,{dateFrom:dateFrom,dateTo:dateTo,onChange:setDates}),(0,jsx_runtime.jsx)(PropertyFilters.t,{propertyFilters:propertyFilters,taxonomicGroupTypes:generationsQuery.showPropertyFilter,onChange:setPropertyFilters,pageKey:"llm-observability"}),(0,jsx_runtime.jsx)("div",{className:"flex-1"}),(0,jsx_runtime.jsx)(TestAccountFiltersSwitch.Z,{checked:shouldFilterTestAccounts,onChange:setShouldFilterTestAccounts})]})},Tiles=()=>{let{tiles}=(0,index_esm.useValues)(llmObservabilityLogic);return(0,jsx_runtime.jsx)("div",{className:"mt-2 grid grid-cols-1 @xl/dashboard:grid-cols-2 @4xl/dashboard:grid-cols-6 gap-4",children:tiles.map((_ref,i)=>{let{title,description,query,context}=_ref;return(0,jsx_runtime.jsx)(QueryCard,{title:title,description:description,query:{kind:schema_general.OH.InsightVizNode,source:query},context:context,className:(0,clsx_m.default)("h-96",i<3||i>=5?"@4xl/dashboard:col-span-2":"@4xl/dashboard:col-span-3")},i)})})},IngestionStatusCheck=()=>(0,jsx_runtime.jsxs)(src.Vp,{type:"warning",className:"mt-2",children:[(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)("strong",{children:"No LLM generation events have been detected!"})}),(0,jsx_runtime.jsxs)("p",{children:["To use the LLM Observability product, please"," ",(0,jsx_runtime.jsx)(src.rU,{to:"https://posthog.com/docs/ai-engineering/observability",children:"instrument your LLM calls with the PostHog SDK"})," ","(otherwise it'll be a little empty!)"]})]});function LLMObservabilityDashboard(){return(0,jsx_runtime.jsxs)("div",{className:"@container/dashboard",children:[(0,jsx_runtime.jsx)(Filters,{}),(0,jsx_runtime.jsx)(Tiles,{})]})}function LLMObservabilityGenerations(){let{setDates,setShouldFilterTestAccounts,setPropertyFilters,setGenerationsQuery}=(0,index_esm.useActions)(llmObservabilityLogic),{generationsQuery}=(0,index_esm.useValues)(llmObservabilityLogic);return(0,jsx_runtime.jsx)(DataTable.w,{query:generationsQuery,setQuery:query=>{if(!(0,utils.rz)(query.source))throw Error("Invalid query");setDates(query.source.after||null,query.source.before||null),setShouldFilterTestAccounts(query.source.filterTestAccounts||!1),setPropertyFilters(query.source.properties||[]),setGenerationsQuery(query)},context:{emptyStateHeading:"There were no generations in this period",emptyStateDetail:"Try changing the date range or filters."},uniqueKey:"llm-observability-generations"})}function LLMObservabilityNoEvents(){return(0,jsx_runtime.jsx)("div",{className:"w-full flex flex-col items-center justify-center",children:(0,jsx_runtime.jsxs)("div",{className:"flex flex-col items-center justify-center max-w-md w-full",children:[(0,jsx_runtime.jsx)(posthog_icons_es.IconArchive,{className:"text-5xl mb-2 text-muted-alt"}),(0,jsx_runtime.jsx)("h2",{className:"text-xl leading-tight",children:"We haven't detected any LLM generations yet"}),(0,jsx_runtime.jsxs)("p",{className:"text-sm text-center text-balance",children:["To use the LLM Observability product, please"," ",(0,jsx_runtime.jsx)(src.rU,{to:"https://posthog.com/docs/ai-engineering/observability",children:"instrument your LLM calls with the PostHog SDK"})," "]})]})})}function LLMObservabilityScene(){let{activeTab,hasSentAiGenerationEvent,hasSentAiGenerationEventLoading}=(0,index_esm.useValues)(llmObservabilityLogic),{searchParams}=(0,index_esm.useValues)(lib.router);return(0,jsx_runtime.jsxs)(index_esm.BindLogic,{logic:dataNodeCollectionLogic.y,props:{key:"llm-observability-data"},children:[(0,jsx_runtime.jsx)(PageHeader.m,{buttons:(0,jsx_runtime.jsx)(src.Jp,{to:"https://posthog.com/docs/ai-engineering/observability",type:"secondary",targetBlank:!0,children:"Documentation"})}),hasSentAiGenerationEventLoading?null:hasSentAiGenerationEvent?(0,jsx_runtime.jsx)(FeedbackNotice.J,{text:"LLM observability is currently in beta. Thanks for taking part! We'd love to hear what you think."}):(0,jsx_runtime.jsx)(IngestionStatusCheck,{}),(0,jsx_runtime.jsx)(src.TP,{activeKey:activeTab,tabs:[{key:"dashboard",label:"Dashboard",content:(0,jsx_runtime.jsx)(LLMObservabilityDashboard,{}),link:(0,lib.combineUrl)(urls.j.llmObservabilityDashboard(),searchParams).url},{key:"traces",label:"Traces",content:hasSentAiGenerationEvent?(0,jsx_runtime.jsx)(LLMObservabilityTraces,{}):(0,jsx_runtime.jsx)(LLMObservabilityNoEvents,{}),link:(0,lib.combineUrl)(urls.j.llmObservabilityTraces(),searchParams).url},{key:"generations",label:"Generations",content:hasSentAiGenerationEvent?(0,jsx_runtime.jsx)(LLMObservabilityGenerations,{}):(0,jsx_runtime.jsx)(LLMObservabilityNoEvents,{}),link:(0,lib.combineUrl)(urls.j.llmObservabilityGenerations(),searchParams).url}]})]})}}}]);
//# sourceMappingURL=84772.b534e4ed.iframe.bundle.js.map