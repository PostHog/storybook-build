"use strict";(self.webpackChunk_posthog_frontend=self.webpackChunk_posthog_frontend||[]).push([[15545],{"./frontend/src/lib/lemon-ui/LemonBadge/LemonBadgeNumber.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MultipleDigits:()=>MultipleDigits,ShowZero:()=>ShowZero,Standard:()=>Standard,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lib_lemon_ui_LemonButton__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonButton/index.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_LemonBadge__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonBadge/LemonBadge.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Lemon UI/Lemon Badge/Lemon Badge Number",component:_LemonBadge__WEBPACK_IMPORTED_MODULE_2__.M.Number,tags:["autodocs"]},Template=_ref=>{let{count,...props}=_ref,[countOverride,setCount]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(count);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"flex items-center min-h-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:"Count: "}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonBadge__WEBPACK_IMPORTED_MODULE_2__.M.Number,{count:countOverride,...props})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("br",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"flex space-x-1",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonButton__WEBPACK_IMPORTED_MODULE_0__.J,{type:"primary",onClick:()=>setCount((countOverride||0)+1),children:"Increment"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonButton__WEBPACK_IMPORTED_MODULE_0__.J,{type:"secondary",onClick:()=>setCount((countOverride||0)-1),children:"Decrement"})]})]})},Standard=Template.bind({});Standard.args={count:1};let MultipleDigits=Template.bind({});MultipleDigits.args={count:975,maxDigits:3};let ShowZero=Template.bind({});ShowZero.args={count:0,showZero:!0},Standard.parameters={...Standard.parameters,docs:{...Standard.parameters?.docs,source:{originalSource:'({\n  count,\n  ...props\n}: LemonBadgeNumberProps) => {\n  const [countOverride, setCount] = useState(count);\n  return <>\n            <div className="flex items-center min-h-6">\n                <div>Count: </div>\n                <LemonBadge.Number count={countOverride} {...props} />\n            </div>\n            <br />\n            <div className="flex space-x-1">\n                <LemonButton type="primary" onClick={() => setCount((countOverride || 0) + 1)}>\n                    Increment\n                </LemonButton>\n                <LemonButton type="secondary" onClick={() => setCount((countOverride || 0) - 1)}>\n                    Decrement\n                </LemonButton>\n            </div>\n        </>;\n}',...Standard.parameters?.docs?.source}}},MultipleDigits.parameters={...MultipleDigits.parameters,docs:{...MultipleDigits.parameters?.docs,source:{originalSource:'({\n  count,\n  ...props\n}: LemonBadgeNumberProps) => {\n  const [countOverride, setCount] = useState(count);\n  return <>\n            <div className="flex items-center min-h-6">\n                <div>Count: </div>\n                <LemonBadge.Number count={countOverride} {...props} />\n            </div>\n            <br />\n            <div className="flex space-x-1">\n                <LemonButton type="primary" onClick={() => setCount((countOverride || 0) + 1)}>\n                    Increment\n                </LemonButton>\n                <LemonButton type="secondary" onClick={() => setCount((countOverride || 0) - 1)}>\n                    Decrement\n                </LemonButton>\n            </div>\n        </>;\n}',...MultipleDigits.parameters?.docs?.source}}},ShowZero.parameters={...ShowZero.parameters,docs:{...ShowZero.parameters?.docs,source:{originalSource:'({\n  count,\n  ...props\n}: LemonBadgeNumberProps) => {\n  const [countOverride, setCount] = useState(count);\n  return <>\n            <div className="flex items-center min-h-6">\n                <div>Count: </div>\n                <LemonBadge.Number count={countOverride} {...props} />\n            </div>\n            <br />\n            <div className="flex space-x-1">\n                <LemonButton type="primary" onClick={() => setCount((countOverride || 0) + 1)}>\n                    Increment\n                </LemonButton>\n                <LemonButton type="secondary" onClick={() => setCount((countOverride || 0) - 1)}>\n                    Decrement\n                </LemonButton>\n            </div>\n        </>;\n}',...ShowZero.parameters?.docs?.source}}};let __namedExportsOrder=["Standard","MultipleDigits","ShowZero"]}}]);