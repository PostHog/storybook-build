"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[81402],{"../../frontend/src/lib/ui/ListBox/ListBox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,VirtualFocus:()=>VirtualFocus,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _radix_ui_react_accordion__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/.pnpm/@radix-ui+react-accordion@1.2.2_@types+react-dom@18.3.7_@types+react@17.0.52__@types+react@17_iwvtiy23xbib3usnlqc7xa3afi/node_modules/@radix-ui/react-accordion/dist/index.mjs"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/@posthog/lemon-ui/src/index.ts"),_Button_ButtonPrimitives__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/lib/ui/Button/ButtonPrimitives.tsx"),_ListBox__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../frontend/src/lib/ui/ListBox/ListBox.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"UI/List Box",component:_ListBox__WEBPACK_IMPORTED_MODULE_3__.w,args:{},tags:["autodocs"]},BasicTemplate=props=>{let[expandedItemIds,setExpandedItemIds]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{className:"flex flex-col gap-3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{className:"flex flex-col gap-1",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{className:"m-0",children:"Listbox"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{className:"m-0",children:"Wrap any set of elements in a Listbox to enable keyboard navigation."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"(button, [href], input, select, textarea, [tabindex]:not([tabindex='-1'])) gain focus when clicked or focused with keyboard, disabled elements are not focusable and skipped."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{className:"list-disc list-inside",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"Default (all elements gain 'real' focus)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li",{children:"OR virtual focus = true (where local state keeps track of focus allowing you to navigate with keyboard but keep let's say an input focused)."})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w,{className:"flex flex-col gap-px max-h-[400px] overflow-y-auto border-1 border-dashed border-darkgray p-2",...props,ref:ref,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w.Item,{asChild:!0,className:"mb-4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input",{type:"text",className:"h-9 border border-primary rounded-md p-2"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w.Item,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_1__.rU,{to:"https://www.google.com",target:"_blank",buttonProps:{menuItem:!0},className:"data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active",children:"Option 1 (Link)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w.Item,{asChild:!0,onClick:()=>alert("clicked"),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button_ButtonPrimitives__WEBPACK_IMPORTED_MODULE_2__.hL,{menuItem:!0,className:"data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active",children:"Option 2 (Clickable)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w.Item,{asChild:!0,"aria-disabled":!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button_ButtonPrimitives__WEBPACK_IMPORTED_MODULE_2__.hL,{menuItem:!0,disabled:!0,className:"data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active",children:"Option 3"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_radix_ui_react_accordion__WEBPACK_IMPORTED_MODULE_5__.fC,{type:"multiple",value:expandedItemIds,onValueChange:s=>{setExpandedItemIds(s)},defaultValue:["one"],children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_radix_ui_react_accordion__WEBPACK_IMPORTED_MODULE_5__.ck,{value:"one",className:"flex flex-col w-full",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_radix_ui_react_accordion__WEBPACK_IMPORTED_MODULE_5__.xz,{className:"flex items-center gap-2 w-full h-8",asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w.Item,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button_ButtonPrimitives__WEBPACK_IMPORTED_MODULE_2__.hL,{menuItem:!0,fullWidth:!0,children:"Option 3 (Accordion)"})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_radix_ui_react_accordion__WEBPACK_IMPORTED_MODULE_5__.VY,{className:"ml-4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w.Item,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button_ButtonPrimitives__WEBPACK_IMPORTED_MODULE_2__.hL,{menuItem:!0,fullWidth:!0,children:"Option 3 child"})})})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ListBox__WEBPACK_IMPORTED_MODULE_3__.w.Item,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button_ButtonPrimitives__WEBPACK_IMPORTED_MODULE_2__.hL,{fullWidth:!0,menuItem:!0,children:"Option 4"})})]})]})},Default=BasicTemplate.bind({});Default.args={title:"List Box"};let VirtualFocus=BasicTemplate.bind({});VirtualFocus.args={title:"List Box - Virtual Focus, the input is always focused when navigating with keyboard",virtualFocus:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(props: React.ComponentProps<typeof ListBox>) => {\n  const [expandedItemIds, setExpandedItemIds] = useState<string[]>([]);\n  const ref = useRef<ListBoxHandle>(null);\n  return <div className="flex flex-col gap-3">\n            <div className="flex flex-col gap-1">\n                <p className="m-0">Listbox</p>\n                <p className="m-0">Wrap any set of elements in a Listbox to enable keyboard navigation.</p>\n                <p>\n                    (button, [href], input, select, textarea, [tabindex]:not([tabindex=\'-1\'])) gain focus when clicked\n                    or focused with keyboard, disabled elements are not focusable and skipped.\n                </p>\n                <ul className="list-disc list-inside">\n                    <li>Default (all elements gain \'real\' focus)</li>\n                    <li>\n                        OR virtual focus = true (where local state keeps track of focus allowing you to navigate with\n                        keyboard but keep let\'s say an input focused).\n                    </li>\n                </ul>\n            </div>\n            <ListBox className="flex flex-col gap-px max-h-[400px] overflow-y-auto border-1 border-dashed border-darkgray p-2" {...props} ref={ref}>\n                <ListBox.Item asChild className="mb-4">\n                    <input type="text" className="h-9 border border-primary rounded-md p-2" />\n                </ListBox.Item>\n                <ListBox.Item asChild>\n                    <Link to="https://www.google.com" target="_blank" buttonProps={{\n          menuItem: true\n        }} className="data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active">\n                        Option 1 (Link)\n                    </Link>\n                </ListBox.Item>\n                <ListBox.Item asChild onClick={() => alert(\'clicked\')}>\n                    <ButtonPrimitive menuItem className="data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active">\n                        Option 2 (Clickable)\n                    </ButtonPrimitive>\n                </ListBox.Item>\n                <ListBox.Item asChild aria-disabled>\n                    <ButtonPrimitive menuItem disabled className="data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active">\n                        Option 3\n                    </ButtonPrimitive>\n                </ListBox.Item>\n                <AccordionPrimitive.Root type="multiple" value={expandedItemIds} onValueChange={s => {\n        setExpandedItemIds(s);\n      }} defaultValue={[\'one\']}>\n                    <AccordionPrimitive.Item value="one" className="flex flex-col w-full">\n                        <AccordionPrimitive.Trigger className="flex items-center gap-2 w-full h-8" asChild>\n                            <ListBox.Item asChild>\n                                <ButtonPrimitive menuItem fullWidth>\n                                    Option 3 (Accordion)\n                                </ButtonPrimitive>\n                            </ListBox.Item>\n                        </AccordionPrimitive.Trigger>\n                        <AccordionPrimitive.Content className="ml-4">\n                            <ListBox.Item asChild>\n                                <ButtonPrimitive menuItem fullWidth>\n                                    Option 3 child\n                                </ButtonPrimitive>\n                            </ListBox.Item>\n                        </AccordionPrimitive.Content>\n                    </AccordionPrimitive.Item>\n                </AccordionPrimitive.Root>\n\n                <ListBox.Item asChild>\n                    <ButtonPrimitive fullWidth menuItem>\n                        Option 4\n                    </ButtonPrimitive>\n                </ListBox.Item>\n            </ListBox>\n        </div>;\n}',...Default.parameters?.docs?.source}}},VirtualFocus.parameters={...VirtualFocus.parameters,docs:{...VirtualFocus.parameters?.docs,source:{originalSource:'(props: React.ComponentProps<typeof ListBox>) => {\n  const [expandedItemIds, setExpandedItemIds] = useState<string[]>([]);\n  const ref = useRef<ListBoxHandle>(null);\n  return <div className="flex flex-col gap-3">\n            <div className="flex flex-col gap-1">\n                <p className="m-0">Listbox</p>\n                <p className="m-0">Wrap any set of elements in a Listbox to enable keyboard navigation.</p>\n                <p>\n                    (button, [href], input, select, textarea, [tabindex]:not([tabindex=\'-1\'])) gain focus when clicked\n                    or focused with keyboard, disabled elements are not focusable and skipped.\n                </p>\n                <ul className="list-disc list-inside">\n                    <li>Default (all elements gain \'real\' focus)</li>\n                    <li>\n                        OR virtual focus = true (where local state keeps track of focus allowing you to navigate with\n                        keyboard but keep let\'s say an input focused).\n                    </li>\n                </ul>\n            </div>\n            <ListBox className="flex flex-col gap-px max-h-[400px] overflow-y-auto border-1 border-dashed border-darkgray p-2" {...props} ref={ref}>\n                <ListBox.Item asChild className="mb-4">\n                    <input type="text" className="h-9 border border-primary rounded-md p-2" />\n                </ListBox.Item>\n                <ListBox.Item asChild>\n                    <Link to="https://www.google.com" target="_blank" buttonProps={{\n          menuItem: true\n        }} className="data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active">\n                        Option 1 (Link)\n                    </Link>\n                </ListBox.Item>\n                <ListBox.Item asChild onClick={() => alert(\'clicked\')}>\n                    <ButtonPrimitive menuItem className="data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active">\n                        Option 2 (Clickable)\n                    </ButtonPrimitive>\n                </ListBox.Item>\n                <ListBox.Item asChild aria-disabled>\n                    <ButtonPrimitive menuItem disabled className="data-[focused=true]:bg-fill-button-tertiary-active aria-[current=true]:bg-fill-button-tertiary-active">\n                        Option 3\n                    </ButtonPrimitive>\n                </ListBox.Item>\n                <AccordionPrimitive.Root type="multiple" value={expandedItemIds} onValueChange={s => {\n        setExpandedItemIds(s);\n      }} defaultValue={[\'one\']}>\n                    <AccordionPrimitive.Item value="one" className="flex flex-col w-full">\n                        <AccordionPrimitive.Trigger className="flex items-center gap-2 w-full h-8" asChild>\n                            <ListBox.Item asChild>\n                                <ButtonPrimitive menuItem fullWidth>\n                                    Option 3 (Accordion)\n                                </ButtonPrimitive>\n                            </ListBox.Item>\n                        </AccordionPrimitive.Trigger>\n                        <AccordionPrimitive.Content className="ml-4">\n                            <ListBox.Item asChild>\n                                <ButtonPrimitive menuItem fullWidth>\n                                    Option 3 child\n                                </ButtonPrimitive>\n                            </ListBox.Item>\n                        </AccordionPrimitive.Content>\n                    </AccordionPrimitive.Item>\n                </AccordionPrimitive.Root>\n\n                <ListBox.Item asChild>\n                    <ButtonPrimitive fullWidth menuItem>\n                        Option 4\n                    </ButtonPrimitive>\n                </ListBox.Item>\n            </ListBox>\n        </div>;\n}',...VirtualFocus.parameters?.docs?.source}}};let __namedExportsOrder=["Default","VirtualFocus"]}}]);