"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[60518],{"./frontend/src/lib/lemon-ui/LemonLabel/LemonLabel.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/@posthog/lemon-ui/src/index.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_LemonLabel__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonLabel/LemonLabel.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let meta={title:"Lemon UI/Lemon Label",component:_LemonLabel__WEBPACK_IMPORTED_MODULE_2__.H,parameters:{docs:{description:{component:`

[Related Figma area](https://www.figma.com/file/Y9G24U4r04nEjIDGIEGuKI/PostHog-Design-System-One?node-id=3139%3A1388)

Lemon Labels provide common styling and options for labeling form elements. They can be used directly but most commonly should be used via the \`Field\` component.

`}}},tags:["autodocs"]},__WEBPACK_DEFAULT_EXPORT__=meta,Basic=(props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonLabel__WEBPACK_IMPORTED_MODULE_2__.H,{...props})).bind({});function ExplanationModal(_ref){let{setOpen,open}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.fQ,{title:"Let me explain you the label",isOpen:open,onClose:()=>setOpen(!1),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"bg-bg-light w-full max-w-248 h-full ml-auto relative z-10 overflow-auto",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h3",{className:"text-lg text-semibold opacity-50 m-0",children:"Labels are awesome."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:"They truly are."})]})})}Basic.args={info:"This field is optional",showOptional:!0,children:"Label"};let Overview=()=>{let[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"flex flex-col gap-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonLabel__WEBPACK_IMPORTED_MODULE_2__.H,{children:"Basic"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonLabel__WEBPACK_IMPORTED_MODULE_2__.H,{info:"I am some extra info",children:"Label with info"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonLabel__WEBPACK_IMPORTED_MODULE_2__.H,{info:"I am some extra info",showOptional:!0,children:"Pineapple on Pizza"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_LemonLabel__WEBPACK_IMPORTED_MODULE_2__.H,{info:"I am some extra info",children:["Label with info ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{children:"custom subtext"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_LemonLabel__WEBPACK_IMPORTED_MODULE_2__.H,{onExplanationClick:()=>setOpen(!0),children:"Label with explanation modal"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(ExplanationModal,{open:open,setOpen:setOpen})]})};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(props: LemonLabelProps) => {\n  return <LemonLabel {...props} />;\n}",...Basic.parameters?.docs?.source}}},Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  return <div className="flex flex-col gap-2">\n            <LemonLabel>Basic</LemonLabel>\n            <LemonLabel info="I am some extra info">Label with info</LemonLabel>\n\n            <LemonLabel info="I am some extra info" showOptional>\n                Pineapple on Pizza\n            </LemonLabel>\n            <LemonLabel info="I am some extra info">\n                Label with info <span>custom subtext</span>\n            </LemonLabel>\n            <LemonLabel onExplanationClick={() => setOpen(true)}>Label with explanation modal</LemonLabel>\n            <ExplanationModal open={open} setOpen={setOpen} />\n        </div>;\n}',...Overview.parameters?.docs?.source}}};let __namedExportsOrder=["Basic","Overview"]}}]);
//# sourceMappingURL=lib-lemon-ui-LemonLabel-LemonLabel-stories.03781f30.iframe.bundle.js.map