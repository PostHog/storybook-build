"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[21458],{"./frontend/src/scenes/data-warehouse/external/forms/SyncMethodForm.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>SyncMethodForm});var _posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/@posthog/lemon-ui/src/index.ts"),lib_lemon_ui_LemonRadio__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonRadio/index.ts"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let getIncrementalSyncSupported=schema=>schema.incremental_available?0===schema.incremental_fields.length?{disabled:!0,disabledReason:"No incremental fields found on table"}:{disabled:!1}:{disabled:!0,disabledReason:"Incremental append replication isn't supported on this table"},hasInputChanged=(newSchemaSyncType,newSchemaIncrementalField,originalSchemaSyncType,originalSchemaIncrementalField)=>originalSchemaSyncType!==newSchemaSyncType||"incremental"===newSchemaSyncType&&newSchemaIncrementalField!==originalSchemaIncrementalField,getSaveDisabledReason=(syncType,incrementalField)=>syncType?"incremental"!==syncType||incrementalField?void 0:"You must select an incremental field":"You must select a sync method before saving",SyncMethodForm=_ref=>{var _schema$sync_type,_schema$incremental_f,_schema$sync_type2,_schema$incremental_f2,_schema$incremental_f4;let{schema,onClose,onSave,saveButtonIsLoading,showRefreshMessageOnChange}=_ref,[originalSchemaSyncType]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null!==(_schema$sync_type=schema.sync_type)&&void 0!==_schema$sync_type?_schema$sync_type:null),[originalSchemaIncrementalField]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null!==(_schema$incremental_f=schema.incremental_field)&&void 0!==_schema$incremental_f?_schema$incremental_f:null),[radioValue,setRadioValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null!==(_schema$sync_type2=schema.sync_type)&&void 0!==_schema$sync_type2?_schema$sync_type2:void 0),[incrementalFieldValue,setIncrementalFieldValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null!==(_schema$incremental_f2=schema.incremental_field)&&void 0!==_schema$incremental_f2?_schema$incremental_f2:null);(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{var _schema$sync_type3,_schema$incremental_f3;setRadioValue(null!==(_schema$sync_type3=schema.sync_type)&&void 0!==_schema$sync_type3?_schema$sync_type3:void 0),setIncrementalFieldValue(null!==(_schema$incremental_f3=schema.incremental_field)&&void 0!==_schema$incremental_f3?_schema$incremental_f3:null)},[schema.table]);let incrementalSyncSupported=getIncrementalSyncSupported(schema),inputChanged=hasInputChanged(null!=radioValue?radioValue:null,incrementalFieldValue,originalSchemaSyncType,originalSchemaIncrementalField);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lib_lemon_ui_LemonRadio__WEBPACK_IMPORTED_MODULE_1__._,{radioPosition:"top",value:radioValue,options:[{value:"incremental",disabledReason:incrementalSyncSupported.disabled&&incrementalSyncSupported.disabledReason||void 0,label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"mb-6 font-normal",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"items-center flex leading-[normal] overflow-hidden mb-2.5",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h2",{className:"mb-0 mr-2",children:"Incremental append replication"}),!incrementalSyncSupported.disabled&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.LemonTag,{type:"success",children:"Recommended"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:"When using incremental append replication, we'll store the max value of the below field on each sync and only sync rows with greater or equal value on the next run."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p",{children:["You should pick a field that increments for each row, such as a"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"created_at"})," timestamp."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p",{children:["This method will append all new rows to your existing table - this means duplicate data can exist if the incremental field updates for updated rows (such as when using an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("code",{children:"updated_at"})," field)"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.LemonSelect,{value:incrementalFieldValue,onChange:newValue=>setIncrementalFieldValue(newValue),options:null!==(_schema$incremental_f4=schema.incremental_fields.map(n=>({value:n.field,label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{className:"leading-5",children:n.label}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.LemonTag,{className:"ml-2",type:"success",children:n.type})]})})))&&void 0!==_schema$incremental_f4?_schema$incremental_f4:[],disabledReason:incrementalSyncSupported.disabled?"":void 0})]})},{value:"full_refresh",label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"mb-6 font-normal",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"items-center flex leading-[normal] overflow-hidden mb-2.5",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h2",{className:"mb-0 mr-2",children:"Full table replication"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:"We'll replicate the whole table on every sync. This can take longer to sync and increase your monthly billing."})]})}],onChange:newValue=>setRadioValue(newValue)}),inputChanged&&showRefreshMessageOnChange&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{className:"text-danger",children:"Note: Changing the sync type or incremental append replication field will trigger a full table refresh"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"flex flex-row justify-end w-full",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.LemonButton,{className:"mr-3",type:"secondary",onClick:onClose,children:"Close"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.LemonButton,{type:"primary",loading:saveButtonIsLoading,disabledReason:getSaveDisabledReason(radioValue,incrementalFieldValue),onClick:()=>{if("incremental"===radioValue){let fieldSelected=schema.incremental_fields.find(n=>n.field===incrementalFieldValue);if(!fieldSelected){_posthog_lemon_ui__WEBPACK_IMPORTED_MODULE_0__.lemonToast.error("Selected field for incremental append replication not found");return}onSave("incremental",incrementalFieldValue,fieldSelected.field_type)}else onSave("full_refresh",null,null)},children:"Save"})]})]})}},"./frontend/src/scenes/data-warehouse/settings/source/DataWarehouseSourceSettingsScene.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DataWarehouseSourceSettingsScene:()=>DataWarehouseSourceSettingsScene,scene:()=>scene});var src=__webpack_require__("./frontend/@posthog/lemon-ui/src/index.ts"),index_esm=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),PageHeader=__webpack_require__("./frontend/src/lib/components/PageHeader.tsx"),urls=__webpack_require__("./frontend/src/scenes/urls.ts"),lib=__webpack_require__("./node_modules/.pnpm/kea-loaders@3.0.0_kea@3.1.5/node_modules/kea-loaders/lib/index.js"),kea_router_lib=__webpack_require__("./node_modules/.pnpm/kea-router@3.1.4_kea@3.1.5/node_modules/kea-router/lib/index.js"),api=__webpack_require__("./frontend/src/lib/api.ts"),dist_module=__webpack_require__("./node_modules/.pnpm/posthog-js@1.146.3/node_modules/posthog-js/dist/module.js"),sceneTypes=__webpack_require__("./frontend/src/scenes/sceneTypes.ts"),types=__webpack_require__("./frontend/src/types.ts");let DataWarehouseSourceSettingsTabs=function(DataWarehouseSourceSettingsTabs){return DataWarehouseSourceSettingsTabs.Schemas="schemas",DataWarehouseSourceSettingsTabs.Syncs="syncs",DataWarehouseSourceSettingsTabs}({}),dataWarehouseSourceSettingsLogic=(0,index_esm.kea)([(0,index_esm.path)(["scenes","data-warehouse","settings","source","dataWarehouseSourceSettingsLogic"]),(0,index_esm.props)({}),(0,index_esm.key)(_ref=>{let{id}=_ref;return id}),(0,index_esm.actions)({setCurrentTab:tab=>({tab}),setParentSettingsTab:tab=>({tab}),setSourceId:id=>({id}),reloadSchema:schema=>({schema}),resyncSchema:schema=>({schema})}),(0,lib.loaders)(_ref2=>{let{actions,values}=_ref2;return{source:[null,{loadSource:async()=>await api.ZP.externalDataSources.get(values.sourceId),updateSchema:async schema=>{let clonedSource=JSON.parse(JSON.stringify(values.source)),schemaIndex=clonedSource.schemas.findIndex(n=>n.id===schema.id);clonedSource.schemas[schemaIndex]=schema,actions.loadSourceSuccess(clonedSource);let updatedSchema=await api.ZP.externalDataSchemas.update(schema.id,schema),source=values.source;return void 0!==schemaIndex&&(source.schemas[schemaIndex]=updatedSchema),source}}],jobs:[[],{loadJobs:async()=>await api.ZP.externalDataSources.jobs(values.sourceId)}]}}),(0,index_esm.reducers)({currentTab:[DataWarehouseSourceSettingsTabs.Schemas,{setCurrentTab:(_,_ref3)=>{let{tab}=_ref3;return tab}}],parentSettingsTab:[types.EP.Managed,{setParentSettingsTab:(_,_ref4)=>{let{tab}=_ref4;return tab}}],sourceId:["",{setSourceId:(_,_ref5)=>{let{id}=_ref5;return id}}]}),(0,index_esm.selectors)({breadcrumbs:[s=>[s.parentSettingsTab,s.sourceId],(parentSettingsTab,sourceId)=>[{key:sceneTypes.x.DataWarehouse,name:"Data Warehouse",path:urls.j.dataWarehouse()},{key:sceneTypes.x.DataWarehouseSettings,name:"Data Warehouse Settings",path:urls.j.dataWarehouseSettings(parentSettingsTab)},{key:sceneTypes.x.dataWarehouseSourceSettings,name:"Data Warehouse Source Settings",path:urls.j.dataWarehouseSourceSettings(sourceId,parentSettingsTab)}]]}),(0,index_esm.listeners)(_ref6=>{let{values,actions,cache}=_ref6;return{loadSourceSuccess:()=>{clearTimeout(cache.refreshTimeout),cache.refreshTimeout=setTimeout(()=>{actions.loadSource()},5e3)},loadSourceFailure:()=>{clearTimeout(cache.refreshTimeout),cache.refreshTimeout=setTimeout(()=>{actions.loadSource()},5e3)},reloadSchema:async _ref7=>{let{schema}=_ref7,clonedSource=JSON.parse(JSON.stringify(values.source)),schemaIndex=clonedSource.schemas.findIndex(n=>n.id===schema.id);clonedSource.status="Running",clonedSource.schemas[schemaIndex].status="Running",actions.loadSourceSuccess(clonedSource);try{await api.ZP.externalDataSchemas.reload(schema.id),dist_module.ZP.capture("schema reloaded",{sourceType:clonedSource.source_type})}catch(e){e.message?src.lemonToast.error(e.message):src.lemonToast.error("Cant reload schema at this time")}},resyncSchema:async _ref8=>{let{schema}=_ref8,clonedSource=JSON.parse(JSON.stringify(values.source)),schemaIndex=clonedSource.schemas.findIndex(n=>n.id===schema.id);clonedSource.status="Running",clonedSource.schemas[schemaIndex].status="Running",actions.loadSourceSuccess(clonedSource);try{await api.ZP.externalDataSchemas.resync(schema.id),dist_module.ZP.capture("schema resynced",{sourceType:clonedSource.source_type})}catch(e){e.message?src.lemonToast.error(e.message):src.lemonToast.error("Cant refresh schema at this time")}}}}),(0,kea_router_lib.urlToAction)(_ref9=>{let{actions,values}=_ref9;return{"/data-warehouse/settings/:parentTab/:id":_ref10=>{let{parentTab,id}=_ref10;id&&actions.setSourceId(id),parentTab!==values.parentSettingsTab&&actions.setParentSettingsTab(parentTab)}}}),(0,index_esm.afterMount)(_ref11=>{let{actions}=_ref11;actions.loadSource(),actions.loadJobs()})]);var apps_common_src=__webpack_require__("./frontend/@posthog/apps-common/src/index.ts"),More=__webpack_require__("./frontend/src/lib/lemon-ui/LemonButton/More.tsx"),react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),utils=__webpack_require__("./frontend/src/scenes/data-warehouse/utils.ts"),SyncMethodForm=__webpack_require__("./frontend/src/scenes/data-warehouse/external/forms/SyncMethodForm.tsx"),dataWarehouseSettingsLogic=__webpack_require__("./frontend/src/scenes/data-warehouse/settings/dataWarehouseSettingsLogic.ts");let dataWarehouseSourcesTableSyncMethodModalLogic=(0,index_esm.kea)([(0,index_esm.path)(["scenes","data-warehouse","settings","DataWarehouseSourcesTableSyncMethodModalLogic"]),(0,index_esm.props)({schema:{}}),(0,index_esm.key)(props=>props.schema.id),(0,index_esm.connect)(()=>({actions:[dataWarehouseSettingsLogic.T,["updateSchema","updateSchemaSuccess","updateSchemaFailure"]]})),(0,index_esm.actions)({openSyncMethodModal:schema=>({schema}),closeSyncMethodModal:!0}),(0,lib.loaders)({schemaIncrementalFields:[null,{loadSchemaIncrementalFields:async schemaId=>await api.ZP.externalDataSchemas.incremental_fields(schemaId),resetSchemaIncrementalFields:()=>null}]}),(0,index_esm.reducers)({syncMethodModalIsOpen:[!1,{openSyncMethodModal:()=>!0,closeSyncMethodModal:()=>!1}],currentSyncMethodModalSchema:[null,{openSyncMethodModal:(_,_ref)=>{let{schema}=_ref;return schema},closeSyncMethodModal:()=>null}],saveButtonIsLoading:[!1,{updateSchema:()=>!0,updateSchemaFailure:()=>!1,updateSchemaSuccess:()=>!1}]}),(0,index_esm.listeners)(_ref2=>{let{actions}=_ref2;return{updateSchemaSuccess:()=>{actions.resetSchemaIncrementalFields(),actions.closeSyncMethodModal()}}})]);var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let StatusTagSetting={Running:"primary",Completed:"success",Error:"danger",Failed:"danger"},SchemaTable=_ref=>{let{schemas,isLoading}=_ref,{updateSchema,reloadSchema,resyncSchema}=(0,index_esm.useActions)(dataWarehouseSourceSettingsLogic),{schemaReloadingById}=(0,index_esm.useValues)(dataWarehouseSettingsLogic.T);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(src.LemonTable,{dataSource:schemas,loading:isLoading,disableTableWhileLoading:!1,columns:[{title:"Schema Name",key:"name",render:function RenderName(_,schema){return(0,jsx_runtime.jsx)("span",{children:schema.name})}},{title:"Sync Frequency",key:"frequency",render:function RenderFrequency(_,schema){return(0,jsx_runtime.jsx)(src.LemonSelect,{className:"my-1",value:schema.sync_frequency||"day",onChange:value=>updateSchema({...schema,sync_frequency:value}),options:[{value:"day",label:"Daily"},{value:"week",label:"Weekly"},{value:"month",label:"Monthly"}]})}},{title:"Sync method",key:"incremental",render:function RenderIncremental(_,schema){let{openSyncMethodModal}=(0,index_esm.useActions)(dataWarehouseSourcesTableSyncMethodModalLogic({schema}));return schema.sync_type?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src.LemonButton,{className:"my-1",size:"small",type:"secondary",onClick:()=>openSyncMethodModal(schema),children:"incremental"==schema.sync_type?"Incremental":"Full refresh"}),(0,jsx_runtime.jsx)(SyncMethodModal,{schema:schema})]}):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src.LemonButton,{className:"my-1",type:"primary",onClick:()=>openSyncMethodModal(schema),children:"Set up"}),(0,jsx_runtime.jsx)(SyncMethodModal,{schema:schema})]})}},{title:"Enabled",key:"should_sync",render:function RenderShouldSync(_,schema){return(0,jsx_runtime.jsx)(src.LemonSwitch,{disabledReason:null===schema.sync_type?"You must set up the sync method first":void 0,checked:schema.should_sync,onChange:active=>{updateSchema({...schema,should_sync:active})}})}},{title:"Synced Table",key:"table",render:function RenderTable(_,schema){if(schema.table){let query=(0,utils.w)(schema.table.name,schema.table.columns);return(0,jsx_runtime.jsx)(src.Link,{to:urls.j.dataWarehouse(JSON.stringify(query)),children:(0,jsx_runtime.jsx)("code",{children:schema.table.name})})}return(0,jsx_runtime.jsx)("div",{children:"Not yet synced"})}},{title:"Last Synced At",key:"last_synced_at",render:function Render(_,schema){return schema.last_synced_at?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(apps_common_src.TZLabel,{time:schema.last_synced_at,formatDate:"MMM\xa0DD,\xa0YYYY",formatTime:"HH:mm"})}):null}},{title:"Rows Synced",key:"rows_synced",render:function Render(_,schema){var _schema$table$row_cou;return(null!==(_schema$table$row_cou=schema.table?.row_count)&&void 0!==_schema$table$row_cou?_schema$table$row_cou:0).toLocaleString()}},{title:"Status",key:"status",render:function RenderStatus(_,schema){return schema.status?(0,jsx_runtime.jsx)(src.LemonTag,{type:StatusTagSetting[schema.status]||"default",children:schema.status}):null}},{key:"actions",width:0,render:function RenderActions(_,schema){return schemaReloadingById[schema.id]?(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(src.Spinner,{})}):(0,jsx_runtime.jsx)("div",{className:"flex flex-row justify-end",children:(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(More.T,{overlay:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src.LemonButton,{type:"tertiary",onClick:()=>{reloadSchema(schema)},children:"Reload"},`reload-data-warehouse-schema-${schema.id}`),schema.incremental&&(0,jsx_runtime.jsx)(src.Tooltip,{title:"Completely resync incrementally loaded data. Only recommended if there is an issue with data quality in previously imported data",children:(0,jsx_runtime.jsx)(src.LemonButton,{type:"tertiary",onClick:()=>{resyncSchema(schema)},status:"danger",children:"Resync"},`resync-data-warehouse-schema-${schema.id}`)})]})})})})}}]})})},SyncMethodModal=_ref2=>{var _currentSyncMethodMod,_currentSyncMethodMod2;let{schema}=_ref2,{syncMethodModalIsOpen,currentSyncMethodModalSchema,schemaIncrementalFields,schemaIncrementalFieldsLoading,saveButtonIsLoading}=(0,index_esm.useValues)(dataWarehouseSourcesTableSyncMethodModalLogic({schema})),{closeSyncMethodModal,loadSchemaIncrementalFields,resetSchemaIncrementalFields,updateSchema}=(0,index_esm.useActions)(dataWarehouseSourcesTableSyncMethodModalLogic({schema}));(0,react.useEffect)(()=>{currentSyncMethodModalSchema?.id&&(resetSchemaIncrementalFields(),loadSchemaIncrementalFields(currentSyncMethodModalSchema.id))},[currentSyncMethodModalSchema?.id]);let schemaLoading=schemaIncrementalFieldsLoading||!schemaIncrementalFields;return currentSyncMethodModalSchema?(0,jsx_runtime.jsxs)(src.LemonModal,{title:`Sync method for ${currentSyncMethodModalSchema.name}`,isOpen:syncMethodModalIsOpen,onClose:closeSyncMethodModal,footer:schemaLoading&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src.LemonSkeleton.Button,{}),(0,jsx_runtime.jsx)(src.LemonSkeleton.Button,{})]}),children:[schemaLoading&&(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)(src.LemonSkeleton,{className:"w-1/2 h-4"}),(0,jsx_runtime.jsx)(src.LemonSkeleton.Row,{repeat:3})]}),!schemaLoading&&schemaIncrementalFields&&(0,jsx_runtime.jsx)(SyncMethodForm.m,{showRefreshMessageOnChange:null!==currentSyncMethodModalSchema.sync_type,saveButtonIsLoading:saveButtonIsLoading,schema:{table:currentSyncMethodModalSchema.name,should_sync:currentSyncMethodModalSchema.should_sync,sync_type:currentSyncMethodModalSchema.sync_type,incremental_field:null!==(_currentSyncMethodMod=currentSyncMethodModalSchema.incremental_field)&&void 0!==_currentSyncMethodMod?_currentSyncMethodMod:null,incremental_field_type:null!==(_currentSyncMethodMod2=currentSyncMethodModalSchema.incremental_field_type)&&void 0!==_currentSyncMethodMod2?_currentSyncMethodMod2:null,incremental_available:!!schemaIncrementalFields.length,incremental_fields:schemaIncrementalFields},onClose:()=>{resetSchemaIncrementalFields(),closeSyncMethodModal()},onSave:(syncType,incrementalField,incrementalFieldType)=>{"full_refresh"===syncType?updateSchema({...currentSyncMethodModalSchema,should_sync:!0,sync_type:syncType,incremental_field:null,incremental_field_type:null}):updateSchema({...currentSyncMethodModalSchema,should_sync:!0,sync_type:syncType,incremental_field:incrementalField,incremental_field_type:incrementalFieldType})}})]}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{})},Syncs_StatusTagSetting={Running:"primary",Completed:"success",Failed:"danger",Cancelled:"default"},scene={component:DataWarehouseSourceSettingsScene,logic:dataWarehouseSourceSettingsLogic,paramsToProps:_ref=>{let{params:{id,tab}}=_ref;if(!id||!tab)throw Error("Loaded DataWarehouseSourceSettings without eother `id` or `tab`");return{id,parentSettingsTab:tab}}},TabContent={[DataWarehouseSourceSettingsTabs.Schemas]:()=>{var _source$schemas;let{source,sourceLoading}=(0,index_esm.useValues)(dataWarehouseSourceSettingsLogic);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(SchemaTable,{schemas:null!==(_source$schemas=source?.schemas)&&void 0!==_source$schemas?_source$schemas:[],isLoading:sourceLoading})})},[DataWarehouseSourceSettingsTabs.Syncs]:()=>{let{jobs,jobsLoading}=(0,index_esm.useValues)(dataWarehouseSourceSettingsLogic);return(0,jsx_runtime.jsx)(src.LemonTable,{dataSource:jobs,loading:jobsLoading,columns:[{title:"Schema",render:(_,job)=>job.schema.name},{title:"Status",render:(_,job)=>(0,jsx_runtime.jsx)(src.LemonTag,{type:Syncs_StatusTagSetting[job.status],children:job.status})},{title:"Rows synced",render:(_,job)=>job.rows_synced},{title:"Synced at",render:(_,job)=>(0,jsx_runtime.jsx)(apps_common_src.TZLabel,{time:job.created_at,formatDate:"MMM\xa0DD,\xa0YYYY",formatTime:"HH:mm"})}]})}},FriendlyTabNames={[DataWarehouseSourceSettingsTabs.Schemas]:"Schemas",[DataWarehouseSourceSettingsTabs.Syncs]:"Syncs"};function DataWarehouseSourceSettingsScene(){let{parentSettingsTab,currentTab}=(0,index_esm.useValues)(dataWarehouseSourceSettingsLogic),{setCurrentTab}=(0,index_esm.useActions)(dataWarehouseSourceSettingsLogic);return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(PageHeader.m,{buttons:(0,jsx_runtime.jsx)(src.LemonButton,{type:"primary",to:urls.j.dataWarehouseSettings(parentSettingsTab),children:"Cancel"})}),(0,jsx_runtime.jsx)(src.LemonTabs,{activeKey:currentTab,onChange:tab=>setCurrentTab(tab),tabs:Object.entries(TabContent).map(_ref2=>{let[tab,ContentComponent]=_ref2;return{label:FriendlyTabNames[tab],key:tab,content:(0,jsx_runtime.jsx)(ContentComponent,{})}})})]})}}}]);