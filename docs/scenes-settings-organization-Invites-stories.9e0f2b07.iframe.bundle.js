"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[72134],{"../../frontend/src/scenes/settings/organization/Invites.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CurrentUserIsAdmin:()=>CurrentUserIsAdmin,CurrentUserIsMember:()=>CurrentUserIsMember,CurrentUserIsOwner:()=>CurrentUserIsOwner,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lib_api_mock__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/lib/api.mock.ts"),lib_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/lib/constants.tsx"),scenes_App__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/scenes/App.tsx"),scenes_urls__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../frontend/src/scenes/urls.ts"),_mocks_browser__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../frontend/src/mocks/browser.tsx"),_mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../frontend/src/mocks/fixtures/_preflight.json");let __WEBPACK_DEFAULT_EXPORT__={component:scenes_App__WEBPACK_IMPORTED_MODULE_2__.g,title:"Scenes-Other/Org Member Invites",parameters:{layout:"fullscreen",viewMode:"story",featureFlags:Object.values(lib_constants__WEBPACK_IMPORTED_MODULE_1__.y8),pageUrl:scenes_urls__WEBPACK_IMPORTED_MODULE_3__.j.settings("organization-members")},decorators:[(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_4__.x8)({get:{"/api/users/@me":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_0__.T6,organization:{membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_1__.Dk.Owner}}],"/api/organizations/@current/":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_0__.On,membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_1__.Dk.Owner}]}})]},CurrentUserIsOwner={decorators:[(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_4__.x8)({get:{"/_preflight":{..._mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_5__,cloud:!1,realm:"hosted-clickhouse",available_social_auth_providers:{github:!1,gitlab:!1,"google-oauth2":!1,saml:!1}}}})]},CurrentUserIsAdmin={decorators:[(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_4__.x8)({get:{"/_preflight":{..._mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_5__,cloud:!1,realm:"hosted-clickhouse",available_social_auth_providers:{github:!1,gitlab:!1,"google-oauth2":!1,saml:!1}},"/api/organizations/@current/":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_0__.On,membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_1__.Dk.Admin}]}})]},CurrentUserIsMember={decorators:[(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_4__.x8)({get:{"/_preflight":{..._mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_5__,cloud:!1,realm:"hosted-clickhouse",available_social_auth_providers:{github:!1,gitlab:!1,"google-oauth2":!1,saml:!1}},"/api/organizations/@current/":()=>[200,{...lib_api_mock__WEBPACK_IMPORTED_MODULE_0__.On,membership_level:lib_constants__WEBPACK_IMPORTED_MODULE_1__.Dk.Member}]}})]};CurrentUserIsOwner.parameters={...CurrentUserIsOwner.parameters,docs:{...CurrentUserIsOwner.parameters?.docs,source:{originalSource:"{\n  decorators: [mswDecorator({\n    get: {\n      '/_preflight': {\n        ...preflightJson,\n        cloud: false,\n        realm: 'hosted-clickhouse',\n        available_social_auth_providers: {\n          github: false,\n          gitlab: false,\n          'google-oauth2': false,\n          saml: false\n        }\n      }\n    }\n  })]\n}",...CurrentUserIsOwner.parameters?.docs?.source}}},CurrentUserIsAdmin.parameters={...CurrentUserIsAdmin.parameters,docs:{...CurrentUserIsAdmin.parameters?.docs,source:{originalSource:"{\n  decorators: [mswDecorator({\n    get: {\n      '/_preflight': {\n        ...preflightJson,\n        cloud: false,\n        realm: 'hosted-clickhouse',\n        available_social_auth_providers: {\n          github: false,\n          gitlab: false,\n          'google-oauth2': false,\n          saml: false\n        }\n      },\n      '/api/organizations/@current/': (): MockSignature => [200, {\n        ...MOCK_DEFAULT_ORGANIZATION,\n        membership_level: OrganizationMembershipLevel.Admin\n      }]\n    }\n  })]\n}",...CurrentUserIsAdmin.parameters?.docs?.source}}},CurrentUserIsMember.parameters={...CurrentUserIsMember.parameters,docs:{...CurrentUserIsMember.parameters?.docs,source:{originalSource:"{\n  decorators: [mswDecorator({\n    get: {\n      '/_preflight': {\n        ...preflightJson,\n        cloud: false,\n        realm: 'hosted-clickhouse',\n        available_social_auth_providers: {\n          github: false,\n          gitlab: false,\n          'google-oauth2': false,\n          saml: false\n        }\n      },\n      '/api/organizations/@current/': (): MockSignature => [200, {\n        ...MOCK_DEFAULT_ORGANIZATION,\n        membership_level: OrganizationMembershipLevel.Member\n      }]\n    }\n  })]\n}",...CurrentUserIsMember.parameters?.docs?.source}}};let __namedExportsOrder=["CurrentUserIsOwner","CurrentUserIsAdmin","CurrentUserIsMember"]}}]);