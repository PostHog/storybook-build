"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[9700],{"./frontend/src/scenes/settings/organization/VerifiedDomains/SSOSelect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SSOSelect_:()=>SSOSelect_,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),_mocks_browser__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/mocks/browser.tsx"),_mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/mocks/fixtures/_preflight.json"),_SSOSelect__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/scenes/settings/organization/VerifiedDomains/SSOSelect.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/SSO Select",component:_SSOSelect__WEBPACK_IMPORTED_MODULE_3__.I},SSOSelect_=(args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("google-oauth2");return(0,_mocks_browser__WEBPACK_IMPORTED_MODULE_1__.ok)({get:{"/_preflight":(_,__,ctx)=>[ctx.delay(10),ctx.status(200),ctx.json({..._mocks_fixtures_preflight_json__WEBPACK_IMPORTED_MODULE_2__,available_social_auth_providers:{github:!0,gitlab:!1,"google-oauth2":!0}})]}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{maxWidth:600},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_SSOSelect__WEBPACK_IMPORTED_MODULE_3__.I,{...args,value,onChange:val=>setValue(val)})})}).bind({});SSOSelect_.args={loading:!1,samlAvailable:!0},SSOSelect_.parameters={...SSOSelect_.parameters,docs:{...SSOSelect_.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(('google-oauth2' as SSOProvider | ''));\n  useStorybookMocks({\n    get: {\n      '/_preflight': (_, __, ctx) => [ctx.delay(10), ctx.status(200), ctx.json({\n        ...preflightJSON,\n        available_social_auth_providers: {\n          github: true,\n          gitlab: false,\n          'google-oauth2': true\n        }\n      })]\n    }\n  });\n  return <div style={{\n    maxWidth: 600\n  }}>\n            <SSOSelect {...args} value={value} onChange={val => setValue(val)} />\n        </div>;\n}",...SSOSelect_.parameters?.docs?.source}}};const __namedExportsOrder=["SSOSelect_"]}}]);