{"version":3,"file":"89600.ff9653e3.iframe.bundle.js","mappings":";AAiCA","sources":["webpack://@posthog/storybook/../../frontend/src/scenes/persons-management/tabs/Persons.tsx"],"sourcesContent":["import { IconEllipsis } from '@posthog/icons'\nimport { LemonButton, LemonDialog, LemonInput, LemonMenu } from '@posthog/lemon-ui'\nimport { useActions, useAsyncActions, useValues } from 'kea'\nimport { PageHeader } from 'lib/components/PageHeader'\nimport { LemonField } from 'lib/lemon-ui/LemonField'\nimport { Link } from 'lib/lemon-ui/Link'\nimport { OnboardingStepKey } from 'scenes/onboarding/onboardingLogic'\nimport { personsSceneLogic } from 'scenes/persons-management/tabs/personsSceneLogic'\nimport { teamLogic } from 'scenes/teamLogic'\nimport { urls } from 'scenes/urls'\n\nimport { Query } from '~/queries/Query/Query'\nimport { ProductKey } from '~/types'\n\nexport function Persons(): JSX.Element {\n    const { query } = useValues(personsSceneLogic)\n    const { setQuery } = useActions(personsSceneLogic)\n    const { resetDeletedDistinctId } = useAsyncActions(personsSceneLogic)\n    const { currentTeam } = useValues(teamLogic)\n\n    return (\n        <>\n            <PageHeader\n                buttons={\n                    <LemonMenu\n                        items={[\n                            {\n                                label: 'Reset deleted person',\n                                onClick: () =>\n                                    LemonDialog.openForm({\n                                        width: '30rem',\n                                        title: 'Reset deleted person',\n                                        description: `Once a person is deleted, the \"distinct_id\" associated with them can no longer be used. \n                                            You can use this tool to reset the \"distinct_id\" for a person so that new events associated with it will create a new Person profile.`,\n                                        initialValues: {\n                                            distinct_id: '',\n                                        },\n                                        content: (\n                                            <LemonField name=\"distinct_id\" label=\"Distinct ID to reset\">\n                                                <LemonInput type=\"text\" autoFocus />\n                                            </LemonField>\n                                        ),\n                                        errors: {\n                                            distinct_id: (distinct_id) =>\n                                                !distinct_id ? 'This is required' : undefined,\n                                        },\n                                        onSubmit: async ({ distinct_id }) => await resetDeletedDistinctId(distinct_id),\n                                    }),\n                            },\n                        ]}\n                    >\n                        <LemonButton aria-label=\"more\" icon={<IconEllipsis />} size=\"small\" />\n                    </LemonMenu>\n                }\n            />\n            <Query\n                query={query}\n                setQuery={setQuery}\n                context={{\n                    refresh: 'blocking',\n                    emptyStateHeading: currentTeam?.ingested_event\n                        ? 'There are no matching persons for this query'\n                        : 'No persons exist because no events have been ingested',\n                    emptyStateDetail: currentTeam?.ingested_event ? (\n                        'Try changing the date range or property filters.'\n                    ) : (\n                        <>\n                            Go to the{' '}\n                            <Link\n                                to={urls.onboarding(ProductKey.PRODUCT_ANALYTICS, OnboardingStepKey.INSTALL)}\n                                data-attr=\"real_project_with_no_events-ingestion_link\"\n                            >\n                                onboarding wizard\n                            </Link>{' '}\n                            to get things moving\n                        </>\n                    ),\n                }}\n                dataAttr=\"persons-table\"\n            />\n        </>\n    )\n}\n"],"names":[],"sourceRoot":""}