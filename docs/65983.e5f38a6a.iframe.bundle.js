"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[65983],{"./frontend/src/scenes/data-warehouse/settings/DataWarehouseSourcesTable.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{xU:()=>DataWarehouseSourcesTable,MX:()=>RenderDataWarehouseSourceIcon});var src=__webpack_require__("./frontend/@posthog/apps-common/src/index.ts"),lemon_ui_src=__webpack_require__("./frontend/@posthog/lemon-ui/src/index.ts"),index_esm=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),lib=__webpack_require__("./node_modules/.pnpm/kea-router@3.1.4_kea@3.1.5/node_modules/kea-router/lib/index.js"),ProductIntroduction=__webpack_require__("./frontend/src/lib/components/ProductIntroduction/ProductIntroduction.tsx"),More=__webpack_require__("./frontend/src/lib/lemon-ui/LemonButton/More.tsx");let hubspot_logo=__webpack_require__.p+"images/hubspot-logo.c0fff3b062a9575d0c2b48cda3bb6d35.svg",postgres_logo=__webpack_require__.p+"images/postgres-logo.e407ebb120aa171a7512a371dda497b5.svg";var posthog_icon=__webpack_require__("./frontend/public/posthog-icon.svg");let snowflake_logo=__webpack_require__.p+"images/snowflake-logo.c5b9d7830f5c68469dea73f3200647c8.svg",stripe_logo=__webpack_require__.p+"images/stripe-logo.b028b0fcb152afb51f2ab5c15b9c8331.svg",zendesk_logo=__webpack_require__.p+"images/zendesk-logo.ab7151773a17b0b73f212bb73bf859d8.svg";var urls=__webpack_require__("./frontend/src/scenes/urls.ts"),queries_schema=__webpack_require__("./frontend/src/queries/schema.ts"),types=__webpack_require__("./frontend/src/types.ts"),dataWarehouseSettingsLogic=__webpack_require__("./frontend/src/scenes/data-warehouse/settings/dataWarehouseSettingsLogic.ts"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let StatusTagSetting={Running:"primary",Completed:"success",Error:"danger",Failed:"danger"};function DataWarehouseSourcesTable(){var _dataWarehouseSources;let{dataWarehouseSources,dataWarehouseSourcesLoading,sourceReloadingById}=(0,index_esm.useValues)(dataWarehouseSettingsLogic.T),{deleteSource,reloadSource,updateSource}=(0,index_esm.useActions)(dataWarehouseSettingsLogic.T);return dataWarehouseSourcesLoading||dataWarehouseSources?.results.length!==0?(0,jsx_runtime.jsx)(lemon_ui_src.LemonTable,{dataSource:null!==(_dataWarehouseSources=dataWarehouseSources?.results)&&void 0!==_dataWarehouseSources?_dataWarehouseSources:[],loading:dataWarehouseSourcesLoading,disableTableWhileLoading:!1,columns:[{width:0,render:function RenderAppInfo(_,source){return(0,jsx_runtime.jsx)(RenderDataWarehouseSourceIcon,{type:source.source_type})}},{title:"Source Type",key:"name",render:function RenderName(_,source){return source.source_type}},{title:"Table Prefix",key:"prefix",render:function RenderPrefix(_,source){return source.prefix}},{title:"Sync Frequency",key:"frequency",render:function RenderFrequency(_,source){return(0,jsx_runtime.jsx)(lemon_ui_src.LemonSelect,{value:source.sync_frequency||"day",onChange:value=>updateSource({...source,sync_frequency:value}),options:[{value:"day",label:"Daily"},{value:"week",label:"Weekly"},{value:"month",label:"Monthly"}]})}},{title:"Last Successful Run",key:"last_run_at",tooltip:"Time of the last run that completed a data import",render:(_,run)=>run.last_run_at?(0,jsx_runtime.jsx)(src.TZLabel,{time:run.last_run_at,formatDate:"MMM\xa0DD,\xa0YYYY",formatTime:"HH:mm"}):"Never"},{title:"Total Rows Synced",key:"rows_synced",tooltip:"Total number of rows synced across all schemas in this source",render:function RenderRowsSynced(_,source){return source.schemas.reduce((acc,schema)=>{var _schema$table$row_cou;return acc+(null!==(_schema$table$row_cou=schema.table?.row_count)&&void 0!==_schema$table$row_cou?_schema$table$row_cou:0)},0)}},{title:"Status",key:"status",render:function RenderStatus(_,source){return(0,jsx_runtime.jsx)(lemon_ui_src.LemonTag,{type:StatusTagSetting[source.status]||"default",children:source.status})}},{key:"actions",width:0,render:function RenderActions(_,source){return(0,jsx_runtime.jsx)("div",{className:"flex flex-row justify-end",children:sourceReloadingById[source.id]?(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(lemon_ui_src.Spinner,{})}):(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(More.T,{overlay:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(lemon_ui_src.Tooltip,{title:"Start the data import for this schema again",children:(0,jsx_runtime.jsx)(lemon_ui_src.LemonButton,{type:"tertiary","data-attr":`reload-data-warehouse-${source.source_type}`,onClick:()=>{reloadSource(source)},children:"Reload"},`reload-data-warehouse-${source.source_type}`)}),(0,jsx_runtime.jsx)(lemon_ui_src.LemonButton,{status:"danger","data-attr":`delete-data-warehouse-${source.source_type}`,onClick:()=>{lemon_ui_src.LemonDialog.open({title:"Delete data source?",description:"Are you sure you want to delete this data source? All related tables will be deleted.",primaryButton:{children:"Delete",status:"danger",onClick:()=>deleteSource(source)},secondaryButton:{children:"Cancel"}})},children:"Delete"},`delete-data-warehouse-${source.source_type}`)]})})})})}}],expandable:{expandedRowRender:source=>(0,jsx_runtime.jsx)("div",{className:"px-4 py-3",children:(0,jsx_runtime.jsx)("div",{className:"flex flex-col",children:(0,jsx_runtime.jsx)("div",{className:"mt-2",children:(0,jsx_runtime.jsx)(SchemaTable,{schemas:source.schemas})})})}),rowExpandable:()=>!0,noIndent:!0}}):(0,jsx_runtime.jsx)(ProductIntroduction.C,{productName:"Data Warehouse Source",productKey:types.Md.DATA_WAREHOUSE,thingName:"data source",description:"Use data warehouse sources to import data from your external data into PostHog.",isEmpty:dataWarehouseSources?.results.length==0,docsURL:"https://posthog.com/docs/data-warehouse",action:()=>lib.router.actions.push(urls.j.pipelineNodeDataWarehouseNew())})}function RenderDataWarehouseSourceIcon(_ref){let{type,size="small"}=_ref,sizePx="small"===size?30:60;return"Manual"==type?(0,jsx_runtime.jsx)("div",{className:"flex items-center gap-4",children:(0,jsx_runtime.jsx)(lemon_ui_src.Tooltip,{title:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[type,(0,jsx_runtime.jsx)("br",{}),"Click to view docs"]}),children:(0,jsx_runtime.jsx)(lemon_ui_src.Link,{to:"https://posthog.com/docs/data-warehouse/setup#linking-a-custom-source",children:(0,jsx_runtime.jsx)("img",{src:posthog_icon.default,alt:type,height:sizePx,width:sizePx})})})}):(0,jsx_runtime.jsx)("div",{className:"flex items-center gap-4",children:(0,jsx_runtime.jsx)(lemon_ui_src.Tooltip,{title:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[type,(0,jsx_runtime.jsx)("br",{}),"Click to view docs"]}),children:(0,jsx_runtime.jsx)(lemon_ui_src.Link,{to:`https://posthog.com/docs/data-warehouse/setup#${type.toLowerCase()}`,children:(0,jsx_runtime.jsx)("img",{src:{Stripe:stripe_logo,Hubspot:hubspot_logo,Zendesk:zendesk_logo,Postgres:postgres_logo,Snowflake:snowflake_logo}[type],alt:type,height:sizePx,width:sizePx})})})})}let SchemaTable=_ref2=>{let{schemas}=_ref2,{updateSchema,reloadSchema,resyncSchema}=(0,index_esm.useActions)(dataWarehouseSettingsLogic.T),{schemaReloadingById}=(0,index_esm.useValues)(dataWarehouseSettingsLogic.T);return(0,jsx_runtime.jsx)(lemon_ui_src.LemonTable,{dataSource:schemas,columns:[{title:"Schema Name",key:"name",render:function RenderName(_,schema){return(0,jsx_runtime.jsx)("span",{children:schema.name})}},{title:"Refresh Type",key:"incremental",render:function RenderIncremental(_,schema){return schema.incremental?(0,jsx_runtime.jsx)(lemon_ui_src.Tooltip,{title:"Each run will only pull data that has since been added",placement:"top",children:(0,jsx_runtime.jsx)(lemon_ui_src.LemonTag,{type:"primary",children:"Incremental"})}):(0,jsx_runtime.jsx)(lemon_ui_src.Tooltip,{title:"Each run will pull all data from the source",placement:"top",children:(0,jsx_runtime.jsx)(lemon_ui_src.LemonTag,{type:"default",children:"Full Refresh"})})}},{title:"Enabled",key:"should_sync",render:function RenderShouldSync(_,schema){return(0,jsx_runtime.jsx)(lemon_ui_src.LemonSwitch,{checked:schema.should_sync,onChange:active=>{updateSchema({...schema,should_sync:active})}})}},{title:"Synced Table",key:"table",render:function RenderTable(_,schema){if(schema.table){let query={kind:queries_schema.OH.DataTableNode,full:!0,source:{kind:queries_schema.OH.HogQLQuery,query:`SELECT ${schema.table.columns.filter(_ref3=>{let{table,fields,chain,schema_valid}=_ref3;return!table&&!fields&&!chain&&schema_valid}).map(_ref4=>{let{name}=_ref4;return name})} FROM ${"numbers"===schema.table.name?"numbers(0, 10)":schema.table.name} LIMIT 100`}};return(0,jsx_runtime.jsx)(lemon_ui_src.Link,{to:urls.j.insightNew(void 0,void 0,JSON.stringify(query)),children:(0,jsx_runtime.jsx)("code",{children:schema.table.name})})}return(0,jsx_runtime.jsx)("div",{children:"Not yet synced"})}},{title:"Last Synced At",key:"last_synced_at",render:function Render(_,schema){return schema.last_synced_at?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(src.TZLabel,{time:schema.last_synced_at,formatDate:"MMM\xa0DD,\xa0YYYY",formatTime:"HH:mm"})}):null}},{title:"Rows Synced",key:"rows_synced",render:function Render(_,schema){var _schema$table$row_cou2;return null!==(_schema$table$row_cou2=schema.table?.row_count)&&void 0!==_schema$table$row_cou2?_schema$table$row_cou2:""}},{title:"Status",key:"status",render:function RenderStatus(_,schema){return schema.status?(0,jsx_runtime.jsx)(lemon_ui_src.LemonTag,{type:StatusTagSetting[schema.status]||"default",children:schema.status}):null}},{key:"actions",width:0,render:function RenderActions(_,schema){return schemaReloadingById[schema.id]?(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(lemon_ui_src.Spinner,{})}):(0,jsx_runtime.jsx)("div",{className:"flex flex-row justify-end",children:(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(More.T,{overlay:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(lemon_ui_src.LemonButton,{type:"tertiary",onClick:()=>{reloadSchema(schema)},children:"Reload"},`reload-data-warehouse-schema-${schema.id}`),schema.incremental&&(0,jsx_runtime.jsx)(lemon_ui_src.Tooltip,{title:"Completely resync incrementally loaded data. Only recommended if there is an issue with data quality in previously imported data",children:(0,jsx_runtime.jsx)(lemon_ui_src.LemonButton,{type:"tertiary",onClick:()=>{resyncSchema(schema)},status:"danger",children:"Resync"},`resync-data-warehouse-schema-${schema.id}`)})]})})})})}}]})}},"./frontend/src/scenes/data-warehouse/settings/dataWarehouseSettingsLogic.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>dataWarehouseSettingsLogic});var kea__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),kea_loaders__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/kea-loaders@3.0.0_kea@3.1.5/node_modules/kea-loaders/lib/index.js"),lib_api__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/lib/api.ts"),lib_lemon_ui_LemonToast_LemonToast__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./frontend/src/lib/lemon-ui/LemonToast/LemonToast.tsx"),scenes_sceneTypes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./frontend/src/scenes/sceneTypes.ts"),scenes_urls__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./frontend/src/scenes/urls.ts");let dataWarehouseSettingsLogic=(0,kea__WEBPACK_IMPORTED_MODULE_0__.kea)([(0,kea__WEBPACK_IMPORTED_MODULE_0__.path)(["scenes","data-warehouse","settings","dataWarehouseSettingsLogic"]),(0,kea__WEBPACK_IMPORTED_MODULE_0__.actions)({deleteSource:source=>({source}),reloadSource:source=>({source}),reloadSchema:schema=>({schema}),resyncSchema:schema=>({schema}),sourceLoadingFinished:source=>({source}),schemaLoadingFinished:schema=>({schema}),updateSchema:schema=>({schema}),abortAnyRunningQuery:!0}),(0,kea_loaders__WEBPACK_IMPORTED_MODULE_1__.loaders)(_ref=>{let{cache,actions,values}=_ref;return{dataWarehouseSources:[null,{loadSources:async(_,breakpoint)=>{await breakpoint(300),actions.abortAnyRunningQuery(),cache.abortController=new AbortController;let methodOptions={signal:cache.abortController.signal},res=await lib_api__WEBPACK_IMPORTED_MODULE_2__.ZP.externalDataSources.list(methodOptions);return breakpoint(),cache.abortController=null,res},updateSource:async source=>{let updatedSource=await lib_api__WEBPACK_IMPORTED_MODULE_2__.ZP.externalDataSources.update(source.id,source);return{...values.dataWarehouseSources,results:values.dataWarehouseSources?.results.map(s=>s.id===updatedSource.id?source:s)||[]}}}]}}),(0,kea__WEBPACK_IMPORTED_MODULE_0__.reducers)(_ref2=>{let{cache}=_ref2;return{dataWarehouseSourcesLoading:[!1,{loadSources:()=>!0,loadSourcesFailure:()=>null!==cache.abortController,loadSourcesSuccess:()=>null!==cache.abortController}],sourceReloadingById:[{},{reloadSource:(state,_ref3)=>{let{source}=_ref3;return{...state,[source.id]:!0}},deleteSource:(state,_ref4)=>{let{source}=_ref4;return{...state,[source.id]:!0}},sourceLoadingFinished:(state,_ref5)=>{let{source}=_ref5;return{...state,[source.id]:!1}}}],schemaReloadingById:[{},{reloadSchema:(state,_ref6)=>{let{schema}=_ref6;return{...state,[schema.id]:!0}},resyncSchema:(state,_ref7)=>{let{schema}=_ref7;return{...state,[schema.id]:!0}},schemaLoadingFinished:(state,_ref8)=>{let{schema}=_ref8;return{...state,[schema.id]:!1}}}]}}),(0,kea__WEBPACK_IMPORTED_MODULE_0__.selectors)({breadcrumbs:[()=>[],()=>[{key:scenes_sceneTypes__WEBPACK_IMPORTED_MODULE_4__.x.DataWarehouse,name:"Data Warehouse",path:scenes_urls__WEBPACK_IMPORTED_MODULE_5__.j.dataWarehouse()},{key:scenes_sceneTypes__WEBPACK_IMPORTED_MODULE_4__.x.DataWarehouseSettings,name:"Data Warehouse Settings",path:scenes_urls__WEBPACK_IMPORTED_MODULE_5__.j.dataWarehouseSettings()}]]}),(0,kea__WEBPACK_IMPORTED_MODULE_0__.listeners)(_ref9=>{let{actions,values,cache}=_ref9;return{loadSourcesSuccess:()=>{clearTimeout(cache.refreshTimeout),cache.refreshTimeout=setTimeout(()=>{actions.loadSources(null)},1e4)},loadSourcesFailure:()=>{clearTimeout(cache.refreshTimeout),cache.refreshTimeout=setTimeout(()=>{actions.loadSources(null)},1e4)},deleteSource:async _ref10=>{let{source}=_ref10;await lib_api__WEBPACK_IMPORTED_MODULE_2__.ZP.externalDataSources.delete(source.id),actions.loadSources(null),actions.sourceLoadingFinished(source)},reloadSource:async _ref11=>{var _values$dataWarehouse;let{source}=_ref11,clonedSources=JSON.parse(JSON.stringify(null!==(_values$dataWarehouse=values.dataWarehouseSources?.results)&&void 0!==_values$dataWarehouse?_values$dataWarehouse:[])),sourceIndex=clonedSources.findIndex(n=>n.id===source.id);clonedSources[sourceIndex].status="Running",clonedSources[sourceIndex].schemas=clonedSources[sourceIndex].schemas.map(n=>n.should_sync?{...n,status:"Running"}:n),actions.loadSourcesSuccess({...values.dataWarehouseSources,results:clonedSources});try{await lib_api__WEBPACK_IMPORTED_MODULE_2__.ZP.externalDataSources.reload(source.id),actions.loadSources(null)}catch(e){e.message?lib_lemon_ui_LemonToast_LemonToast__WEBPACK_IMPORTED_MODULE_3__.UJ.error(e.message):lib_lemon_ui_LemonToast_LemonToast__WEBPACK_IMPORTED_MODULE_3__.UJ.error("Cant refresh source at this time")}actions.sourceLoadingFinished(source)},reloadSchema:async _ref12=>{var _values$dataWarehouse2;let{schema}=_ref12,clonedSources=JSON.parse(JSON.stringify(null!==(_values$dataWarehouse2=values.dataWarehouseSources?.results)&&void 0!==_values$dataWarehouse2?_values$dataWarehouse2:[])),sourceIndex=clonedSources.findIndex(n=>n.schemas.find(m=>m.id===schema.id)),schemaIndex=clonedSources[sourceIndex].schemas.findIndex(n=>n.id===schema.id);clonedSources[sourceIndex].status="Running",clonedSources[sourceIndex].schemas[schemaIndex].status="Running",actions.loadSourcesSuccess({...values.dataWarehouseSources,results:clonedSources});try{await lib_api__WEBPACK_IMPORTED_MODULE_2__.ZP.externalDataSchemas.reload(schema.id),actions.schemaLoadingFinished(schema),actions.loadSources(null)}catch(e){e.message?lib_lemon_ui_LemonToast_LemonToast__WEBPACK_IMPORTED_MODULE_3__.UJ.error(e.message):lib_lemon_ui_LemonToast_LemonToast__WEBPACK_IMPORTED_MODULE_3__.UJ.error("Cant reload schema at this time")}},resyncSchema:async _ref13=>{var _values$dataWarehouse3;let{schema}=_ref13,clonedSources=JSON.parse(JSON.stringify(null!==(_values$dataWarehouse3=values.dataWarehouseSources?.results)&&void 0!==_values$dataWarehouse3?_values$dataWarehouse3:[])),sourceIndex=clonedSources.findIndex(n=>n.schemas.find(m=>m.id===schema.id)),schemaIndex=clonedSources[sourceIndex].schemas.findIndex(n=>n.id===schema.id);clonedSources[sourceIndex].status="Running",clonedSources[sourceIndex].schemas[schemaIndex].status="Running",actions.loadSourcesSuccess({...values.dataWarehouseSources,results:clonedSources});try{await lib_api__WEBPACK_IMPORTED_MODULE_2__.ZP.externalDataSchemas.resync(schema.id),actions.schemaLoadingFinished(schema),actions.loadSources(null)}catch(e){e.message?lib_lemon_ui_LemonToast_LemonToast__WEBPACK_IMPORTED_MODULE_3__.UJ.error(e.message):lib_lemon_ui_LemonToast_LemonToast__WEBPACK_IMPORTED_MODULE_3__.UJ.error("Cant refresh schema at this time")}},updateSchema:async _ref14=>{var _values$dataWarehouse4;let{schema}=_ref14,clonedSources=JSON.parse(JSON.stringify(null!==(_values$dataWarehouse4=values.dataWarehouseSources?.results)&&void 0!==_values$dataWarehouse4?_values$dataWarehouse4:[])),sourceIndex=clonedSources.findIndex(n=>n.schemas.find(m=>m.id===schema.id)),schemaIndex=clonedSources[sourceIndex].schemas.findIndex(n=>n.id===schema.id);clonedSources[sourceIndex].schemas[schemaIndex]=schema,actions.loadSourcesSuccess({...values.dataWarehouseSources,results:clonedSources}),await lib_api__WEBPACK_IMPORTED_MODULE_2__.ZP.externalDataSchemas.update(schema.id,schema),actions.loadSources(null)},abortAnyRunningQuery:()=>{cache.abortController&&(cache.abortController.abort(),cache.abortController=null)}}}),(0,kea__WEBPACK_IMPORTED_MODULE_0__.afterMount)(_ref15=>{let{actions}=_ref15;actions.loadSources(null)})])}}]);