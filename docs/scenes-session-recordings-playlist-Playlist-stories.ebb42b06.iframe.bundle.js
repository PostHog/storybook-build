"use strict";(self.webpackChunk_posthog_frontend=self.webpackChunk_posthog_frontend||[]).push([[10586],{"./src/scenes/session-recordings/playlist/Playlist.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,MultipleSections:()=>MultipleSections,WithFooter:()=>WithFooter,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lib_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/lib/utils.tsx"),_Playlist__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/scenes/session-recordings/playlist/Playlist.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Components/Playlist",component:_Playlist__WEBPACK_IMPORTED_MODULE_1__.g},ListItem=_ref=>{let{item}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:"p-1",children:["Object ",item.id]})},Template=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"h-96 min-w-[40rem]",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Playlist__WEBPACK_IMPORTED_MODULE_1__.g,{title:"Title",sections:[],listEmptyState:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:"No items"}),content:_ref2=>{let{activeItem}=_ref2;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"flex items-center justify-center h-full",children:activeItem?`Object ${activeItem.id} selected`:"Select an item from the list"})},...props})}),Default=Template.bind({});Default.args={sections:[{key:"default",title:"Default section",items:(0,lib_utils__WEBPACK_IMPORTED_MODULE_0__.w6)(0,100).map(idx=>({id:idx})),render:ListItem}]};let MultipleSections=Template.bind({});MultipleSections.args={sections:[{key:"one",title:"First section",items:(0,lib_utils__WEBPACK_IMPORTED_MODULE_0__.w6)(0,5).map(idx=>({id:idx})),render:ListItem,initiallyOpen:!0},{key:"two",title:"Second section",items:(0,lib_utils__WEBPACK_IMPORTED_MODULE_0__.w6)(0,5).map(idx=>({id:idx})),render:ListItem}]};let WithFooter=Template.bind({});WithFooter.args={sections:[{key:"default",title:"Section with footer",items:(0,lib_utils__WEBPACK_IMPORTED_MODULE_0__.w6)(0,100).map(idx=>({id:idx})),render:ListItem,footer:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"px-1 py-3",children:"Section footer"})}]},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(props: Partial<PlaylistProps>) => {\n  const mainContent = ({\n    activeItem\n  }: {\n    activeItem: SessionRecordingType;\n  }): JSX.Element => <div className="flex items-center justify-center h-full">\n            {activeItem ? `Object ${activeItem.id} selected` : \'Select an item from the list\'}\n        </div>;\n  return <div className="h-96 min-w-[40rem]">\n            <Playlist title="Title" sections={[]} listEmptyState={<div>No items</div>} content={mainContent} {...props} />\n        </div>;\n}',...Default.parameters?.docs?.source}}},MultipleSections.parameters={...MultipleSections.parameters,docs:{...MultipleSections.parameters?.docs,source:{originalSource:'(props: Partial<PlaylistProps>) => {\n  const mainContent = ({\n    activeItem\n  }: {\n    activeItem: SessionRecordingType;\n  }): JSX.Element => <div className="flex items-center justify-center h-full">\n            {activeItem ? `Object ${activeItem.id} selected` : \'Select an item from the list\'}\n        </div>;\n  return <div className="h-96 min-w-[40rem]">\n            <Playlist title="Title" sections={[]} listEmptyState={<div>No items</div>} content={mainContent} {...props} />\n        </div>;\n}',...MultipleSections.parameters?.docs?.source}}},WithFooter.parameters={...WithFooter.parameters,docs:{...WithFooter.parameters?.docs,source:{originalSource:'(props: Partial<PlaylistProps>) => {\n  const mainContent = ({\n    activeItem\n  }: {\n    activeItem: SessionRecordingType;\n  }): JSX.Element => <div className="flex items-center justify-center h-full">\n            {activeItem ? `Object ${activeItem.id} selected` : \'Select an item from the list\'}\n        </div>;\n  return <div className="h-96 min-w-[40rem]">\n            <Playlist title="Title" sections={[]} listEmptyState={<div>No items</div>} content={mainContent} {...props} />\n        </div>;\n}',...WithFooter.parameters?.docs?.source}}};let __namedExportsOrder=["Default","MultipleSections","WithFooter"]}}]);