"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[18569],{"./frontend/src/scenes/batch_exports/BatchExports.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CreateExport:()=>CreateExport,Exports:()=>Exports,ViewExport:()=>ViewExport,__namedExportsOrder:()=>__namedExportsOrder,default:()=>BatchExports_stories});var lib=__webpack_require__("./node_modules/.pnpm/kea-router@3.1.4_kea@3.1.5/node_modules/kea-router/lib/index.js"),react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),App=__webpack_require__("./frontend/src/scenes/App.tsx"),urls=__webpack_require__("./frontend/src/scenes/urls.ts"),browser=__webpack_require__("./frontend/src/mocks/browser.tsx"),features=__webpack_require__("./frontend/src/mocks/features.ts"),types=__webpack_require__("./frontend/src/types.ts"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let BatchExports_stories={title:"Scenes-App/BatchExports",parameters:{layout:"fullscreen",options:{showPanel:!1},testOptions:{waitForLoadersToDisappear:!0},mockDate:"2023-02-01",viewMode:"story"},decorators:[(0,browser.x8)(function(){let exports=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{exports,handlers:{get:{"/api/projects/:team_id/groups_types/":[],"/api/projects/:team_id/batch_exports/":(_req,res,ctx)=>res(ctx.delay(1e3),ctx.json({results:Object.values(exports)})),"/api/projects/:team_id/batch_exports/:export_id":(req,res,ctx)=>{let id=req.params.export_id;return res(ctx.delay(1e3),ctx.json(exports[id]))},"/api/projects/:team_id/batch_exports/:export_id/runs":(req,res,ctx)=>{var _exports$id$latest_ru;let id=req.params.export_id;return res(ctx.delay(1e3),ctx.json({results:null!==(_exports$id$latest_ru=exports[id]?.latest_runs)&&void 0!==_exports$id$latest_ru?_exports$id$latest_ru:[]}))}},post:{"/api/projects/:team_id/batch_exports/":(req,res,ctx)=>{let body=req.body,id=(Object.keys(exports).length+1).toString();return exports[id]={...body,id:id,team_id:1,status:"RUNNING",paused:!1,created_at:new Date().toISOString(),last_updated_at:new Date().toISOString()},res(ctx.delay(1e3),ctx.json(exports[id]))},"/api/projects/:team_id/batch_exports/:export_id/pause/":(req,res,ctx)=>{let id=req.params.export_id;return exports[id].paused=!0,res(ctx.delay(1e3),ctx.json(exports[id]))},"/api/projects/:team_id/batch_exports/:export_id/unpause/":(req,res,ctx)=>{let id=req.params.export_id;return exports[id].paused=!1,res(ctx.delay(1e3),ctx.json(exports[id]))}},delete:{"/api/projects/:team_id/batch_exports/:export_id":(req,res,ctx)=>{let id=req.params.export_id;return delete exports[id],res(ctx.delay(1e3))}}}}}({1:{id:"1",team_id:1,name:"My S3 Exporter",destination:{type:"S3",config:{bucket_name:"my-bucket",region:"us-east-1",prefix:"my-prefix",aws_access_key_id:"my-access-key-id",aws_secret_access_key:"",endpoint_url:null,compression:null,exclude_events:[],include_events:[],encryption:null,kms_key_id:null}},start_at:null,end_at:null,interval:"hour",paused:!1,created_at:"2021-09-01T00:00:00.000000Z",latest_runs:[{id:"4",status:"Running",created_at:"2023-01-01T12:00:00Z",data_interval_start:"2023-01-01T05:00:00Z",data_interval_end:"2023-01-01T06:00:00Z"},{id:"3",status:"Failed",created_at:"2023-01-01T12:00:00Z",data_interval_start:"2023-01-01T03:00:00Z",data_interval_end:"2023-01-01T04:00:00Z"},{id:"2",status:"Completed",created_at:"2023-01-01T12:00:00Z",data_interval_start:"2023-01-01T01:00:00Z",data_interval_end:"2023-01-01T02:00:00Z"},{id:"1",status:"Completed",created_at:"2023-01-01T12:00:00Z",data_interval_start:"2023-01-01T00:00:00Z",data_interval_end:"2023-01-01T01:00:00Z"}]}}).handlers)]},Exports=()=>((0,features.y)([types.P$.DATA_PIPELINES]),(0,react.useEffect)(()=>{lib.router.actions.push(urls.j.batchExports())}),(0,jsx_runtime.jsx)(App.g,{}));Exports.parameters={testOptions:{waitForSelector:".BatchExportRunIcon"}};let CreateExport=()=>((0,features.y)([types.P$.DATA_PIPELINES]),(0,react.useEffect)(()=>{lib.router.actions.push(urls.j.batchExportNew())}),(0,jsx_runtime.jsx)(App.g,{})),ViewExport=()=>((0,features.y)([types.P$.DATA_PIPELINES]),(0,react.useEffect)(()=>{lib.router.actions.push(urls.j.batchExport("1"))}),(0,jsx_runtime.jsx)(App.g,{}));ViewExport.parameters={testOptions:{waitForSelector:".LemonTable"}},Exports.parameters={...Exports.parameters,docs:{...Exports.parameters?.docs,source:{originalSource:"() => {\n  useAvailableFeatures([AvailableFeature.DATA_PIPELINES]);\n  useEffect(() => {\n    router.actions.push(urls.batchExports());\n  });\n  return <App />;\n}",...Exports.parameters?.docs?.source}}},CreateExport.parameters={...CreateExport.parameters,docs:{...CreateExport.parameters?.docs,source:{originalSource:"() => {\n  useAvailableFeatures([AvailableFeature.DATA_PIPELINES]);\n  useEffect(() => {\n    router.actions.push(urls.batchExportNew());\n  });\n  return <App />;\n}",...CreateExport.parameters?.docs?.source}}},ViewExport.parameters={...ViewExport.parameters,docs:{...ViewExport.parameters?.docs,source:{originalSource:"() => {\n  useAvailableFeatures([AvailableFeature.DATA_PIPELINES]);\n  useEffect(() => {\n    router.actions.push(urls.batchExport('1'));\n  });\n  return <App />;\n}",...ViewExport.parameters?.docs?.source}}};let __namedExportsOrder=["Exports","CreateExport","ViewExport"]}}]);