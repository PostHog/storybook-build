"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[7297],{"./frontend/src/lib/lemon-ui/colors.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColorPalette:function(){return ColorPalette}});var _Popover_Popover__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/lib/lemon-ui/Popover/Popover.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Lemon UI/Colors",parameters:{docs:{description:{component:"Colors can be used in a variety of ways"}}},tags:["autodocs"]};const colorGroups={primary:["primary-highlight","primary-light","primary","primary-dark"],danger:["danger-highlight","danger-light","danger","danger-dark"],warning:["warning-highlight","warning-light","warning","warning-dark"],success:["success-highlight","success-light","success","success-dark"],"primary-alt":["primary-alt-highlight","primary-alt","primary-alt-dark"],"default (primary text)":["default","default-dark"],"muted (secondary text)":["muted","muted-dark"],"muted-alt ":["muted-alt","muted-alt-dark"],border:["border","border-light","border-bold","border-active"],light:["white","light"]};function ColorPalette(){const[hover,setHover]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"flex gap-4 flex-wrap items-start",children:Object.keys(colorGroups).map((group=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:"flex flex-col",style:{width:150,height:200},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"font-bold text-ellipsis mb-2",children:group}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rounded-lg overflow-hidden flex flex-col flex-1",children:colorGroups[group].map((color=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Popover_Popover__WEBPACK_IMPORTED_MODULE_0__.J2,{visible:hover===color,placement:"right",overlay:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("h3",{children:color})}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:`bg-${color} flex-1`,onMouseEnter:()=>setHover(color)})},color)))})]},group)))})}ColorPalette.parameters={...ColorPalette.parameters,docs:{...ColorPalette.parameters?.docs,source:{originalSource:'function ColorPalette(): JSX.Element {\n  const [hover, setHover] = useState<string>();\n  return <div className="flex gap-4 flex-wrap items-start">\n            {Object.keys(colorGroups).map(group => <div key={group} className="flex flex-col" style={{\n      width: 150,\n      height: 200\n    }}>\n                    <div className="font-bold text-ellipsis mb-2">{group}</div>\n                    <div className="rounded-lg overflow-hidden flex flex-col flex-1">\n                        {colorGroups[group].map((color: string) => <Popover key={color} visible={hover === color} placement="right" overlay={<>\n                                        <h3>{color}</h3>\n                                    </>}>\n                                <div className={`bg-${color} flex-1`} onMouseEnter={() => setHover(color)} />\n                            </Popover>)}\n                    </div>\n                </div>)}\n        </div>;\n}',...ColorPalette.parameters?.docs?.source}}}}}]);