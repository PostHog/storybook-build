"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[40961],{"../../frontend/src/scenes/insights/InsightTooltip/InsightTooltip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Columns:()=>Columns,Default:()=>Default,InWrapper:()=>InWrapper,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var kea__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),lib_components_SeriesGlyph__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/lib/components/SeriesGlyph.tsx"),lib_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/lib/utils.tsx"),_models_cohortsModel__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../frontend/src/models/cohortsModel.ts"),_InsightTooltip__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../frontend/src/scenes/insights/InsightTooltip/InsightTooltip.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let data={date:"2022-08-31",timezone:"UTC",seriesData:[{id:0,dataIndex:7,datasetIndex:2,dotted:!0,action:{id:"$pageview",type:"events",order:0,name:"$pageview",custom_name:"Pageview of people with very long names like this text",math:"dau",math_property:null,math_group_type_index:null,properties:{}},label:"$pageview",color:"#1d4aff",count:1},{id:1,dataIndex:7,datasetIndex:3,dotted:!0,action:{id:"filter added",type:"events",order:1,name:"filter added",custom_name:null,math:null,math_property:null,math_group_type_index:null,properties:{}},label:"filter added",color:"#621da6",count:1}]},__WEBPACK_DEFAULT_EXPORT__={title:"Components/InsightTooltip",component:_InsightTooltip__WEBPACK_IMPORTED_MODULE_4__.Q,args:{date:data.date,timezone:data.timezone,seriesData:data.seriesData,hideColorCol:!1,renderCount:value=>`${value}`,renderSeries:value=>value,groupTypeLabel:"people"},tags:["test-skip"]},BasicTemplate=props=>((0,kea__WEBPACK_IMPORTED_MODULE_0__.useMountedLogic)(_models_cohortsModel__WEBPACK_IMPORTED_MODULE_3__.Qo),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_InsightTooltip__WEBPACK_IMPORTED_MODULE_4__.Q,{...props})),Default=BasicTemplate.bind({});Default.args={};let Columns=BasicTemplate.bind({});function InWrapper(){return(0,kea__WEBPACK_IMPORTED_MODULE_0__.useMountedLogic)(_models_cohortsModel__WEBPACK_IMPORTED_MODULE_3__.Qo),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"min-h-50",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"InsightTooltipWrapper",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_InsightTooltip__WEBPACK_IMPORTED_MODULE_4__.Q,{date:data.date,timezone:data.timezone,seriesData:data.seriesData,renderCount:value=>(0,lib_utils__WEBPACK_IMPORTED_MODULE_2__.Lc)(value),renderSeries:(value,datum)=>{var _datum$action$order;let hasBreakdown=void 0!==datum.breakdown_value&&!!datum.breakdown_value;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{className:"datum-label-column",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(lib_components_SeriesGlyph__WEBPACK_IMPORTED_MODULE_1__.rF,{className:"mr-2",hasBreakdown:hasBreakdown,seriesIndex:null!==(_datum$action$order=datum?.action?.order)&&void 0!==_datum$action$order?_datum$action$order:datum.id,seriesColor:datum.color}),value]})},groupTypeLabel:"people"})})})}Columns.args={formula:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(props: InsightTooltipProps) => {\n  useMountedLogic(cohortsModel);\n  return <InsightTooltip {...props} />;\n}",...Default.parameters?.docs?.source}}},Columns.parameters={...Columns.parameters,docs:{...Columns.parameters?.docs,source:{originalSource:"(props: InsightTooltipProps) => {\n  useMountedLogic(cohortsModel);\n  return <InsightTooltip {...props} />;\n}",...Columns.parameters?.docs?.source}}},InWrapper.parameters={...InWrapper.parameters,docs:{...InWrapper.parameters?.docs,source:{originalSource:'function InWrapper(): JSX.Element {\n  useMountedLogic(cohortsModel);\n  return <div className="min-h-50">\n            <div className="InsightTooltipWrapper">\n                <InsightTooltip date={data.date} timezone={data.timezone} seriesData={data.seriesData as any} renderCount={(value: number): string => humanFriendlyNumber(value)} renderSeries={(value, datum) => {\n        const hasBreakdown = datum.breakdown_value !== undefined && !!datum.breakdown_value;\n        return <div className="datum-label-column">\n                                <SeriesLetter className="mr-2" hasBreakdown={hasBreakdown} seriesIndex={datum?.action?.order ?? datum.id} seriesColor={datum.color} />\n                                {value}\n                            </div>;\n      }} groupTypeLabel="people" />\n            </div>\n        </div>;\n}',...InWrapper.parameters?.docs?.source}}};let __namedExportsOrder=["Default","Columns","InWrapper"]}}]);