"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[57592],{"./frontend/src/scenes/notebooks/NotebookCommentButton/NotebookCommentButton.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},WithNoExistingNotebooks:function(){return WithNoExistingNotebooks},WithSlowNetworkResponse:function(){return WithSlowNetworkResponse}});var scenes_notebooks_NotebookCommentButton_NotebookCommentButton__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./frontend/src/scenes/notebooks/NotebookCommentButton/NotebookCommentButton.tsx"),_mocks_browser__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/mocks/browser.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Scenes-App/Notebooks/Components/Notebook Comment Button",component:scenes_notebooks_NotebookCommentButton_NotebookCommentButton__WEBPACK_IMPORTED_MODULE_0__.h};const Template=props=>((0,_mocks_browser__WEBPACK_IMPORTED_MODULE_1__.ok)({get:{"/api/projects/:team_id/notebooks/":(req,res,ctx)=>{const contains=req.url.searchParams.get("contains"),sessionRecordingId=contains?.split(":")[1];return res(ctx.delay("very_slow"===sessionRecordingId?"infinite":100),ctx.status(200),ctx.json({results:"123"===sessionRecordingId?[{title:"my amazing notebook"},{title:"and another amazing notebook"}]:[]}))}}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"min-h-50",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(scenes_notebooks_NotebookCommentButton_NotebookCommentButton__WEBPACK_IMPORTED_MODULE_0__.h,{sessionRecordingId:props.sessionRecordingId,getCurrentPlayerTime:()=>0,visible:!0})})),Default=Template.bind({});Default.args={sessionRecordingId:"123"};const WithSlowNetworkResponse=Template.bind({});WithSlowNetworkResponse.args={sessionRecordingId:"very_slow"};const WithNoExistingNotebooks=Template.bind({});WithNoExistingNotebooks.args={sessionRecordingId:"not_already_in_use"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        return res(ctx.delay(sessionRecordingId === 'very_slow' ? 'infinite' : 100), ctx.status(200), ctx.json({\n          results: sessionRecordingId === '123' ? [{\n            title: 'my amazing notebook'\n          }, {\n            title: 'and another amazing notebook'\n          }] : []\n        }));\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className={'min-h-50'}>\n            <NotebookCommentButton sessionRecordingId={props.sessionRecordingId} getCurrentPlayerTime={() => 0} visible={true} />\n        </div>\n  );\n}",...Default.parameters?.docs?.source}}},WithSlowNetworkResponse.parameters={...WithSlowNetworkResponse.parameters,docs:{...WithSlowNetworkResponse.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        return res(ctx.delay(sessionRecordingId === 'very_slow' ? 'infinite' : 100), ctx.status(200), ctx.json({\n          results: sessionRecordingId === '123' ? [{\n            title: 'my amazing notebook'\n          }, {\n            title: 'and another amazing notebook'\n          }] : []\n        }));\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className={'min-h-50'}>\n            <NotebookCommentButton sessionRecordingId={props.sessionRecordingId} getCurrentPlayerTime={() => 0} visible={true} />\n        </div>\n  );\n}",...WithSlowNetworkResponse.parameters?.docs?.source}}},WithNoExistingNotebooks.parameters={...WithNoExistingNotebooks.parameters,docs:{...WithNoExistingNotebooks.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        return res(ctx.delay(sessionRecordingId === 'very_slow' ? 'infinite' : 100), ctx.status(200), ctx.json({\n          results: sessionRecordingId === '123' ? [{\n            title: 'my amazing notebook'\n          }, {\n            title: 'and another amazing notebook'\n          }] : []\n        }));\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className={'min-h-50'}>\n            <NotebookCommentButton sessionRecordingId={props.sessionRecordingId} getCurrentPlayerTime={() => 0} visible={true} />\n        </div>\n  );\n}",...WithNoExistingNotebooks.parameters?.docs?.source}}}}}]);