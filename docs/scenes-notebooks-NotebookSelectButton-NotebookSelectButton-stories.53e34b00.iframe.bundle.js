"use strict";(self.webpackChunk_posthog_storybook=self.webpackChunk_posthog_storybook||[]).push([[93070],{"../../frontend/src/scenes/notebooks/NotebookSelectButton/NotebookSelectButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ClosedPopoverState:()=>ClosedPopoverState,Default:()=>Default,WithNoExistingContainingNotebooks:()=>WithNoExistingContainingNotebooks,WithNoNotebooks:()=>WithNoNotebooks,WithSlowNetworkResponse:()=>WithSlowNetworkResponse,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var scenes_notebooks_NotebookSelectButton_NotebookSelectButton__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../frontend/src/scenes/notebooks/NotebookSelectButton/NotebookSelectButton.tsx"),_mocks_browser__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../frontend/src/mocks/browser.tsx"),_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../frontend/src/types.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"Scenes-App/Notebooks/Components/Notebook Select Button",component:scenes_notebooks_NotebookSelectButton_NotebookSelectButton__WEBPACK_IMPORTED_MODULE_0__.R},allNotebooks=[{title:"my amazing notebook",short_id:"abc",created_by:{first_name:"Ben",email:"ben@posthog.com"}},{title:"and another amazing notebook",short_id:"def",created_by:{first_name:"Paul",email:"paul@posthog.com"}},{title:"an empty notebook",short_id:"ghi",created_by:{first_name:"David",email:"david@posthog.com"}}],Template=props=>((0,_mocks_browser__WEBPACK_IMPORTED_MODULE_1__.ok)({get:{"/api/projects/:team_id/notebooks/":(req,res,ctx)=>{let contains=req.url.searchParams.get("contains"),sessionRecordingId=contains?.split(":")[1];return null==contains&&void 0===sessionRecordingId?[200,{count:3,results:allNotebooks}]:"there_are_no_notebooks"===sessionRecordingId?[200,{count:0,results:[]}]:"not_already_contained"===sessionRecordingId?[200,{count:2,results:allNotebooks.slice(2)}]:"very_slow"===sessionRecordingId?res(ctx.delay("infinite"),ctx.status(200),ctx.json({count:0,results:[]})):void 0}}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"min-h-100",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(scenes_notebooks_NotebookSelectButton_NotebookSelectButton__WEBPACK_IMPORTED_MODULE_0__.R,{resource:props.resource,visible:props.visible})})),Default=Template.bind({});Default.args={resource:{type:_types__WEBPACK_IMPORTED_MODULE_2__.Cz.Recording,attrs:{id:"123"}},visible:!0};let ClosedPopoverState=Template.bind({});ClosedPopoverState.args={resource:{type:_types__WEBPACK_IMPORTED_MODULE_2__.Cz.Recording,attrs:{id:"123"}},visible:!1};let WithSlowNetworkResponse=Template.bind({});WithSlowNetworkResponse.args={resource:{type:_types__WEBPACK_IMPORTED_MODULE_2__.Cz.Recording,attrs:{id:"very_slow"}},visible:!0};let WithNoExistingContainingNotebooks=Template.bind({});WithNoExistingContainingNotebooks.args={resource:{type:_types__WEBPACK_IMPORTED_MODULE_2__.Cz.Recording,attrs:{id:"not_already_contained"}},visible:!0};let WithNoNotebooks=Template.bind({});WithNoNotebooks.args={resource:{type:_types__WEBPACK_IMPORTED_MODULE_2__.Cz.Recording,attrs:{id:"there_are_no_notebooks"}},visible:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        const unfiltered = contains == null && sessionRecordingId === undefined;\n        if (unfiltered) {\n          return [200, {\n            count: 3,\n            results: allNotebooks\n          }];\n        }\n        if (sessionRecordingId === 'there_are_no_notebooks') {\n          return [200, {\n            count: 0,\n            results: []\n          }];\n        }\n        if (sessionRecordingId === 'not_already_contained') {\n          return [200, {\n            count: 2,\n            results: allNotebooks.slice(2)\n          }];\n        }\n        if (sessionRecordingId === 'very_slow') {\n          return res(ctx.delay('infinite'), ctx.status(200), ctx.json({\n            count: 0,\n            results: []\n          }));\n        }\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className=\"min-h-100\">\n            <NotebookSelectButton resource={props.resource} visible={props.visible} />\n        </div>\n  );\n}",...Default.parameters?.docs?.source}}},ClosedPopoverState.parameters={...ClosedPopoverState.parameters,docs:{...ClosedPopoverState.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        const unfiltered = contains == null && sessionRecordingId === undefined;\n        if (unfiltered) {\n          return [200, {\n            count: 3,\n            results: allNotebooks\n          }];\n        }\n        if (sessionRecordingId === 'there_are_no_notebooks') {\n          return [200, {\n            count: 0,\n            results: []\n          }];\n        }\n        if (sessionRecordingId === 'not_already_contained') {\n          return [200, {\n            count: 2,\n            results: allNotebooks.slice(2)\n          }];\n        }\n        if (sessionRecordingId === 'very_slow') {\n          return res(ctx.delay('infinite'), ctx.status(200), ctx.json({\n            count: 0,\n            results: []\n          }));\n        }\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className=\"min-h-100\">\n            <NotebookSelectButton resource={props.resource} visible={props.visible} />\n        </div>\n  );\n}",...ClosedPopoverState.parameters?.docs?.source}}},WithSlowNetworkResponse.parameters={...WithSlowNetworkResponse.parameters,docs:{...WithSlowNetworkResponse.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        const unfiltered = contains == null && sessionRecordingId === undefined;\n        if (unfiltered) {\n          return [200, {\n            count: 3,\n            results: allNotebooks\n          }];\n        }\n        if (sessionRecordingId === 'there_are_no_notebooks') {\n          return [200, {\n            count: 0,\n            results: []\n          }];\n        }\n        if (sessionRecordingId === 'not_already_contained') {\n          return [200, {\n            count: 2,\n            results: allNotebooks.slice(2)\n          }];\n        }\n        if (sessionRecordingId === 'very_slow') {\n          return res(ctx.delay('infinite'), ctx.status(200), ctx.json({\n            count: 0,\n            results: []\n          }));\n        }\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className=\"min-h-100\">\n            <NotebookSelectButton resource={props.resource} visible={props.visible} />\n        </div>\n  );\n}",...WithSlowNetworkResponse.parameters?.docs?.source}}},WithNoExistingContainingNotebooks.parameters={...WithNoExistingContainingNotebooks.parameters,docs:{...WithNoExistingContainingNotebooks.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        const unfiltered = contains == null && sessionRecordingId === undefined;\n        if (unfiltered) {\n          return [200, {\n            count: 3,\n            results: allNotebooks\n          }];\n        }\n        if (sessionRecordingId === 'there_are_no_notebooks') {\n          return [200, {\n            count: 0,\n            results: []\n          }];\n        }\n        if (sessionRecordingId === 'not_already_contained') {\n          return [200, {\n            count: 2,\n            results: allNotebooks.slice(2)\n          }];\n        }\n        if (sessionRecordingId === 'very_slow') {\n          return res(ctx.delay('infinite'), ctx.status(200), ctx.json({\n            count: 0,\n            results: []\n          }));\n        }\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className=\"min-h-100\">\n            <NotebookSelectButton resource={props.resource} visible={props.visible} />\n        </div>\n  );\n}",...WithNoExistingContainingNotebooks.parameters?.docs?.source}}},WithNoNotebooks.parameters={...WithNoNotebooks.parameters,docs:{...WithNoNotebooks.parameters?.docs,source:{originalSource:"props => {\n  useStorybookMocks({\n    get: {\n      '/api/projects/:team_id/notebooks/': (req, res, ctx) => {\n        const contains = req.url.searchParams.get('contains');\n        const sessionRecordingId = contains?.split(':')[1];\n        const unfiltered = contains == null && sessionRecordingId === undefined;\n        if (unfiltered) {\n          return [200, {\n            count: 3,\n            results: allNotebooks\n          }];\n        }\n        if (sessionRecordingId === 'there_are_no_notebooks') {\n          return [200, {\n            count: 0,\n            results: []\n          }];\n        }\n        if (sessionRecordingId === 'not_already_contained') {\n          return [200, {\n            count: 2,\n            results: allNotebooks.slice(2)\n          }];\n        }\n        if (sessionRecordingId === 'very_slow') {\n          return res(ctx.delay('infinite'), ctx.status(200), ctx.json({\n            count: 0,\n            results: []\n          }));\n        }\n      }\n    }\n  });\n  return (\n    // the button has its dropdown showing and so needs a container that will include the pop-over\n    <div className=\"min-h-100\">\n            <NotebookSelectButton resource={props.resource} visible={props.visible} />\n        </div>\n  );\n}",...WithNoNotebooks.parameters?.docs?.source}}};let __namedExportsOrder=["Default","ClosedPopoverState","WithSlowNetworkResponse","WithNoExistingContainingNotebooks","WithNoNotebooks"]}}]);