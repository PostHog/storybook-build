"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[6795],{"./frontend/src/scenes/cohorts/CohortFilters/CohortSelectorField.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActorsSelector:function(){return ActorsSelector},AggregationSelector:function(){return AggregationSelector},BehavioralSelector:function(){return BehavioralSelector},DateOperatorSelector:function(){return DateOperatorSelector},MathOperatorSelector:function(){return MathOperatorSelector},TimeUnitSelector:function(){return TimeUnitSelector},ValueOptionSelector:function(){return ValueOptionSelector}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/index.js"),_CohortField__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./frontend/src/scenes/cohorts/CohortFilters/CohortField.tsx"),scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./frontend/src/scenes/cohorts/CohortFilters/types.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/jsx-runtime.js");const meta={title:"Filters/Cohort Filters/Fields/Select",component:_CohortField__WEBPACK_IMPORTED_MODULE_1__.Y4};__webpack_exports__.default=meta;const Template=props=>{var _Object$keys$,_props$fieldOptionGro;const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null!==(_Object$keys$=Object.keys(null!==(_props$fieldOptionGro=props.fieldOptionGroupTypes?.[0])&&void 0!==_props$fieldOptionGro?_props$fieldOptionGro:{})?.[0])&&void 0!==_Object$keys$?_Object$keys$:null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_CohortField__WEBPACK_IMPORTED_MODULE_1__.Y4,{...props,fieldKey:"key",criteria:{key:value},onChange:newCriteria=>setValue(newCriteria.key)})},AggregationSelector=Template.bind({});AggregationSelector.args={fieldOptionGroupTypes:[scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.EventAggregation,scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.PropertyAggregation],placeholder:"Choose"};const ActorsSelector=Template.bind({});ActorsSelector.args={fieldOptionGroupTypes:[scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.Actors],placeholder:"Choose"};const BehavioralSelector=Template.bind({});BehavioralSelector.args={fieldOptionGroupTypes:[scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.EventBehavioral,scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.PersonPropertyBehavioral,scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.CohortBehavioral,scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.LifecycleBehavioral],placeholder:"Choose"};const TimeUnitSelector=Template.bind({});TimeUnitSelector.args={fieldOptionGroupTypes:[scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.TimeUnits],placeholder:"Choose"};const DateOperatorSelector=Template.bind({});DateOperatorSelector.args={fieldOptionGroupTypes:[scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.DateOperators],placeholder:"Choose"};const MathOperatorSelector=Template.bind({});MathOperatorSelector.args={fieldOptionGroupTypes:[scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.MathOperators],placeholder:"Choose"};const ValueOptionSelector=Template.bind({});ValueOptionSelector.args={fieldOptionGroupTypes:[scenes_cohorts_CohortFilters_types__WEBPACK_IMPORTED_MODULE_2__.Wy.ValueOptions],placeholder:"Choose"},AggregationSelector.parameters={...AggregationSelector.parameters,docs:{...AggregationSelector.parameters?.docs,source:{originalSource:'(props: CohortSelectorFieldProps) => {\n  const [value, setValue] = useState<string | undefined>(Object.keys(props.fieldOptionGroupTypes?.[0] ?? {})?.[0] ?? null);\n  return <CohortSelectorField {...props} fieldKey="key" criteria={{\n    key: value\n  }} onChange={newCriteria => setValue(newCriteria.key)} />;\n}',...AggregationSelector.parameters?.docs?.source}}},ActorsSelector.parameters={...ActorsSelector.parameters,docs:{...ActorsSelector.parameters?.docs,source:{originalSource:'(props: CohortSelectorFieldProps) => {\n  const [value, setValue] = useState<string | undefined>(Object.keys(props.fieldOptionGroupTypes?.[0] ?? {})?.[0] ?? null);\n  return <CohortSelectorField {...props} fieldKey="key" criteria={{\n    key: value\n  }} onChange={newCriteria => setValue(newCriteria.key)} />;\n}',...ActorsSelector.parameters?.docs?.source}}},BehavioralSelector.parameters={...BehavioralSelector.parameters,docs:{...BehavioralSelector.parameters?.docs,source:{originalSource:'(props: CohortSelectorFieldProps) => {\n  const [value, setValue] = useState<string | undefined>(Object.keys(props.fieldOptionGroupTypes?.[0] ?? {})?.[0] ?? null);\n  return <CohortSelectorField {...props} fieldKey="key" criteria={{\n    key: value\n  }} onChange={newCriteria => setValue(newCriteria.key)} />;\n}',...BehavioralSelector.parameters?.docs?.source}}},TimeUnitSelector.parameters={...TimeUnitSelector.parameters,docs:{...TimeUnitSelector.parameters?.docs,source:{originalSource:'(props: CohortSelectorFieldProps) => {\n  const [value, setValue] = useState<string | undefined>(Object.keys(props.fieldOptionGroupTypes?.[0] ?? {})?.[0] ?? null);\n  return <CohortSelectorField {...props} fieldKey="key" criteria={{\n    key: value\n  }} onChange={newCriteria => setValue(newCriteria.key)} />;\n}',...TimeUnitSelector.parameters?.docs?.source}}},DateOperatorSelector.parameters={...DateOperatorSelector.parameters,docs:{...DateOperatorSelector.parameters?.docs,source:{originalSource:'(props: CohortSelectorFieldProps) => {\n  const [value, setValue] = useState<string | undefined>(Object.keys(props.fieldOptionGroupTypes?.[0] ?? {})?.[0] ?? null);\n  return <CohortSelectorField {...props} fieldKey="key" criteria={{\n    key: value\n  }} onChange={newCriteria => setValue(newCriteria.key)} />;\n}',...DateOperatorSelector.parameters?.docs?.source}}},MathOperatorSelector.parameters={...MathOperatorSelector.parameters,docs:{...MathOperatorSelector.parameters?.docs,source:{originalSource:'(props: CohortSelectorFieldProps) => {\n  const [value, setValue] = useState<string | undefined>(Object.keys(props.fieldOptionGroupTypes?.[0] ?? {})?.[0] ?? null);\n  return <CohortSelectorField {...props} fieldKey="key" criteria={{\n    key: value\n  }} onChange={newCriteria => setValue(newCriteria.key)} />;\n}',...MathOperatorSelector.parameters?.docs?.source}}},ValueOptionSelector.parameters={...ValueOptionSelector.parameters,docs:{...ValueOptionSelector.parameters?.docs,source:{originalSource:'(props: CohortSelectorFieldProps) => {\n  const [value, setValue] = useState<string | undefined>(Object.keys(props.fieldOptionGroupTypes?.[0] ?? {})?.[0] ?? null);\n  return <CohortSelectorField {...props} fieldKey="key" criteria={{\n    key: value\n  }} onChange={newCriteria => setValue(newCriteria.key)} />;\n}',...ValueOptionSelector.parameters?.docs?.source}}}}}]);