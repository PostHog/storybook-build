"use strict";(self.webpackChunkposthog=self.webpackChunkposthog||[]).push([[75986],{"./frontend/src/scenes/events/Events.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Events:()=>Events,scene:()=>scene});var PageHeader=__webpack_require__("./frontend/src/lib/components/PageHeader.tsx"),index_esm=__webpack_require__("./node_modules/.pnpm/kea@3.1.5_react@18.2.0/node_modules/kea/lib/index.esm.js"),fast_deep_equal=__webpack_require__("./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js"),fast_deep_equal_default=__webpack_require__.n(fast_deep_equal),lib=__webpack_require__("./node_modules/.pnpm/kea-router@3.1.4_kea@3.1.5/node_modules/kea-router/lib/index.js"),LemonToast=__webpack_require__("./frontend/src/lib/lemon-ui/LemonToast/LemonToast.tsx"),utils=__webpack_require__("./frontend/src/lib/utils.tsx"),defaults=__webpack_require__("./frontend/src/scenes/events/defaults.ts"),teamLogic=__webpack_require__("./frontend/src/scenes/teamLogic.tsx"),urls=__webpack_require__("./frontend/src/scenes/urls.ts"),defaultEventsQuery=__webpack_require__("./frontend/src/queries/nodes/DataTable/defaultEventsQuery.ts");let eventsSceneLogic=(0,index_esm.kea)([(0,index_esm.path)(["scenes","events","eventsSceneLogic"]),(0,index_esm.connect)({values:[teamLogic.teamLogic,["currentTeam"]]}),(0,index_esm.actions)({setQuery:query=>({query})}),(0,index_esm.reducers)({savedQuery:[null,{setQuery:(_,_ref)=>{let{query}=_ref;return query}}]}),(0,index_esm.selectors)({defaultQuery:[s=>[s.currentTeam],currentTeam=>{let defaultSourceForTeam=currentTeam&&(0,defaultEventsQuery.Rr)(currentTeam),defaultForScene=(0,defaults.w)();return defaultSourceForTeam?{...defaultForScene,source:defaultSourceForTeam}:defaultForScene}],query:[s=>[s.savedQuery,s.defaultQuery],(savedQuery,defaultQuery)=>savedQuery||defaultQuery]}),(0,lib.actionToUrl)(_ref2=>{let{values}=_ref2;return{setQuery:()=>[urls.j.events(),{},(0,utils.h0)(values.query,values.defaultQuery)?{}:{q:values.query},{replace:!0}]}}),(0,lib.urlToAction)(_ref3=>{let{actions,values}=_ref3;return{[urls.j.events()]:(_,__,_ref4)=>{let{q:queryParam}=_ref4;fast_deep_equal_default()(queryParam,values.query)||(queryParam?"object"==typeof queryParam?actions.setQuery(queryParam):(LemonToast.UJ.error("Invalid query in URL"),console.error({queryParam})):(0,utils.h0)(values.query,values.defaultQuery)||actions.setQuery(values.defaultQuery))}}})]);var Query=__webpack_require__("./frontend/src/queries/Query/Query.tsx"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");function EventsScene(){let{query}=(0,index_esm.useValues)(eventsSceneLogic),{setQuery}=(0,index_esm.useActions)(eventsSceneLogic);return(0,jsx_runtime.jsx)(Query.A,{query:query,setQuery:setQuery,context:{showOpenEditorButton:!0}})}let scene={component:Events,logic:eventsSceneLogic};function Events(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(PageHeader.m,{}),(0,jsx_runtime.jsx)(EventsScene,{})]})}}}]);